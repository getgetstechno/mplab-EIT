

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Feb 21 11:25:10 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	inittext,global,class=CODE,delta=2
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,merge=1,delta=2
    42                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text9,local,class=CODE,merge=1,delta=2
    44                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text11,local,class=CODE,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,merge=1,delta=2
    49                           	psect	text15,local,class=CODE,merge=1,delta=2
    50                           	psect	text16,local,class=CODE,merge=1,delta=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2
    52                           	psect	text18,local,class=CODE,merge=1,delta=2
    53                           	psect	text19,local,class=CODE,merge=1,delta=2
    54                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text24,local,class=CODE,merge=1,delta=2
    59                           	psect	text25,local,class=CODE,merge=1,delta=2
    60                           	psect	text26,local,class=CODE,merge=1,delta=2
    61                           	psect	text27,local,class=CODE,merge=1,delta=2
    62                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text31,local,class=CODE,merge=1,delta=2
    66                           	psect	text32,local,class=CODE,merge=1,delta=2
    67                           	psect	text33,local,class=CODE,merge=1,delta=2
    68                           	psect	text34,local,class=CODE,merge=1,delta=2
    69                           	psect	text35,local,class=CODE,merge=1,delta=2
    70                           	psect	text36,local,class=CODE,merge=1,delta=2
    71                           	psect	text37,local,class=CODE,merge=1,delta=2
    72                           	psect	text38,local,class=CODE,merge=1,delta=2
    73                           	psect	text39,local,class=CODE,merge=1,delta=2
    74                           	psect	text40,local,class=CODE,merge=1,delta=2
    75                           	psect	text41,local,class=CODE,merge=1,delta=2
    76                           	psect	text42,local,class=CODE,merge=1,delta=2
    77                           	psect	text43,local,class=CODE,merge=1,delta=2
    78                           	psect	text44,local,class=CODE,merge=1,delta=2
    79                           	psect	text45,local,class=CODE,merge=1,delta=2
    80                           	psect	text46,local,class=CODE,merge=1,delta=2
    81                           	psect	text47,local,class=CODE,merge=1,delta=2
    82                           	psect	text48,local,class=CODE,merge=1,delta=2
    83                           	psect	text49,local,class=CODE,merge=1,delta=2
    84                           	psect	text50,local,class=CODE,merge=1,delta=2
    85                           	psect	text51,local,class=CODE,merge=1,delta=2
    86                           	psect	text52,local,class=CODE,merge=1,delta=2
    87                           	psect	text53,local,class=CODE,merge=1,delta=2
    88                           	psect	text54,local,class=CODE,merge=1,delta=2
    89                           	psect	text55,local,class=CODE,merge=1,delta=2
    90                           	psect	text56,local,class=CODE,merge=1,delta=2
    91                           	psect	text57,local,class=CODE,merge=1,delta=2
    92                           	psect	text58,local,class=CODE,merge=1,delta=2
    93                           	psect	text59,local,class=CODE,merge=1,delta=2
    94                           	psect	text60,local,class=CODE,merge=1,delta=2
    95                           	psect	text61,local,class=CODE,merge=1,delta=2
    96                           	psect	text62,local,class=CODE,merge=1,delta=2
    97                           	psect	text63,local,class=CODE,merge=1,delta=2
    98                           	psect	text64,local,class=CODE,merge=1,delta=2
    99                           	psect	text65,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text66,local,class=CODE,merge=1,delta=2,group=2
   101                           	psect	text67,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text68,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text69,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text70,local,class=CODE,merge=1,delta=2
   105                           	psect	intentry,global,class=CODE,delta=2
   106                           	psect	text72,local,class=CODE,merge=1,delta=2
   107                           	psect	text73,local,class=CODE,merge=1,delta=2
   108                           	psect	text74,local,class=CODE,merge=1,delta=2
   109                           	psect	text75,local,class=CODE,merge=1,delta=2
   110                           	psect	text76,local,class=CODE,merge=1,delta=2
   111                           	psect	text77,local,class=CODE,merge=1,delta=2
   112                           	psect	text78,local,class=CODE,merge=1,delta=2
   113                           	psect	text79,local,class=CODE,merge=1,delta=2
   114                           	psect	text80,local,class=CODE,merge=1,delta=2
   115                           	psect	text81,local,class=CODE,merge=1,delta=2
   116                           	psect	text82,local,class=CODE,merge=1,delta=2
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   118                           	dabs	1,0x7E,2
   119     0000                     
   120                           ; Generated 22/03/2023 GMT
   121                           ; 
   122                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution. Publication is not required when
   136                           ;        this file is used in an embedded application.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC16F18345 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154     0000                     	;# 
   155     0001                     	;# 
   156     0002                     	;# 
   157     0003                     	;# 
   158     0004                     	;# 
   159     0005                     	;# 
   160     0006                     	;# 
   161     0007                     	;# 
   162     0008                     	;# 
   163     0009                     	;# 
   164     000A                     	;# 
   165     000B                     	;# 
   166     000C                     	;# 
   167     000D                     	;# 
   168     000E                     	;# 
   169     0010                     	;# 
   170     0011                     	;# 
   171     0012                     	;# 
   172     0013                     	;# 
   173     0014                     	;# 
   174     0015                     	;# 
   175     0015                     	;# 
   176     0016                     	;# 
   177     0016                     	;# 
   178     0017                     	;# 
   179     0018                     	;# 
   180     0019                     	;# 
   181     0019                     	;# 
   182     001A                     	;# 
   183     001B                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     0090                     	;# 
   192     0091                     	;# 
   193     0092                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0097                     	;# 
   197     009B                     	;# 
   198     009B                     	;# 
   199     009C                     	;# 
   200     009D                     	;# 
   201     009E                     	;# 
   202     009F                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     0111                     	;# 
   207     0112                     	;# 
   208     0113                     	;# 
   209     0114                     	;# 
   210     0115                     	;# 
   211     0116                     	;# 
   212     0117                     	;# 
   213     0118                     	;# 
   214     0119                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217     018E                     	;# 
   218     0197                     	;# 
   219     0199                     	;# 
   220     0199                     	;# 
   221     0199                     	;# 
   222     019A                     	;# 
   223     019A                     	;# 
   224     019A                     	;# 
   225     019B                     	;# 
   226     019B                     	;# 
   227     019B                     	;# 
   228     019B                     	;# 
   229     019B                     	;# 
   230     019C                     	;# 
   231     019C                     	;# 
   232     019C                     	;# 
   233     019D                     	;# 
   234     019D                     	;# 
   235     019D                     	;# 
   236     019E                     	;# 
   237     019E                     	;# 
   238     019E                     	;# 
   239     019F                     	;# 
   240     019F                     	;# 
   241     019F                     	;# 
   242     019F                     	;# 
   243     019F                     	;# 
   244     020C                     	;# 
   245     020D                     	;# 
   246     020E                     	;# 
   247     0211                     	;# 
   248     0211                     	;# 
   249     0212                     	;# 
   250     0212                     	;# 
   251     0213                     	;# 
   252     0213                     	;# 
   253     0214                     	;# 
   254     0214                     	;# 
   255     0215                     	;# 
   256     0215                     	;# 
   257     0215                     	;# 
   258     0215                     	;# 
   259     0216                     	;# 
   260     0216                     	;# 
   261     0217                     	;# 
   262     0217                     	;# 
   263     0219                     	;# 
   264     021A                     	;# 
   265     021B                     	;# 
   266     021C                     	;# 
   267     021D                     	;# 
   268     021D                     	;# 
   269     021E                     	;# 
   270     021F                     	;# 
   271     028C                     	;# 
   272     028D                     	;# 
   273     028E                     	;# 
   274     0291                     	;# 
   275     0291                     	;# 
   276     0292                     	;# 
   277     0293                     	;# 
   278     0294                     	;# 
   279     0295                     	;# 
   280     0295                     	;# 
   281     0296                     	;# 
   282     0297                     	;# 
   283     0298                     	;# 
   284     029F                     	;# 
   285     030C                     	;# 
   286     030D                     	;# 
   287     030E                     	;# 
   288     0311                     	;# 
   289     0311                     	;# 
   290     0312                     	;# 
   291     0313                     	;# 
   292     0314                     	;# 
   293     0315                     	;# 
   294     0315                     	;# 
   295     0316                     	;# 
   296     0317                     	;# 
   297     0318                     	;# 
   298     038C                     	;# 
   299     038D                     	;# 
   300     038E                     	;# 
   301     0391                     	;# 
   302     0392                     	;# 
   303     0393                     	;# 
   304     0394                     	;# 
   305     0395                     	;# 
   306     0396                     	;# 
   307     0397                     	;# 
   308     0398                     	;# 
   309     0399                     	;# 
   310     039A                     	;# 
   311     039C                     	;# 
   312     039D                     	;# 
   313     039E                     	;# 
   314     039F                     	;# 
   315     0411                     	;# 
   316     0411                     	;# 
   317     0412                     	;# 
   318     0413                     	;# 
   319     0414                     	;# 
   320     0415                     	;# 
   321     0416                     	;# 
   322     0417                     	;# 
   323     0418                     	;# 
   324     0418                     	;# 
   325     0419                     	;# 
   326     041A                     	;# 
   327     041B                     	;# 
   328     041C                     	;# 
   329     041D                     	;# 
   330     041E                     	;# 
   331     041F                     	;# 
   332     0498                     	;# 
   333     0498                     	;# 
   334     0499                     	;# 
   335     049A                     	;# 
   336     049B                     	;# 
   337     049B                     	;# 
   338     049C                     	;# 
   339     049D                     	;# 
   340     049E                     	;# 
   341     049F                     	;# 
   342     0617                     	;# 
   343     0618                     	;# 
   344     0619                     	;# 
   345     0619                     	;# 
   346     061A                     	;# 
   347     061B                     	;# 
   348     061C                     	;# 
   349     061C                     	;# 
   350     061F                     	;# 
   351     0691                     	;# 
   352     0692                     	;# 
   353     0693                     	;# 
   354     0694                     	;# 
   355     0695                     	;# 
   356     0696                     	;# 
   357     0697                     	;# 
   358     0698                     	;# 
   359     0699                     	;# 
   360     0711                     	;# 
   361     0712                     	;# 
   362     0713                     	;# 
   363     0714                     	;# 
   364     0715                     	;# 
   365     0716                     	;# 
   366     0717                     	;# 
   367     0718                     	;# 
   368     0719                     	;# 
   369     0891                     	;# 
   370     0891                     	;# 
   371     0891                     	;# 
   372     0891                     	;# 
   373     0891                     	;# 
   374     0891                     	;# 
   375     0892                     	;# 
   376     0892                     	;# 
   377     0892                     	;# 
   378     0893                     	;# 
   379     0893                     	;# 
   380     0893                     	;# 
   381     0893                     	;# 
   382     0893                     	;# 
   383     0893                     	;# 
   384     0894                     	;# 
   385     0894                     	;# 
   386     0894                     	;# 
   387     0895                     	;# 
   388     0895                     	;# 
   389     0895                     	;# 
   390     0896                     	;# 
   391     0896                     	;# 
   392     0896                     	;# 
   393     089B                     	;# 
   394     0911                     	;# 
   395     0912                     	;# 
   396     0913                     	;# 
   397     0914                     	;# 
   398     0915                     	;# 
   399     0916                     	;# 
   400     0918                     	;# 
   401     0919                     	;# 
   402     091A                     	;# 
   403     091B                     	;# 
   404     091C                     	;# 
   405     091D                     	;# 
   406     091E                     	;# 
   407     091F                     	;# 
   408     0E0F                     	;# 
   409     0E10                     	;# 
   410     0E11                     	;# 
   411     0E12                     	;# 
   412     0E13                     	;# 
   413     0E14                     	;# 
   414     0E15                     	;# 
   415     0E16                     	;# 
   416     0E17                     	;# 
   417     0E18                     	;# 
   418     0E19                     	;# 
   419     0E1A                     	;# 
   420     0E1B                     	;# 
   421     0E1C                     	;# 
   422     0E1D                     	;# 
   423     0E1E                     	;# 
   424     0E1F                     	;# 
   425     0E20                     	;# 
   426     0E21                     	;# 
   427     0E22                     	;# 
   428     0E24                     	;# 
   429     0E25                     	;# 
   430     0E28                     	;# 
   431     0E29                     	;# 
   432     0E2A                     	;# 
   433     0E2B                     	;# 
   434     0E2C                     	;# 
   435     0E2D                     	;# 
   436     0E2E                     	;# 
   437     0E2F                     	;# 
   438     0E90                     	;# 
   439     0E91                     	;# 
   440     0E92                     	;# 
   441     0E94                     	;# 
   442     0E95                     	;# 
   443     0E9C                     	;# 
   444     0E9D                     	;# 
   445     0E9E                     	;# 
   446     0E9F                     	;# 
   447     0EA0                     	;# 
   448     0EA1                     	;# 
   449     0EA2                     	;# 
   450     0EA3                     	;# 
   451     0EA4                     	;# 
   452     0EA5                     	;# 
   453     0EA6                     	;# 
   454     0EA7                     	;# 
   455     0F0F                     	;# 
   456     0F10                     	;# 
   457     0F11                     	;# 
   458     0F12                     	;# 
   459     0F13                     	;# 
   460     0F14                     	;# 
   461     0F15                     	;# 
   462     0F16                     	;# 
   463     0F17                     	;# 
   464     0F18                     	;# 
   465     0F19                     	;# 
   466     0F1A                     	;# 
   467     0F1B                     	;# 
   468     0F1C                     	;# 
   469     0F1D                     	;# 
   470     0F1E                     	;# 
   471     0F1F                     	;# 
   472     0F20                     	;# 
   473     0F21                     	;# 
   474     0F22                     	;# 
   475     0F23                     	;# 
   476     0F24                     	;# 
   477     0F25                     	;# 
   478     0F26                     	;# 
   479     0F27                     	;# 
   480     0F28                     	;# 
   481     0F29                     	;# 
   482     0F2A                     	;# 
   483     0F2B                     	;# 
   484     0F2C                     	;# 
   485     0F2D                     	;# 
   486     0F2E                     	;# 
   487     0F2F                     	;# 
   488     0F30                     	;# 
   489     0F31                     	;# 
   490     0F32                     	;# 
   491     0F33                     	;# 
   492     0F34                     	;# 
   493     0F35                     	;# 
   494     0F36                     	;# 
   495     0F37                     	;# 
   496     0FE4                     	;# 
   497     0FE5                     	;# 
   498     0FE6                     	;# 
   499     0FE7                     	;# 
   500     0FE8                     	;# 
   501     0FE9                     	;# 
   502     0FEA                     	;# 
   503     0FEB                     	;# 
   504     0FED                     	;# 
   505     0FEE                     	;# 
   506     0FEF                     	;# 
   507     0000                     	;# 
   508     0001                     	;# 
   509     0002                     	;# 
   510     0003                     	;# 
   511     0004                     	;# 
   512     0005                     	;# 
   513     0006                     	;# 
   514     0007                     	;# 
   515     0008                     	;# 
   516     0009                     	;# 
   517     000A                     	;# 
   518     000B                     	;# 
   519     000C                     	;# 
   520     000D                     	;# 
   521     000E                     	;# 
   522     0010                     	;# 
   523     0011                     	;# 
   524     0012                     	;# 
   525     0013                     	;# 
   526     0014                     	;# 
   527     0015                     	;# 
   528     0015                     	;# 
   529     0016                     	;# 
   530     0016                     	;# 
   531     0017                     	;# 
   532     0018                     	;# 
   533     0019                     	;# 
   534     0019                     	;# 
   535     001A                     	;# 
   536     001B                     	;# 
   537     001C                     	;# 
   538     001D                     	;# 
   539     001E                     	;# 
   540     001F                     	;# 
   541     008C                     	;# 
   542     008D                     	;# 
   543     008E                     	;# 
   544     0090                     	;# 
   545     0091                     	;# 
   546     0092                     	;# 
   547     0093                     	;# 
   548     0094                     	;# 
   549     0097                     	;# 
   550     009B                     	;# 
   551     009B                     	;# 
   552     009C                     	;# 
   553     009D                     	;# 
   554     009E                     	;# 
   555     009F                     	;# 
   556     010C                     	;# 
   557     010D                     	;# 
   558     010E                     	;# 
   559     0111                     	;# 
   560     0112                     	;# 
   561     0113                     	;# 
   562     0114                     	;# 
   563     0115                     	;# 
   564     0116                     	;# 
   565     0117                     	;# 
   566     0118                     	;# 
   567     0119                     	;# 
   568     018C                     	;# 
   569     018D                     	;# 
   570     018E                     	;# 
   571     0197                     	;# 
   572     0199                     	;# 
   573     0199                     	;# 
   574     0199                     	;# 
   575     019A                     	;# 
   576     019A                     	;# 
   577     019A                     	;# 
   578     019B                     	;# 
   579     019B                     	;# 
   580     019B                     	;# 
   581     019B                     	;# 
   582     019B                     	;# 
   583     019C                     	;# 
   584     019C                     	;# 
   585     019C                     	;# 
   586     019D                     	;# 
   587     019D                     	;# 
   588     019D                     	;# 
   589     019E                     	;# 
   590     019E                     	;# 
   591     019E                     	;# 
   592     019F                     	;# 
   593     019F                     	;# 
   594     019F                     	;# 
   595     019F                     	;# 
   596     019F                     	;# 
   597     020C                     	;# 
   598     020D                     	;# 
   599     020E                     	;# 
   600     0211                     	;# 
   601     0211                     	;# 
   602     0212                     	;# 
   603     0212                     	;# 
   604     0213                     	;# 
   605     0213                     	;# 
   606     0214                     	;# 
   607     0214                     	;# 
   608     0215                     	;# 
   609     0215                     	;# 
   610     0215                     	;# 
   611     0215                     	;# 
   612     0216                     	;# 
   613     0216                     	;# 
   614     0217                     	;# 
   615     0217                     	;# 
   616     0219                     	;# 
   617     021A                     	;# 
   618     021B                     	;# 
   619     021C                     	;# 
   620     021D                     	;# 
   621     021D                     	;# 
   622     021E                     	;# 
   623     021F                     	;# 
   624     028C                     	;# 
   625     028D                     	;# 
   626     028E                     	;# 
   627     0291                     	;# 
   628     0291                     	;# 
   629     0292                     	;# 
   630     0293                     	;# 
   631     0294                     	;# 
   632     0295                     	;# 
   633     0295                     	;# 
   634     0296                     	;# 
   635     0297                     	;# 
   636     0298                     	;# 
   637     029F                     	;# 
   638     030C                     	;# 
   639     030D                     	;# 
   640     030E                     	;# 
   641     0311                     	;# 
   642     0311                     	;# 
   643     0312                     	;# 
   644     0313                     	;# 
   645     0314                     	;# 
   646     0315                     	;# 
   647     0315                     	;# 
   648     0316                     	;# 
   649     0317                     	;# 
   650     0318                     	;# 
   651     038C                     	;# 
   652     038D                     	;# 
   653     038E                     	;# 
   654     0391                     	;# 
   655     0392                     	;# 
   656     0393                     	;# 
   657     0394                     	;# 
   658     0395                     	;# 
   659     0396                     	;# 
   660     0397                     	;# 
   661     0398                     	;# 
   662     0399                     	;# 
   663     039A                     	;# 
   664     039C                     	;# 
   665     039D                     	;# 
   666     039E                     	;# 
   667     039F                     	;# 
   668     0411                     	;# 
   669     0411                     	;# 
   670     0412                     	;# 
   671     0413                     	;# 
   672     0414                     	;# 
   673     0415                     	;# 
   674     0416                     	;# 
   675     0417                     	;# 
   676     0418                     	;# 
   677     0418                     	;# 
   678     0419                     	;# 
   679     041A                     	;# 
   680     041B                     	;# 
   681     041C                     	;# 
   682     041D                     	;# 
   683     041E                     	;# 
   684     041F                     	;# 
   685     0498                     	;# 
   686     0498                     	;# 
   687     0499                     	;# 
   688     049A                     	;# 
   689     049B                     	;# 
   690     049B                     	;# 
   691     049C                     	;# 
   692     049D                     	;# 
   693     049E                     	;# 
   694     049F                     	;# 
   695     0617                     	;# 
   696     0618                     	;# 
   697     0619                     	;# 
   698     0619                     	;# 
   699     061A                     	;# 
   700     061B                     	;# 
   701     061C                     	;# 
   702     061C                     	;# 
   703     061F                     	;# 
   704     0691                     	;# 
   705     0692                     	;# 
   706     0693                     	;# 
   707     0694                     	;# 
   708     0695                     	;# 
   709     0696                     	;# 
   710     0697                     	;# 
   711     0698                     	;# 
   712     0699                     	;# 
   713     0711                     	;# 
   714     0712                     	;# 
   715     0713                     	;# 
   716     0714                     	;# 
   717     0715                     	;# 
   718     0716                     	;# 
   719     0717                     	;# 
   720     0718                     	;# 
   721     0719                     	;# 
   722     0891                     	;# 
   723     0891                     	;# 
   724     0891                     	;# 
   725     0891                     	;# 
   726     0891                     	;# 
   727     0891                     	;# 
   728     0892                     	;# 
   729     0892                     	;# 
   730     0892                     	;# 
   731     0893                     	;# 
   732     0893                     	;# 
   733     0893                     	;# 
   734     0893                     	;# 
   735     0893                     	;# 
   736     0893                     	;# 
   737     0894                     	;# 
   738     0894                     	;# 
   739     0894                     	;# 
   740     0895                     	;# 
   741     0895                     	;# 
   742     0895                     	;# 
   743     0896                     	;# 
   744     0896                     	;# 
   745     0896                     	;# 
   746     089B                     	;# 
   747     0911                     	;# 
   748     0912                     	;# 
   749     0913                     	;# 
   750     0914                     	;# 
   751     0915                     	;# 
   752     0916                     	;# 
   753     0918                     	;# 
   754     0919                     	;# 
   755     091A                     	;# 
   756     091B                     	;# 
   757     091C                     	;# 
   758     091D                     	;# 
   759     091E                     	;# 
   760     091F                     	;# 
   761     0E0F                     	;# 
   762     0E10                     	;# 
   763     0E11                     	;# 
   764     0E12                     	;# 
   765     0E13                     	;# 
   766     0E14                     	;# 
   767     0E15                     	;# 
   768     0E16                     	;# 
   769     0E17                     	;# 
   770     0E18                     	;# 
   771     0E19                     	;# 
   772     0E1A                     	;# 
   773     0E1B                     	;# 
   774     0E1C                     	;# 
   775     0E1D                     	;# 
   776     0E1E                     	;# 
   777     0E1F                     	;# 
   778     0E20                     	;# 
   779     0E21                     	;# 
   780     0E22                     	;# 
   781     0E24                     	;# 
   782     0E25                     	;# 
   783     0E28                     	;# 
   784     0E29                     	;# 
   785     0E2A                     	;# 
   786     0E2B                     	;# 
   787     0E2C                     	;# 
   788     0E2D                     	;# 
   789     0E2E                     	;# 
   790     0E2F                     	;# 
   791     0E90                     	;# 
   792     0E91                     	;# 
   793     0E92                     	;# 
   794     0E94                     	;# 
   795     0E95                     	;# 
   796     0E9C                     	;# 
   797     0E9D                     	;# 
   798     0E9E                     	;# 
   799     0E9F                     	;# 
   800     0EA0                     	;# 
   801     0EA1                     	;# 
   802     0EA2                     	;# 
   803     0EA3                     	;# 
   804     0EA4                     	;# 
   805     0EA5                     	;# 
   806     0EA6                     	;# 
   807     0EA7                     	;# 
   808     0F0F                     	;# 
   809     0F10                     	;# 
   810     0F11                     	;# 
   811     0F12                     	;# 
   812     0F13                     	;# 
   813     0F14                     	;# 
   814     0F15                     	;# 
   815     0F16                     	;# 
   816     0F17                     	;# 
   817     0F18                     	;# 
   818     0F19                     	;# 
   819     0F1A                     	;# 
   820     0F1B                     	;# 
   821     0F1C                     	;# 
   822     0F1D                     	;# 
   823     0F1E                     	;# 
   824     0F1F                     	;# 
   825     0F20                     	;# 
   826     0F21                     	;# 
   827     0F22                     	;# 
   828     0F23                     	;# 
   829     0F24                     	;# 
   830     0F25                     	;# 
   831     0F26                     	;# 
   832     0F27                     	;# 
   833     0F28                     	;# 
   834     0F29                     	;# 
   835     0F2A                     	;# 
   836     0F2B                     	;# 
   837     0F2C                     	;# 
   838     0F2D                     	;# 
   839     0F2E                     	;# 
   840     0F2F                     	;# 
   841     0F30                     	;# 
   842     0F31                     	;# 
   843     0F32                     	;# 
   844     0F33                     	;# 
   845     0F34                     	;# 
   846     0F35                     	;# 
   847     0F36                     	;# 
   848     0F37                     	;# 
   849     0FE4                     	;# 
   850     0FE5                     	;# 
   851     0FE6                     	;# 
   852     0FE7                     	;# 
   853     0FE8                     	;# 
   854     0FE9                     	;# 
   855     0FEA                     	;# 
   856     0FEB                     	;# 
   857     0FED                     	;# 
   858     0FEE                     	;# 
   859     0FEF                     	;# 
   860     0000                     	;# 
   861     0001                     	;# 
   862     0002                     	;# 
   863     0003                     	;# 
   864     0004                     	;# 
   865     0005                     	;# 
   866     0006                     	;# 
   867     0007                     	;# 
   868     0008                     	;# 
   869     0009                     	;# 
   870     000A                     	;# 
   871     000B                     	;# 
   872     000C                     	;# 
   873     000D                     	;# 
   874     000E                     	;# 
   875     0010                     	;# 
   876     0011                     	;# 
   877     0012                     	;# 
   878     0013                     	;# 
   879     0014                     	;# 
   880     0015                     	;# 
   881     0015                     	;# 
   882     0016                     	;# 
   883     0016                     	;# 
   884     0017                     	;# 
   885     0018                     	;# 
   886     0019                     	;# 
   887     0019                     	;# 
   888     001A                     	;# 
   889     001B                     	;# 
   890     001C                     	;# 
   891     001D                     	;# 
   892     001E                     	;# 
   893     001F                     	;# 
   894     008C                     	;# 
   895     008D                     	;# 
   896     008E                     	;# 
   897     0090                     	;# 
   898     0091                     	;# 
   899     0092                     	;# 
   900     0093                     	;# 
   901     0094                     	;# 
   902     0097                     	;# 
   903     009B                     	;# 
   904     009B                     	;# 
   905     009C                     	;# 
   906     009D                     	;# 
   907     009E                     	;# 
   908     009F                     	;# 
   909     010C                     	;# 
   910     010D                     	;# 
   911     010E                     	;# 
   912     0111                     	;# 
   913     0112                     	;# 
   914     0113                     	;# 
   915     0114                     	;# 
   916     0115                     	;# 
   917     0116                     	;# 
   918     0117                     	;# 
   919     0118                     	;# 
   920     0119                     	;# 
   921     018C                     	;# 
   922     018D                     	;# 
   923     018E                     	;# 
   924     0197                     	;# 
   925     0199                     	;# 
   926     0199                     	;# 
   927     0199                     	;# 
   928     019A                     	;# 
   929     019A                     	;# 
   930     019A                     	;# 
   931     019B                     	;# 
   932     019B                     	;# 
   933     019B                     	;# 
   934     019B                     	;# 
   935     019B                     	;# 
   936     019C                     	;# 
   937     019C                     	;# 
   938     019C                     	;# 
   939     019D                     	;# 
   940     019D                     	;# 
   941     019D                     	;# 
   942     019E                     	;# 
   943     019E                     	;# 
   944     019E                     	;# 
   945     019F                     	;# 
   946     019F                     	;# 
   947     019F                     	;# 
   948     019F                     	;# 
   949     019F                     	;# 
   950     020C                     	;# 
   951     020D                     	;# 
   952     020E                     	;# 
   953     0211                     	;# 
   954     0211                     	;# 
   955     0212                     	;# 
   956     0212                     	;# 
   957     0213                     	;# 
   958     0213                     	;# 
   959     0214                     	;# 
   960     0214                     	;# 
   961     0215                     	;# 
   962     0215                     	;# 
   963     0215                     	;# 
   964     0215                     	;# 
   965     0216                     	;# 
   966     0216                     	;# 
   967     0217                     	;# 
   968     0217                     	;# 
   969     0219                     	;# 
   970     021A                     	;# 
   971     021B                     	;# 
   972     021C                     	;# 
   973     021D                     	;# 
   974     021D                     	;# 
   975     021E                     	;# 
   976     021F                     	;# 
   977     028C                     	;# 
   978     028D                     	;# 
   979     028E                     	;# 
   980     0291                     	;# 
   981     0291                     	;# 
   982     0292                     	;# 
   983     0293                     	;# 
   984     0294                     	;# 
   985     0295                     	;# 
   986     0295                     	;# 
   987     0296                     	;# 
   988     0297                     	;# 
   989     0298                     	;# 
   990     029F                     	;# 
   991     030C                     	;# 
   992     030D                     	;# 
   993     030E                     	;# 
   994     0311                     	;# 
   995     0311                     	;# 
   996     0312                     	;# 
   997     0313                     	;# 
   998     0314                     	;# 
   999     0315                     	;# 
  1000     0315                     	;# 
  1001     0316                     	;# 
  1002     0317                     	;# 
  1003     0318                     	;# 
  1004     038C                     	;# 
  1005     038D                     	;# 
  1006     038E                     	;# 
  1007     0391                     	;# 
  1008     0392                     	;# 
  1009     0393                     	;# 
  1010     0394                     	;# 
  1011     0395                     	;# 
  1012     0396                     	;# 
  1013     0397                     	;# 
  1014     0398                     	;# 
  1015     0399                     	;# 
  1016     039A                     	;# 
  1017     039C                     	;# 
  1018     039D                     	;# 
  1019     039E                     	;# 
  1020     039F                     	;# 
  1021     0411                     	;# 
  1022     0411                     	;# 
  1023     0412                     	;# 
  1024     0413                     	;# 
  1025     0414                     	;# 
  1026     0415                     	;# 
  1027     0416                     	;# 
  1028     0417                     	;# 
  1029     0418                     	;# 
  1030     0418                     	;# 
  1031     0419                     	;# 
  1032     041A                     	;# 
  1033     041B                     	;# 
  1034     041C                     	;# 
  1035     041D                     	;# 
  1036     041E                     	;# 
  1037     041F                     	;# 
  1038     0498                     	;# 
  1039     0498                     	;# 
  1040     0499                     	;# 
  1041     049A                     	;# 
  1042     049B                     	;# 
  1043     049B                     	;# 
  1044     049C                     	;# 
  1045     049D                     	;# 
  1046     049E                     	;# 
  1047     049F                     	;# 
  1048     0617                     	;# 
  1049     0618                     	;# 
  1050     0619                     	;# 
  1051     0619                     	;# 
  1052     061A                     	;# 
  1053     061B                     	;# 
  1054     061C                     	;# 
  1055     061C                     	;# 
  1056     061F                     	;# 
  1057     0691                     	;# 
  1058     0692                     	;# 
  1059     0693                     	;# 
  1060     0694                     	;# 
  1061     0695                     	;# 
  1062     0696                     	;# 
  1063     0697                     	;# 
  1064     0698                     	;# 
  1065     0699                     	;# 
  1066     0711                     	;# 
  1067     0712                     	;# 
  1068     0713                     	;# 
  1069     0714                     	;# 
  1070     0715                     	;# 
  1071     0716                     	;# 
  1072     0717                     	;# 
  1073     0718                     	;# 
  1074     0719                     	;# 
  1075     0891                     	;# 
  1076     0891                     	;# 
  1077     0891                     	;# 
  1078     0891                     	;# 
  1079     0891                     	;# 
  1080     0891                     	;# 
  1081     0892                     	;# 
  1082     0892                     	;# 
  1083     0892                     	;# 
  1084     0893                     	;# 
  1085     0893                     	;# 
  1086     0893                     	;# 
  1087     0893                     	;# 
  1088     0893                     	;# 
  1089     0893                     	;# 
  1090     0894                     	;# 
  1091     0894                     	;# 
  1092     0894                     	;# 
  1093     0895                     	;# 
  1094     0895                     	;# 
  1095     0895                     	;# 
  1096     0896                     	;# 
  1097     0896                     	;# 
  1098     0896                     	;# 
  1099     089B                     	;# 
  1100     0911                     	;# 
  1101     0912                     	;# 
  1102     0913                     	;# 
  1103     0914                     	;# 
  1104     0915                     	;# 
  1105     0916                     	;# 
  1106     0918                     	;# 
  1107     0919                     	;# 
  1108     091A                     	;# 
  1109     091B                     	;# 
  1110     091C                     	;# 
  1111     091D                     	;# 
  1112     091E                     	;# 
  1113     091F                     	;# 
  1114     0E0F                     	;# 
  1115     0E10                     	;# 
  1116     0E11                     	;# 
  1117     0E12                     	;# 
  1118     0E13                     	;# 
  1119     0E14                     	;# 
  1120     0E15                     	;# 
  1121     0E16                     	;# 
  1122     0E17                     	;# 
  1123     0E18                     	;# 
  1124     0E19                     	;# 
  1125     0E1A                     	;# 
  1126     0E1B                     	;# 
  1127     0E1C                     	;# 
  1128     0E1D                     	;# 
  1129     0E1E                     	;# 
  1130     0E1F                     	;# 
  1131     0E20                     	;# 
  1132     0E21                     	;# 
  1133     0E22                     	;# 
  1134     0E24                     	;# 
  1135     0E25                     	;# 
  1136     0E28                     	;# 
  1137     0E29                     	;# 
  1138     0E2A                     	;# 
  1139     0E2B                     	;# 
  1140     0E2C                     	;# 
  1141     0E2D                     	;# 
  1142     0E2E                     	;# 
  1143     0E2F                     	;# 
  1144     0E90                     	;# 
  1145     0E91                     	;# 
  1146     0E92                     	;# 
  1147     0E94                     	;# 
  1148     0E95                     	;# 
  1149     0E9C                     	;# 
  1150     0E9D                     	;# 
  1151     0E9E                     	;# 
  1152     0E9F                     	;# 
  1153     0EA0                     	;# 
  1154     0EA1                     	;# 
  1155     0EA2                     	;# 
  1156     0EA3                     	;# 
  1157     0EA4                     	;# 
  1158     0EA5                     	;# 
  1159     0EA6                     	;# 
  1160     0EA7                     	;# 
  1161     0F0F                     	;# 
  1162     0F10                     	;# 
  1163     0F11                     	;# 
  1164     0F12                     	;# 
  1165     0F13                     	;# 
  1166     0F14                     	;# 
  1167     0F15                     	;# 
  1168     0F16                     	;# 
  1169     0F17                     	;# 
  1170     0F18                     	;# 
  1171     0F19                     	;# 
  1172     0F1A                     	;# 
  1173     0F1B                     	;# 
  1174     0F1C                     	;# 
  1175     0F1D                     	;# 
  1176     0F1E                     	;# 
  1177     0F1F                     	;# 
  1178     0F20                     	;# 
  1179     0F21                     	;# 
  1180     0F22                     	;# 
  1181     0F23                     	;# 
  1182     0F24                     	;# 
  1183     0F25                     	;# 
  1184     0F26                     	;# 
  1185     0F27                     	;# 
  1186     0F28                     	;# 
  1187     0F29                     	;# 
  1188     0F2A                     	;# 
  1189     0F2B                     	;# 
  1190     0F2C                     	;# 
  1191     0F2D                     	;# 
  1192     0F2E                     	;# 
  1193     0F2F                     	;# 
  1194     0F30                     	;# 
  1195     0F31                     	;# 
  1196     0F32                     	;# 
  1197     0F33                     	;# 
  1198     0F34                     	;# 
  1199     0F35                     	;# 
  1200     0F36                     	;# 
  1201     0F37                     	;# 
  1202     0FE4                     	;# 
  1203     0FE5                     	;# 
  1204     0FE6                     	;# 
  1205     0FE7                     	;# 
  1206     0FE8                     	;# 
  1207     0FE9                     	;# 
  1208     0FEA                     	;# 
  1209     0FEB                     	;# 
  1210     0FED                     	;# 
  1211     0FEE                     	;# 
  1212     0FEF                     	;# 
  1213     0000                     	;# 
  1214     0001                     	;# 
  1215     0002                     	;# 
  1216     0003                     	;# 
  1217     0004                     	;# 
  1218     0005                     	;# 
  1219     0006                     	;# 
  1220     0007                     	;# 
  1221     0008                     	;# 
  1222     0009                     	;# 
  1223     000A                     	;# 
  1224     000B                     	;# 
  1225     000C                     	;# 
  1226     000D                     	;# 
  1227     000E                     	;# 
  1228     0010                     	;# 
  1229     0011                     	;# 
  1230     0012                     	;# 
  1231     0013                     	;# 
  1232     0014                     	;# 
  1233     0015                     	;# 
  1234     0015                     	;# 
  1235     0016                     	;# 
  1236     0016                     	;# 
  1237     0017                     	;# 
  1238     0018                     	;# 
  1239     0019                     	;# 
  1240     0019                     	;# 
  1241     001A                     	;# 
  1242     001B                     	;# 
  1243     001C                     	;# 
  1244     001D                     	;# 
  1245     001E                     	;# 
  1246     001F                     	;# 
  1247     008C                     	;# 
  1248     008D                     	;# 
  1249     008E                     	;# 
  1250     0090                     	;# 
  1251     0091                     	;# 
  1252     0092                     	;# 
  1253     0093                     	;# 
  1254     0094                     	;# 
  1255     0097                     	;# 
  1256     009B                     	;# 
  1257     009B                     	;# 
  1258     009C                     	;# 
  1259     009D                     	;# 
  1260     009E                     	;# 
  1261     009F                     	;# 
  1262     010C                     	;# 
  1263     010D                     	;# 
  1264     010E                     	;# 
  1265     0111                     	;# 
  1266     0112                     	;# 
  1267     0113                     	;# 
  1268     0114                     	;# 
  1269     0115                     	;# 
  1270     0116                     	;# 
  1271     0117                     	;# 
  1272     0118                     	;# 
  1273     0119                     	;# 
  1274     018C                     	;# 
  1275     018D                     	;# 
  1276     018E                     	;# 
  1277     0197                     	;# 
  1278     0199                     	;# 
  1279     0199                     	;# 
  1280     0199                     	;# 
  1281     019A                     	;# 
  1282     019A                     	;# 
  1283     019A                     	;# 
  1284     019B                     	;# 
  1285     019B                     	;# 
  1286     019B                     	;# 
  1287     019B                     	;# 
  1288     019B                     	;# 
  1289     019C                     	;# 
  1290     019C                     	;# 
  1291     019C                     	;# 
  1292     019D                     	;# 
  1293     019D                     	;# 
  1294     019D                     	;# 
  1295     019E                     	;# 
  1296     019E                     	;# 
  1297     019E                     	;# 
  1298     019F                     	;# 
  1299     019F                     	;# 
  1300     019F                     	;# 
  1301     019F                     	;# 
  1302     019F                     	;# 
  1303     020C                     	;# 
  1304     020D                     	;# 
  1305     020E                     	;# 
  1306     0211                     	;# 
  1307     0211                     	;# 
  1308     0212                     	;# 
  1309     0212                     	;# 
  1310     0213                     	;# 
  1311     0213                     	;# 
  1312     0214                     	;# 
  1313     0214                     	;# 
  1314     0215                     	;# 
  1315     0215                     	;# 
  1316     0215                     	;# 
  1317     0215                     	;# 
  1318     0216                     	;# 
  1319     0216                     	;# 
  1320     0217                     	;# 
  1321     0217                     	;# 
  1322     0219                     	;# 
  1323     021A                     	;# 
  1324     021B                     	;# 
  1325     021C                     	;# 
  1326     021D                     	;# 
  1327     021D                     	;# 
  1328     021E                     	;# 
  1329     021F                     	;# 
  1330     028C                     	;# 
  1331     028D                     	;# 
  1332     028E                     	;# 
  1333     0291                     	;# 
  1334     0291                     	;# 
  1335     0292                     	;# 
  1336     0293                     	;# 
  1337     0294                     	;# 
  1338     0295                     	;# 
  1339     0295                     	;# 
  1340     0296                     	;# 
  1341     0297                     	;# 
  1342     0298                     	;# 
  1343     029F                     	;# 
  1344     030C                     	;# 
  1345     030D                     	;# 
  1346     030E                     	;# 
  1347     0311                     	;# 
  1348     0311                     	;# 
  1349     0312                     	;# 
  1350     0313                     	;# 
  1351     0314                     	;# 
  1352     0315                     	;# 
  1353     0315                     	;# 
  1354     0316                     	;# 
  1355     0317                     	;# 
  1356     0318                     	;# 
  1357     038C                     	;# 
  1358     038D                     	;# 
  1359     038E                     	;# 
  1360     0391                     	;# 
  1361     0392                     	;# 
  1362     0393                     	;# 
  1363     0394                     	;# 
  1364     0395                     	;# 
  1365     0396                     	;# 
  1366     0397                     	;# 
  1367     0398                     	;# 
  1368     0399                     	;# 
  1369     039A                     	;# 
  1370     039C                     	;# 
  1371     039D                     	;# 
  1372     039E                     	;# 
  1373     039F                     	;# 
  1374     0411                     	;# 
  1375     0411                     	;# 
  1376     0412                     	;# 
  1377     0413                     	;# 
  1378     0414                     	;# 
  1379     0415                     	;# 
  1380     0416                     	;# 
  1381     0417                     	;# 
  1382     0418                     	;# 
  1383     0418                     	;# 
  1384     0419                     	;# 
  1385     041A                     	;# 
  1386     041B                     	;# 
  1387     041C                     	;# 
  1388     041D                     	;# 
  1389     041E                     	;# 
  1390     041F                     	;# 
  1391     0498                     	;# 
  1392     0498                     	;# 
  1393     0499                     	;# 
  1394     049A                     	;# 
  1395     049B                     	;# 
  1396     049B                     	;# 
  1397     049C                     	;# 
  1398     049D                     	;# 
  1399     049E                     	;# 
  1400     049F                     	;# 
  1401     0617                     	;# 
  1402     0618                     	;# 
  1403     0619                     	;# 
  1404     0619                     	;# 
  1405     061A                     	;# 
  1406     061B                     	;# 
  1407     061C                     	;# 
  1408     061C                     	;# 
  1409     061F                     	;# 
  1410     0691                     	;# 
  1411     0692                     	;# 
  1412     0693                     	;# 
  1413     0694                     	;# 
  1414     0695                     	;# 
  1415     0696                     	;# 
  1416     0697                     	;# 
  1417     0698                     	;# 
  1418     0699                     	;# 
  1419     0711                     	;# 
  1420     0712                     	;# 
  1421     0713                     	;# 
  1422     0714                     	;# 
  1423     0715                     	;# 
  1424     0716                     	;# 
  1425     0717                     	;# 
  1426     0718                     	;# 
  1427     0719                     	;# 
  1428     0891                     	;# 
  1429     0891                     	;# 
  1430     0891                     	;# 
  1431     0891                     	;# 
  1432     0891                     	;# 
  1433     0891                     	;# 
  1434     0892                     	;# 
  1435     0892                     	;# 
  1436     0892                     	;# 
  1437     0893                     	;# 
  1438     0893                     	;# 
  1439     0893                     	;# 
  1440     0893                     	;# 
  1441     0893                     	;# 
  1442     0893                     	;# 
  1443     0894                     	;# 
  1444     0894                     	;# 
  1445     0894                     	;# 
  1446     0895                     	;# 
  1447     0895                     	;# 
  1448     0895                     	;# 
  1449     0896                     	;# 
  1450     0896                     	;# 
  1451     0896                     	;# 
  1452     089B                     	;# 
  1453     0911                     	;# 
  1454     0912                     	;# 
  1455     0913                     	;# 
  1456     0914                     	;# 
  1457     0915                     	;# 
  1458     0916                     	;# 
  1459     0918                     	;# 
  1460     0919                     	;# 
  1461     091A                     	;# 
  1462     091B                     	;# 
  1463     091C                     	;# 
  1464     091D                     	;# 
  1465     091E                     	;# 
  1466     091F                     	;# 
  1467     0E0F                     	;# 
  1468     0E10                     	;# 
  1469     0E11                     	;# 
  1470     0E12                     	;# 
  1471     0E13                     	;# 
  1472     0E14                     	;# 
  1473     0E15                     	;# 
  1474     0E16                     	;# 
  1475     0E17                     	;# 
  1476     0E18                     	;# 
  1477     0E19                     	;# 
  1478     0E1A                     	;# 
  1479     0E1B                     	;# 
  1480     0E1C                     	;# 
  1481     0E1D                     	;# 
  1482     0E1E                     	;# 
  1483     0E1F                     	;# 
  1484     0E20                     	;# 
  1485     0E21                     	;# 
  1486     0E22                     	;# 
  1487     0E24                     	;# 
  1488     0E25                     	;# 
  1489     0E28                     	;# 
  1490     0E29                     	;# 
  1491     0E2A                     	;# 
  1492     0E2B                     	;# 
  1493     0E2C                     	;# 
  1494     0E2D                     	;# 
  1495     0E2E                     	;# 
  1496     0E2F                     	;# 
  1497     0E90                     	;# 
  1498     0E91                     	;# 
  1499     0E92                     	;# 
  1500     0E94                     	;# 
  1501     0E95                     	;# 
  1502     0E9C                     	;# 
  1503     0E9D                     	;# 
  1504     0E9E                     	;# 
  1505     0E9F                     	;# 
  1506     0EA0                     	;# 
  1507     0EA1                     	;# 
  1508     0EA2                     	;# 
  1509     0EA3                     	;# 
  1510     0EA4                     	;# 
  1511     0EA5                     	;# 
  1512     0EA6                     	;# 
  1513     0EA7                     	;# 
  1514     0F0F                     	;# 
  1515     0F10                     	;# 
  1516     0F11                     	;# 
  1517     0F12                     	;# 
  1518     0F13                     	;# 
  1519     0F14                     	;# 
  1520     0F15                     	;# 
  1521     0F16                     	;# 
  1522     0F17                     	;# 
  1523     0F18                     	;# 
  1524     0F19                     	;# 
  1525     0F1A                     	;# 
  1526     0F1B                     	;# 
  1527     0F1C                     	;# 
  1528     0F1D                     	;# 
  1529     0F1E                     	;# 
  1530     0F1F                     	;# 
  1531     0F20                     	;# 
  1532     0F21                     	;# 
  1533     0F22                     	;# 
  1534     0F23                     	;# 
  1535     0F24                     	;# 
  1536     0F25                     	;# 
  1537     0F26                     	;# 
  1538     0F27                     	;# 
  1539     0F28                     	;# 
  1540     0F29                     	;# 
  1541     0F2A                     	;# 
  1542     0F2B                     	;# 
  1543     0F2C                     	;# 
  1544     0F2D                     	;# 
  1545     0F2E                     	;# 
  1546     0F2F                     	;# 
  1547     0F30                     	;# 
  1548     0F31                     	;# 
  1549     0F32                     	;# 
  1550     0F33                     	;# 
  1551     0F34                     	;# 
  1552     0F35                     	;# 
  1553     0F36                     	;# 
  1554     0F37                     	;# 
  1555     0FE4                     	;# 
  1556     0FE5                     	;# 
  1557     0FE6                     	;# 
  1558     0FE7                     	;# 
  1559     0FE8                     	;# 
  1560     0FE9                     	;# 
  1561     0FEA                     	;# 
  1562     0FEB                     	;# 
  1563     0FED                     	;# 
  1564     0FEE                     	;# 
  1565     0FEF                     	;# 
  1566     0000                     	;# 
  1567     0001                     	;# 
  1568     0002                     	;# 
  1569     0003                     	;# 
  1570     0004                     	;# 
  1571     0005                     	;# 
  1572     0006                     	;# 
  1573     0007                     	;# 
  1574     0008                     	;# 
  1575     0009                     	;# 
  1576     000A                     	;# 
  1577     000B                     	;# 
  1578     000C                     	;# 
  1579     000D                     	;# 
  1580     000E                     	;# 
  1581     0010                     	;# 
  1582     0011                     	;# 
  1583     0012                     	;# 
  1584     0013                     	;# 
  1585     0014                     	;# 
  1586     0015                     	;# 
  1587     0015                     	;# 
  1588     0016                     	;# 
  1589     0016                     	;# 
  1590     0017                     	;# 
  1591     0018                     	;# 
  1592     0019                     	;# 
  1593     0019                     	;# 
  1594     001A                     	;# 
  1595     001B                     	;# 
  1596     001C                     	;# 
  1597     001D                     	;# 
  1598     001E                     	;# 
  1599     001F                     	;# 
  1600     008C                     	;# 
  1601     008D                     	;# 
  1602     008E                     	;# 
  1603     0090                     	;# 
  1604     0091                     	;# 
  1605     0092                     	;# 
  1606     0093                     	;# 
  1607     0094                     	;# 
  1608     0097                     	;# 
  1609     009B                     	;# 
  1610     009B                     	;# 
  1611     009C                     	;# 
  1612     009D                     	;# 
  1613     009E                     	;# 
  1614     009F                     	;# 
  1615     010C                     	;# 
  1616     010D                     	;# 
  1617     010E                     	;# 
  1618     0111                     	;# 
  1619     0112                     	;# 
  1620     0113                     	;# 
  1621     0114                     	;# 
  1622     0115                     	;# 
  1623     0116                     	;# 
  1624     0117                     	;# 
  1625     0118                     	;# 
  1626     0119                     	;# 
  1627     018C                     	;# 
  1628     018D                     	;# 
  1629     018E                     	;# 
  1630     0197                     	;# 
  1631     0199                     	;# 
  1632     0199                     	;# 
  1633     0199                     	;# 
  1634     019A                     	;# 
  1635     019A                     	;# 
  1636     019A                     	;# 
  1637     019B                     	;# 
  1638     019B                     	;# 
  1639     019B                     	;# 
  1640     019B                     	;# 
  1641     019B                     	;# 
  1642     019C                     	;# 
  1643     019C                     	;# 
  1644     019C                     	;# 
  1645     019D                     	;# 
  1646     019D                     	;# 
  1647     019D                     	;# 
  1648     019E                     	;# 
  1649     019E                     	;# 
  1650     019E                     	;# 
  1651     019F                     	;# 
  1652     019F                     	;# 
  1653     019F                     	;# 
  1654     019F                     	;# 
  1655     019F                     	;# 
  1656     020C                     	;# 
  1657     020D                     	;# 
  1658     020E                     	;# 
  1659     0211                     	;# 
  1660     0211                     	;# 
  1661     0212                     	;# 
  1662     0212                     	;# 
  1663     0213                     	;# 
  1664     0213                     	;# 
  1665     0214                     	;# 
  1666     0214                     	;# 
  1667     0215                     	;# 
  1668     0215                     	;# 
  1669     0215                     	;# 
  1670     0215                     	;# 
  1671     0216                     	;# 
  1672     0216                     	;# 
  1673     0217                     	;# 
  1674     0217                     	;# 
  1675     0219                     	;# 
  1676     021A                     	;# 
  1677     021B                     	;# 
  1678     021C                     	;# 
  1679     021D                     	;# 
  1680     021D                     	;# 
  1681     021E                     	;# 
  1682     021F                     	;# 
  1683     028C                     	;# 
  1684     028D                     	;# 
  1685     028E                     	;# 
  1686     0291                     	;# 
  1687     0291                     	;# 
  1688     0292                     	;# 
  1689     0293                     	;# 
  1690     0294                     	;# 
  1691     0295                     	;# 
  1692     0295                     	;# 
  1693     0296                     	;# 
  1694     0297                     	;# 
  1695     0298                     	;# 
  1696     029F                     	;# 
  1697     030C                     	;# 
  1698     030D                     	;# 
  1699     030E                     	;# 
  1700     0311                     	;# 
  1701     0311                     	;# 
  1702     0312                     	;# 
  1703     0313                     	;# 
  1704     0314                     	;# 
  1705     0315                     	;# 
  1706     0315                     	;# 
  1707     0316                     	;# 
  1708     0317                     	;# 
  1709     0318                     	;# 
  1710     038C                     	;# 
  1711     038D                     	;# 
  1712     038E                     	;# 
  1713     0391                     	;# 
  1714     0392                     	;# 
  1715     0393                     	;# 
  1716     0394                     	;# 
  1717     0395                     	;# 
  1718     0396                     	;# 
  1719     0397                     	;# 
  1720     0398                     	;# 
  1721     0399                     	;# 
  1722     039A                     	;# 
  1723     039C                     	;# 
  1724     039D                     	;# 
  1725     039E                     	;# 
  1726     039F                     	;# 
  1727     0411                     	;# 
  1728     0411                     	;# 
  1729     0412                     	;# 
  1730     0413                     	;# 
  1731     0414                     	;# 
  1732     0415                     	;# 
  1733     0416                     	;# 
  1734     0417                     	;# 
  1735     0418                     	;# 
  1736     0418                     	;# 
  1737     0419                     	;# 
  1738     041A                     	;# 
  1739     041B                     	;# 
  1740     041C                     	;# 
  1741     041D                     	;# 
  1742     041E                     	;# 
  1743     041F                     	;# 
  1744     0498                     	;# 
  1745     0498                     	;# 
  1746     0499                     	;# 
  1747     049A                     	;# 
  1748     049B                     	;# 
  1749     049B                     	;# 
  1750     049C                     	;# 
  1751     049D                     	;# 
  1752     049E                     	;# 
  1753     049F                     	;# 
  1754     0617                     	;# 
  1755     0618                     	;# 
  1756     0619                     	;# 
  1757     0619                     	;# 
  1758     061A                     	;# 
  1759     061B                     	;# 
  1760     061C                     	;# 
  1761     061C                     	;# 
  1762     061F                     	;# 
  1763     0691                     	;# 
  1764     0692                     	;# 
  1765     0693                     	;# 
  1766     0694                     	;# 
  1767     0695                     	;# 
  1768     0696                     	;# 
  1769     0697                     	;# 
  1770     0698                     	;# 
  1771     0699                     	;# 
  1772     0711                     	;# 
  1773     0712                     	;# 
  1774     0713                     	;# 
  1775     0714                     	;# 
  1776     0715                     	;# 
  1777     0716                     	;# 
  1778     0717                     	;# 
  1779     0718                     	;# 
  1780     0719                     	;# 
  1781     0891                     	;# 
  1782     0891                     	;# 
  1783     0891                     	;# 
  1784     0891                     	;# 
  1785     0891                     	;# 
  1786     0891                     	;# 
  1787     0892                     	;# 
  1788     0892                     	;# 
  1789     0892                     	;# 
  1790     0893                     	;# 
  1791     0893                     	;# 
  1792     0893                     	;# 
  1793     0893                     	;# 
  1794     0893                     	;# 
  1795     0893                     	;# 
  1796     0894                     	;# 
  1797     0894                     	;# 
  1798     0894                     	;# 
  1799     0895                     	;# 
  1800     0895                     	;# 
  1801     0895                     	;# 
  1802     0896                     	;# 
  1803     0896                     	;# 
  1804     0896                     	;# 
  1805     089B                     	;# 
  1806     0911                     	;# 
  1807     0912                     	;# 
  1808     0913                     	;# 
  1809     0914                     	;# 
  1810     0915                     	;# 
  1811     0916                     	;# 
  1812     0918                     	;# 
  1813     0919                     	;# 
  1814     091A                     	;# 
  1815     091B                     	;# 
  1816     091C                     	;# 
  1817     091D                     	;# 
  1818     091E                     	;# 
  1819     091F                     	;# 
  1820     0E0F                     	;# 
  1821     0E10                     	;# 
  1822     0E11                     	;# 
  1823     0E12                     	;# 
  1824     0E13                     	;# 
  1825     0E14                     	;# 
  1826     0E15                     	;# 
  1827     0E16                     	;# 
  1828     0E17                     	;# 
  1829     0E18                     	;# 
  1830     0E19                     	;# 
  1831     0E1A                     	;# 
  1832     0E1B                     	;# 
  1833     0E1C                     	;# 
  1834     0E1D                     	;# 
  1835     0E1E                     	;# 
  1836     0E1F                     	;# 
  1837     0E20                     	;# 
  1838     0E21                     	;# 
  1839     0E22                     	;# 
  1840     0E24                     	;# 
  1841     0E25                     	;# 
  1842     0E28                     	;# 
  1843     0E29                     	;# 
  1844     0E2A                     	;# 
  1845     0E2B                     	;# 
  1846     0E2C                     	;# 
  1847     0E2D                     	;# 
  1848     0E2E                     	;# 
  1849     0E2F                     	;# 
  1850     0E90                     	;# 
  1851     0E91                     	;# 
  1852     0E92                     	;# 
  1853     0E94                     	;# 
  1854     0E95                     	;# 
  1855     0E9C                     	;# 
  1856     0E9D                     	;# 
  1857     0E9E                     	;# 
  1858     0E9F                     	;# 
  1859     0EA0                     	;# 
  1860     0EA1                     	;# 
  1861     0EA2                     	;# 
  1862     0EA3                     	;# 
  1863     0EA4                     	;# 
  1864     0EA5                     	;# 
  1865     0EA6                     	;# 
  1866     0EA7                     	;# 
  1867     0F0F                     	;# 
  1868     0F10                     	;# 
  1869     0F11                     	;# 
  1870     0F12                     	;# 
  1871     0F13                     	;# 
  1872     0F14                     	;# 
  1873     0F15                     	;# 
  1874     0F16                     	;# 
  1875     0F17                     	;# 
  1876     0F18                     	;# 
  1877     0F19                     	;# 
  1878     0F1A                     	;# 
  1879     0F1B                     	;# 
  1880     0F1C                     	;# 
  1881     0F1D                     	;# 
  1882     0F1E                     	;# 
  1883     0F1F                     	;# 
  1884     0F20                     	;# 
  1885     0F21                     	;# 
  1886     0F22                     	;# 
  1887     0F23                     	;# 
  1888     0F24                     	;# 
  1889     0F25                     	;# 
  1890     0F26                     	;# 
  1891     0F27                     	;# 
  1892     0F28                     	;# 
  1893     0F29                     	;# 
  1894     0F2A                     	;# 
  1895     0F2B                     	;# 
  1896     0F2C                     	;# 
  1897     0F2D                     	;# 
  1898     0F2E                     	;# 
  1899     0F2F                     	;# 
  1900     0F30                     	;# 
  1901     0F31                     	;# 
  1902     0F32                     	;# 
  1903     0F33                     	;# 
  1904     0F34                     	;# 
  1905     0F35                     	;# 
  1906     0F36                     	;# 
  1907     0F37                     	;# 
  1908     0FE4                     	;# 
  1909     0FE5                     	;# 
  1910     0FE6                     	;# 
  1911     0FE7                     	;# 
  1912     0FE8                     	;# 
  1913     0FE9                     	;# 
  1914     0FEA                     	;# 
  1915     0FEB                     	;# 
  1916     0FED                     	;# 
  1917     0FEE                     	;# 
  1918     0FEF                     	;# 
  1919     0000                     	;# 
  1920     0001                     	;# 
  1921     0002                     	;# 
  1922     0003                     	;# 
  1923     0004                     	;# 
  1924     0005                     	;# 
  1925     0006                     	;# 
  1926     0007                     	;# 
  1927     0008                     	;# 
  1928     0009                     	;# 
  1929     000A                     	;# 
  1930     000B                     	;# 
  1931     000C                     	;# 
  1932     000D                     	;# 
  1933     000E                     	;# 
  1934     0010                     	;# 
  1935     0011                     	;# 
  1936     0012                     	;# 
  1937     0013                     	;# 
  1938     0014                     	;# 
  1939     0015                     	;# 
  1940     0015                     	;# 
  1941     0016                     	;# 
  1942     0016                     	;# 
  1943     0017                     	;# 
  1944     0018                     	;# 
  1945     0019                     	;# 
  1946     0019                     	;# 
  1947     001A                     	;# 
  1948     001B                     	;# 
  1949     001C                     	;# 
  1950     001D                     	;# 
  1951     001E                     	;# 
  1952     001F                     	;# 
  1953     008C                     	;# 
  1954     008D                     	;# 
  1955     008E                     	;# 
  1956     0090                     	;# 
  1957     0091                     	;# 
  1958     0092                     	;# 
  1959     0093                     	;# 
  1960     0094                     	;# 
  1961     0097                     	;# 
  1962     009B                     	;# 
  1963     009B                     	;# 
  1964     009C                     	;# 
  1965     009D                     	;# 
  1966     009E                     	;# 
  1967     009F                     	;# 
  1968     010C                     	;# 
  1969     010D                     	;# 
  1970     010E                     	;# 
  1971     0111                     	;# 
  1972     0112                     	;# 
  1973     0113                     	;# 
  1974     0114                     	;# 
  1975     0115                     	;# 
  1976     0116                     	;# 
  1977     0117                     	;# 
  1978     0118                     	;# 
  1979     0119                     	;# 
  1980     018C                     	;# 
  1981     018D                     	;# 
  1982     018E                     	;# 
  1983     0197                     	;# 
  1984     0199                     	;# 
  1985     0199                     	;# 
  1986     0199                     	;# 
  1987     019A                     	;# 
  1988     019A                     	;# 
  1989     019A                     	;# 
  1990     019B                     	;# 
  1991     019B                     	;# 
  1992     019B                     	;# 
  1993     019B                     	;# 
  1994     019B                     	;# 
  1995     019C                     	;# 
  1996     019C                     	;# 
  1997     019C                     	;# 
  1998     019D                     	;# 
  1999     019D                     	;# 
  2000     019D                     	;# 
  2001     019E                     	;# 
  2002     019E                     	;# 
  2003     019E                     	;# 
  2004     019F                     	;# 
  2005     019F                     	;# 
  2006     019F                     	;# 
  2007     019F                     	;# 
  2008     019F                     	;# 
  2009     020C                     	;# 
  2010     020D                     	;# 
  2011     020E                     	;# 
  2012     0211                     	;# 
  2013     0211                     	;# 
  2014     0212                     	;# 
  2015     0212                     	;# 
  2016     0213                     	;# 
  2017     0213                     	;# 
  2018     0214                     	;# 
  2019     0214                     	;# 
  2020     0215                     	;# 
  2021     0215                     	;# 
  2022     0215                     	;# 
  2023     0215                     	;# 
  2024     0216                     	;# 
  2025     0216                     	;# 
  2026     0217                     	;# 
  2027     0217                     	;# 
  2028     0219                     	;# 
  2029     021A                     	;# 
  2030     021B                     	;# 
  2031     021C                     	;# 
  2032     021D                     	;# 
  2033     021D                     	;# 
  2034     021E                     	;# 
  2035     021F                     	;# 
  2036     028C                     	;# 
  2037     028D                     	;# 
  2038     028E                     	;# 
  2039     0291                     	;# 
  2040     0291                     	;# 
  2041     0292                     	;# 
  2042     0293                     	;# 
  2043     0294                     	;# 
  2044     0295                     	;# 
  2045     0295                     	;# 
  2046     0296                     	;# 
  2047     0297                     	;# 
  2048     0298                     	;# 
  2049     029F                     	;# 
  2050     030C                     	;# 
  2051     030D                     	;# 
  2052     030E                     	;# 
  2053     0311                     	;# 
  2054     0311                     	;# 
  2055     0312                     	;# 
  2056     0313                     	;# 
  2057     0314                     	;# 
  2058     0315                     	;# 
  2059     0315                     	;# 
  2060     0316                     	;# 
  2061     0317                     	;# 
  2062     0318                     	;# 
  2063     038C                     	;# 
  2064     038D                     	;# 
  2065     038E                     	;# 
  2066     0391                     	;# 
  2067     0392                     	;# 
  2068     0393                     	;# 
  2069     0394                     	;# 
  2070     0395                     	;# 
  2071     0396                     	;# 
  2072     0397                     	;# 
  2073     0398                     	;# 
  2074     0399                     	;# 
  2075     039A                     	;# 
  2076     039C                     	;# 
  2077     039D                     	;# 
  2078     039E                     	;# 
  2079     039F                     	;# 
  2080     0411                     	;# 
  2081     0411                     	;# 
  2082     0412                     	;# 
  2083     0413                     	;# 
  2084     0414                     	;# 
  2085     0415                     	;# 
  2086     0416                     	;# 
  2087     0417                     	;# 
  2088     0418                     	;# 
  2089     0418                     	;# 
  2090     0419                     	;# 
  2091     041A                     	;# 
  2092     041B                     	;# 
  2093     041C                     	;# 
  2094     041D                     	;# 
  2095     041E                     	;# 
  2096     041F                     	;# 
  2097     0498                     	;# 
  2098     0498                     	;# 
  2099     0499                     	;# 
  2100     049A                     	;# 
  2101     049B                     	;# 
  2102     049B                     	;# 
  2103     049C                     	;# 
  2104     049D                     	;# 
  2105     049E                     	;# 
  2106     049F                     	;# 
  2107     0617                     	;# 
  2108     0618                     	;# 
  2109     0619                     	;# 
  2110     0619                     	;# 
  2111     061A                     	;# 
  2112     061B                     	;# 
  2113     061C                     	;# 
  2114     061C                     	;# 
  2115     061F                     	;# 
  2116     0691                     	;# 
  2117     0692                     	;# 
  2118     0693                     	;# 
  2119     0694                     	;# 
  2120     0695                     	;# 
  2121     0696                     	;# 
  2122     0697                     	;# 
  2123     0698                     	;# 
  2124     0699                     	;# 
  2125     0711                     	;# 
  2126     0712                     	;# 
  2127     0713                     	;# 
  2128     0714                     	;# 
  2129     0715                     	;# 
  2130     0716                     	;# 
  2131     0717                     	;# 
  2132     0718                     	;# 
  2133     0719                     	;# 
  2134     0891                     	;# 
  2135     0891                     	;# 
  2136     0891                     	;# 
  2137     0891                     	;# 
  2138     0891                     	;# 
  2139     0891                     	;# 
  2140     0892                     	;# 
  2141     0892                     	;# 
  2142     0892                     	;# 
  2143     0893                     	;# 
  2144     0893                     	;# 
  2145     0893                     	;# 
  2146     0893                     	;# 
  2147     0893                     	;# 
  2148     0893                     	;# 
  2149     0894                     	;# 
  2150     0894                     	;# 
  2151     0894                     	;# 
  2152     0895                     	;# 
  2153     0895                     	;# 
  2154     0895                     	;# 
  2155     0896                     	;# 
  2156     0896                     	;# 
  2157     0896                     	;# 
  2158     089B                     	;# 
  2159     0911                     	;# 
  2160     0912                     	;# 
  2161     0913                     	;# 
  2162     0914                     	;# 
  2163     0915                     	;# 
  2164     0916                     	;# 
  2165     0918                     	;# 
  2166     0919                     	;# 
  2167     091A                     	;# 
  2168     091B                     	;# 
  2169     091C                     	;# 
  2170     091D                     	;# 
  2171     091E                     	;# 
  2172     091F                     	;# 
  2173     0E0F                     	;# 
  2174     0E10                     	;# 
  2175     0E11                     	;# 
  2176     0E12                     	;# 
  2177     0E13                     	;# 
  2178     0E14                     	;# 
  2179     0E15                     	;# 
  2180     0E16                     	;# 
  2181     0E17                     	;# 
  2182     0E18                     	;# 
  2183     0E19                     	;# 
  2184     0E1A                     	;# 
  2185     0E1B                     	;# 
  2186     0E1C                     	;# 
  2187     0E1D                     	;# 
  2188     0E1E                     	;# 
  2189     0E1F                     	;# 
  2190     0E20                     	;# 
  2191     0E21                     	;# 
  2192     0E22                     	;# 
  2193     0E24                     	;# 
  2194     0E25                     	;# 
  2195     0E28                     	;# 
  2196     0E29                     	;# 
  2197     0E2A                     	;# 
  2198     0E2B                     	;# 
  2199     0E2C                     	;# 
  2200     0E2D                     	;# 
  2201     0E2E                     	;# 
  2202     0E2F                     	;# 
  2203     0E90                     	;# 
  2204     0E91                     	;# 
  2205     0E92                     	;# 
  2206     0E94                     	;# 
  2207     0E95                     	;# 
  2208     0E9C                     	;# 
  2209     0E9D                     	;# 
  2210     0E9E                     	;# 
  2211     0E9F                     	;# 
  2212     0EA0                     	;# 
  2213     0EA1                     	;# 
  2214     0EA2                     	;# 
  2215     0EA3                     	;# 
  2216     0EA4                     	;# 
  2217     0EA5                     	;# 
  2218     0EA6                     	;# 
  2219     0EA7                     	;# 
  2220     0F0F                     	;# 
  2221     0F10                     	;# 
  2222     0F11                     	;# 
  2223     0F12                     	;# 
  2224     0F13                     	;# 
  2225     0F14                     	;# 
  2226     0F15                     	;# 
  2227     0F16                     	;# 
  2228     0F17                     	;# 
  2229     0F18                     	;# 
  2230     0F19                     	;# 
  2231     0F1A                     	;# 
  2232     0F1B                     	;# 
  2233     0F1C                     	;# 
  2234     0F1D                     	;# 
  2235     0F1E                     	;# 
  2236     0F1F                     	;# 
  2237     0F20                     	;# 
  2238     0F21                     	;# 
  2239     0F22                     	;# 
  2240     0F23                     	;# 
  2241     0F24                     	;# 
  2242     0F25                     	;# 
  2243     0F26                     	;# 
  2244     0F27                     	;# 
  2245     0F28                     	;# 
  2246     0F29                     	;# 
  2247     0F2A                     	;# 
  2248     0F2B                     	;# 
  2249     0F2C                     	;# 
  2250     0F2D                     	;# 
  2251     0F2E                     	;# 
  2252     0F2F                     	;# 
  2253     0F30                     	;# 
  2254     0F31                     	;# 
  2255     0F32                     	;# 
  2256     0F33                     	;# 
  2257     0F34                     	;# 
  2258     0F35                     	;# 
  2259     0F36                     	;# 
  2260     0F37                     	;# 
  2261     0FE4                     	;# 
  2262     0FE5                     	;# 
  2263     0FE6                     	;# 
  2264     0FE7                     	;# 
  2265     0FE8                     	;# 
  2266     0FE9                     	;# 
  2267     0FEA                     	;# 
  2268     0FEB                     	;# 
  2269     0FED                     	;# 
  2270     0FEE                     	;# 
  2271     0FEF                     	;# 
  2272     0000                     	;# 
  2273     0001                     	;# 
  2274     0002                     	;# 
  2275     0003                     	;# 
  2276     0004                     	;# 
  2277     0005                     	;# 
  2278     0006                     	;# 
  2279     0007                     	;# 
  2280     0008                     	;# 
  2281     0009                     	;# 
  2282     000A                     	;# 
  2283     000B                     	;# 
  2284     000C                     	;# 
  2285     000D                     	;# 
  2286     000E                     	;# 
  2287     0010                     	;# 
  2288     0011                     	;# 
  2289     0012                     	;# 
  2290     0013                     	;# 
  2291     0014                     	;# 
  2292     0015                     	;# 
  2293     0015                     	;# 
  2294     0016                     	;# 
  2295     0016                     	;# 
  2296     0017                     	;# 
  2297     0018                     	;# 
  2298     0019                     	;# 
  2299     0019                     	;# 
  2300     001A                     	;# 
  2301     001B                     	;# 
  2302     001C                     	;# 
  2303     001D                     	;# 
  2304     001E                     	;# 
  2305     001F                     	;# 
  2306     008C                     	;# 
  2307     008D                     	;# 
  2308     008E                     	;# 
  2309     0090                     	;# 
  2310     0091                     	;# 
  2311     0092                     	;# 
  2312     0093                     	;# 
  2313     0094                     	;# 
  2314     0097                     	;# 
  2315     009B                     	;# 
  2316     009B                     	;# 
  2317     009C                     	;# 
  2318     009D                     	;# 
  2319     009E                     	;# 
  2320     009F                     	;# 
  2321     010C                     	;# 
  2322     010D                     	;# 
  2323     010E                     	;# 
  2324     0111                     	;# 
  2325     0112                     	;# 
  2326     0113                     	;# 
  2327     0114                     	;# 
  2328     0115                     	;# 
  2329     0116                     	;# 
  2330     0117                     	;# 
  2331     0118                     	;# 
  2332     0119                     	;# 
  2333     018C                     	;# 
  2334     018D                     	;# 
  2335     018E                     	;# 
  2336     0197                     	;# 
  2337     0199                     	;# 
  2338     0199                     	;# 
  2339     0199                     	;# 
  2340     019A                     	;# 
  2341     019A                     	;# 
  2342     019A                     	;# 
  2343     019B                     	;# 
  2344     019B                     	;# 
  2345     019B                     	;# 
  2346     019B                     	;# 
  2347     019B                     	;# 
  2348     019C                     	;# 
  2349     019C                     	;# 
  2350     019C                     	;# 
  2351     019D                     	;# 
  2352     019D                     	;# 
  2353     019D                     	;# 
  2354     019E                     	;# 
  2355     019E                     	;# 
  2356     019E                     	;# 
  2357     019F                     	;# 
  2358     019F                     	;# 
  2359     019F                     	;# 
  2360     019F                     	;# 
  2361     019F                     	;# 
  2362     020C                     	;# 
  2363     020D                     	;# 
  2364     020E                     	;# 
  2365     0211                     	;# 
  2366     0211                     	;# 
  2367     0212                     	;# 
  2368     0212                     	;# 
  2369     0213                     	;# 
  2370     0213                     	;# 
  2371     0214                     	;# 
  2372     0214                     	;# 
  2373     0215                     	;# 
  2374     0215                     	;# 
  2375     0215                     	;# 
  2376     0215                     	;# 
  2377     0216                     	;# 
  2378     0216                     	;# 
  2379     0217                     	;# 
  2380     0217                     	;# 
  2381     0219                     	;# 
  2382     021A                     	;# 
  2383     021B                     	;# 
  2384     021C                     	;# 
  2385     021D                     	;# 
  2386     021D                     	;# 
  2387     021E                     	;# 
  2388     021F                     	;# 
  2389     028C                     	;# 
  2390     028D                     	;# 
  2391     028E                     	;# 
  2392     0291                     	;# 
  2393     0291                     	;# 
  2394     0292                     	;# 
  2395     0293                     	;# 
  2396     0294                     	;# 
  2397     0295                     	;# 
  2398     0295                     	;# 
  2399     0296                     	;# 
  2400     0297                     	;# 
  2401     0298                     	;# 
  2402     029F                     	;# 
  2403     030C                     	;# 
  2404     030D                     	;# 
  2405     030E                     	;# 
  2406     0311                     	;# 
  2407     0311                     	;# 
  2408     0312                     	;# 
  2409     0313                     	;# 
  2410     0314                     	;# 
  2411     0315                     	;# 
  2412     0315                     	;# 
  2413     0316                     	;# 
  2414     0317                     	;# 
  2415     0318                     	;# 
  2416     038C                     	;# 
  2417     038D                     	;# 
  2418     038E                     	;# 
  2419     0391                     	;# 
  2420     0392                     	;# 
  2421     0393                     	;# 
  2422     0394                     	;# 
  2423     0395                     	;# 
  2424     0396                     	;# 
  2425     0397                     	;# 
  2426     0398                     	;# 
  2427     0399                     	;# 
  2428     039A                     	;# 
  2429     039C                     	;# 
  2430     039D                     	;# 
  2431     039E                     	;# 
  2432     039F                     	;# 
  2433     0411                     	;# 
  2434     0411                     	;# 
  2435     0412                     	;# 
  2436     0413                     	;# 
  2437     0414                     	;# 
  2438     0415                     	;# 
  2439     0416                     	;# 
  2440     0417                     	;# 
  2441     0418                     	;# 
  2442     0418                     	;# 
  2443     0419                     	;# 
  2444     041A                     	;# 
  2445     041B                     	;# 
  2446     041C                     	;# 
  2447     041D                     	;# 
  2448     041E                     	;# 
  2449     041F                     	;# 
  2450     0498                     	;# 
  2451     0498                     	;# 
  2452     0499                     	;# 
  2453     049A                     	;# 
  2454     049B                     	;# 
  2455     049B                     	;# 
  2456     049C                     	;# 
  2457     049D                     	;# 
  2458     049E                     	;# 
  2459     049F                     	;# 
  2460     0617                     	;# 
  2461     0618                     	;# 
  2462     0619                     	;# 
  2463     0619                     	;# 
  2464     061A                     	;# 
  2465     061B                     	;# 
  2466     061C                     	;# 
  2467     061C                     	;# 
  2468     061F                     	;# 
  2469     0691                     	;# 
  2470     0692                     	;# 
  2471     0693                     	;# 
  2472     0694                     	;# 
  2473     0695                     	;# 
  2474     0696                     	;# 
  2475     0697                     	;# 
  2476     0698                     	;# 
  2477     0699                     	;# 
  2478     0711                     	;# 
  2479     0712                     	;# 
  2480     0713                     	;# 
  2481     0714                     	;# 
  2482     0715                     	;# 
  2483     0716                     	;# 
  2484     0717                     	;# 
  2485     0718                     	;# 
  2486     0719                     	;# 
  2487     0891                     	;# 
  2488     0891                     	;# 
  2489     0891                     	;# 
  2490     0891                     	;# 
  2491     0891                     	;# 
  2492     0891                     	;# 
  2493     0892                     	;# 
  2494     0892                     	;# 
  2495     0892                     	;# 
  2496     0893                     	;# 
  2497     0893                     	;# 
  2498     0893                     	;# 
  2499     0893                     	;# 
  2500     0893                     	;# 
  2501     0893                     	;# 
  2502     0894                     	;# 
  2503     0894                     	;# 
  2504     0894                     	;# 
  2505     0895                     	;# 
  2506     0895                     	;# 
  2507     0895                     	;# 
  2508     0896                     	;# 
  2509     0896                     	;# 
  2510     0896                     	;# 
  2511     089B                     	;# 
  2512     0911                     	;# 
  2513     0912                     	;# 
  2514     0913                     	;# 
  2515     0914                     	;# 
  2516     0915                     	;# 
  2517     0916                     	;# 
  2518     0918                     	;# 
  2519     0919                     	;# 
  2520     091A                     	;# 
  2521     091B                     	;# 
  2522     091C                     	;# 
  2523     091D                     	;# 
  2524     091E                     	;# 
  2525     091F                     	;# 
  2526     0E0F                     	;# 
  2527     0E10                     	;# 
  2528     0E11                     	;# 
  2529     0E12                     	;# 
  2530     0E13                     	;# 
  2531     0E14                     	;# 
  2532     0E15                     	;# 
  2533     0E16                     	;# 
  2534     0E17                     	;# 
  2535     0E18                     	;# 
  2536     0E19                     	;# 
  2537     0E1A                     	;# 
  2538     0E1B                     	;# 
  2539     0E1C                     	;# 
  2540     0E1D                     	;# 
  2541     0E1E                     	;# 
  2542     0E1F                     	;# 
  2543     0E20                     	;# 
  2544     0E21                     	;# 
  2545     0E22                     	;# 
  2546     0E24                     	;# 
  2547     0E25                     	;# 
  2548     0E28                     	;# 
  2549     0E29                     	;# 
  2550     0E2A                     	;# 
  2551     0E2B                     	;# 
  2552     0E2C                     	;# 
  2553     0E2D                     	;# 
  2554     0E2E                     	;# 
  2555     0E2F                     	;# 
  2556     0E90                     	;# 
  2557     0E91                     	;# 
  2558     0E92                     	;# 
  2559     0E94                     	;# 
  2560     0E95                     	;# 
  2561     0E9C                     	;# 
  2562     0E9D                     	;# 
  2563     0E9E                     	;# 
  2564     0E9F                     	;# 
  2565     0EA0                     	;# 
  2566     0EA1                     	;# 
  2567     0EA2                     	;# 
  2568     0EA3                     	;# 
  2569     0EA4                     	;# 
  2570     0EA5                     	;# 
  2571     0EA6                     	;# 
  2572     0EA7                     	;# 
  2573     0F0F                     	;# 
  2574     0F10                     	;# 
  2575     0F11                     	;# 
  2576     0F12                     	;# 
  2577     0F13                     	;# 
  2578     0F14                     	;# 
  2579     0F15                     	;# 
  2580     0F16                     	;# 
  2581     0F17                     	;# 
  2582     0F18                     	;# 
  2583     0F19                     	;# 
  2584     0F1A                     	;# 
  2585     0F1B                     	;# 
  2586     0F1C                     	;# 
  2587     0F1D                     	;# 
  2588     0F1E                     	;# 
  2589     0F1F                     	;# 
  2590     0F20                     	;# 
  2591     0F21                     	;# 
  2592     0F22                     	;# 
  2593     0F23                     	;# 
  2594     0F24                     	;# 
  2595     0F25                     	;# 
  2596     0F26                     	;# 
  2597     0F27                     	;# 
  2598     0F28                     	;# 
  2599     0F29                     	;# 
  2600     0F2A                     	;# 
  2601     0F2B                     	;# 
  2602     0F2C                     	;# 
  2603     0F2D                     	;# 
  2604     0F2E                     	;# 
  2605     0F2F                     	;# 
  2606     0F30                     	;# 
  2607     0F31                     	;# 
  2608     0F32                     	;# 
  2609     0F33                     	;# 
  2610     0F34                     	;# 
  2611     0F35                     	;# 
  2612     0F36                     	;# 
  2613     0F37                     	;# 
  2614     0FE4                     	;# 
  2615     0FE5                     	;# 
  2616     0FE6                     	;# 
  2617     0FE7                     	;# 
  2618     0FE8                     	;# 
  2619     0FE9                     	;# 
  2620     0FEA                     	;# 
  2621     0FEB                     	;# 
  2622     0FED                     	;# 
  2623     0FEE                     	;# 
  2624     0FEF                     	;# 
  2625     0000                     	;# 
  2626     0001                     	;# 
  2627     0002                     	;# 
  2628     0003                     	;# 
  2629     0004                     	;# 
  2630     0005                     	;# 
  2631     0006                     	;# 
  2632     0007                     	;# 
  2633     0008                     	;# 
  2634     0009                     	;# 
  2635     000A                     	;# 
  2636     000B                     	;# 
  2637     000C                     	;# 
  2638     000D                     	;# 
  2639     000E                     	;# 
  2640     0010                     	;# 
  2641     0011                     	;# 
  2642     0012                     	;# 
  2643     0013                     	;# 
  2644     0014                     	;# 
  2645     0015                     	;# 
  2646     0015                     	;# 
  2647     0016                     	;# 
  2648     0016                     	;# 
  2649     0017                     	;# 
  2650     0018                     	;# 
  2651     0019                     	;# 
  2652     0019                     	;# 
  2653     001A                     	;# 
  2654     001B                     	;# 
  2655     001C                     	;# 
  2656     001D                     	;# 
  2657     001E                     	;# 
  2658     001F                     	;# 
  2659     008C                     	;# 
  2660     008D                     	;# 
  2661     008E                     	;# 
  2662     0090                     	;# 
  2663     0091                     	;# 
  2664     0092                     	;# 
  2665     0093                     	;# 
  2666     0094                     	;# 
  2667     0097                     	;# 
  2668     009B                     	;# 
  2669     009B                     	;# 
  2670     009C                     	;# 
  2671     009D                     	;# 
  2672     009E                     	;# 
  2673     009F                     	;# 
  2674     010C                     	;# 
  2675     010D                     	;# 
  2676     010E                     	;# 
  2677     0111                     	;# 
  2678     0112                     	;# 
  2679     0113                     	;# 
  2680     0114                     	;# 
  2681     0115                     	;# 
  2682     0116                     	;# 
  2683     0117                     	;# 
  2684     0118                     	;# 
  2685     0119                     	;# 
  2686     018C                     	;# 
  2687     018D                     	;# 
  2688     018E                     	;# 
  2689     0197                     	;# 
  2690     0199                     	;# 
  2691     0199                     	;# 
  2692     0199                     	;# 
  2693     019A                     	;# 
  2694     019A                     	;# 
  2695     019A                     	;# 
  2696     019B                     	;# 
  2697     019B                     	;# 
  2698     019B                     	;# 
  2699     019B                     	;# 
  2700     019B                     	;# 
  2701     019C                     	;# 
  2702     019C                     	;# 
  2703     019C                     	;# 
  2704     019D                     	;# 
  2705     019D                     	;# 
  2706     019D                     	;# 
  2707     019E                     	;# 
  2708     019E                     	;# 
  2709     019E                     	;# 
  2710     019F                     	;# 
  2711     019F                     	;# 
  2712     019F                     	;# 
  2713     019F                     	;# 
  2714     019F                     	;# 
  2715     020C                     	;# 
  2716     020D                     	;# 
  2717     020E                     	;# 
  2718     0211                     	;# 
  2719     0211                     	;# 
  2720     0212                     	;# 
  2721     0212                     	;# 
  2722     0213                     	;# 
  2723     0213                     	;# 
  2724     0214                     	;# 
  2725     0214                     	;# 
  2726     0215                     	;# 
  2727     0215                     	;# 
  2728     0215                     	;# 
  2729     0215                     	;# 
  2730     0216                     	;# 
  2731     0216                     	;# 
  2732     0217                     	;# 
  2733     0217                     	;# 
  2734     0219                     	;# 
  2735     021A                     	;# 
  2736     021B                     	;# 
  2737     021C                     	;# 
  2738     021D                     	;# 
  2739     021D                     	;# 
  2740     021E                     	;# 
  2741     021F                     	;# 
  2742     028C                     	;# 
  2743     028D                     	;# 
  2744     028E                     	;# 
  2745     0291                     	;# 
  2746     0291                     	;# 
  2747     0292                     	;# 
  2748     0293                     	;# 
  2749     0294                     	;# 
  2750     0295                     	;# 
  2751     0295                     	;# 
  2752     0296                     	;# 
  2753     0297                     	;# 
  2754     0298                     	;# 
  2755     029F                     	;# 
  2756     030C                     	;# 
  2757     030D                     	;# 
  2758     030E                     	;# 
  2759     0311                     	;# 
  2760     0311                     	;# 
  2761     0312                     	;# 
  2762     0313                     	;# 
  2763     0314                     	;# 
  2764     0315                     	;# 
  2765     0315                     	;# 
  2766     0316                     	;# 
  2767     0317                     	;# 
  2768     0318                     	;# 
  2769     038C                     	;# 
  2770     038D                     	;# 
  2771     038E                     	;# 
  2772     0391                     	;# 
  2773     0392                     	;# 
  2774     0393                     	;# 
  2775     0394                     	;# 
  2776     0395                     	;# 
  2777     0396                     	;# 
  2778     0397                     	;# 
  2779     0398                     	;# 
  2780     0399                     	;# 
  2781     039A                     	;# 
  2782     039C                     	;# 
  2783     039D                     	;# 
  2784     039E                     	;# 
  2785     039F                     	;# 
  2786     0411                     	;# 
  2787     0411                     	;# 
  2788     0412                     	;# 
  2789     0413                     	;# 
  2790     0414                     	;# 
  2791     0415                     	;# 
  2792     0416                     	;# 
  2793     0417                     	;# 
  2794     0418                     	;# 
  2795     0418                     	;# 
  2796     0419                     	;# 
  2797     041A                     	;# 
  2798     041B                     	;# 
  2799     041C                     	;# 
  2800     041D                     	;# 
  2801     041E                     	;# 
  2802     041F                     	;# 
  2803     0498                     	;# 
  2804     0498                     	;# 
  2805     0499                     	;# 
  2806     049A                     	;# 
  2807     049B                     	;# 
  2808     049B                     	;# 
  2809     049C                     	;# 
  2810     049D                     	;# 
  2811     049E                     	;# 
  2812     049F                     	;# 
  2813     0617                     	;# 
  2814     0618                     	;# 
  2815     0619                     	;# 
  2816     0619                     	;# 
  2817     061A                     	;# 
  2818     061B                     	;# 
  2819     061C                     	;# 
  2820     061C                     	;# 
  2821     061F                     	;# 
  2822     0691                     	;# 
  2823     0692                     	;# 
  2824     0693                     	;# 
  2825     0694                     	;# 
  2826     0695                     	;# 
  2827     0696                     	;# 
  2828     0697                     	;# 
  2829     0698                     	;# 
  2830     0699                     	;# 
  2831     0711                     	;# 
  2832     0712                     	;# 
  2833     0713                     	;# 
  2834     0714                     	;# 
  2835     0715                     	;# 
  2836     0716                     	;# 
  2837     0717                     	;# 
  2838     0718                     	;# 
  2839     0719                     	;# 
  2840     0891                     	;# 
  2841     0891                     	;# 
  2842     0891                     	;# 
  2843     0891                     	;# 
  2844     0891                     	;# 
  2845     0891                     	;# 
  2846     0892                     	;# 
  2847     0892                     	;# 
  2848     0892                     	;# 
  2849     0893                     	;# 
  2850     0893                     	;# 
  2851     0893                     	;# 
  2852     0893                     	;# 
  2853     0893                     	;# 
  2854     0893                     	;# 
  2855     0894                     	;# 
  2856     0894                     	;# 
  2857     0894                     	;# 
  2858     0895                     	;# 
  2859     0895                     	;# 
  2860     0895                     	;# 
  2861     0896                     	;# 
  2862     0896                     	;# 
  2863     0896                     	;# 
  2864     089B                     	;# 
  2865     0911                     	;# 
  2866     0912                     	;# 
  2867     0913                     	;# 
  2868     0914                     	;# 
  2869     0915                     	;# 
  2870     0916                     	;# 
  2871     0918                     	;# 
  2872     0919                     	;# 
  2873     091A                     	;# 
  2874     091B                     	;# 
  2875     091C                     	;# 
  2876     091D                     	;# 
  2877     091E                     	;# 
  2878     091F                     	;# 
  2879     0E0F                     	;# 
  2880     0E10                     	;# 
  2881     0E11                     	;# 
  2882     0E12                     	;# 
  2883     0E13                     	;# 
  2884     0E14                     	;# 
  2885     0E15                     	;# 
  2886     0E16                     	;# 
  2887     0E17                     	;# 
  2888     0E18                     	;# 
  2889     0E19                     	;# 
  2890     0E1A                     	;# 
  2891     0E1B                     	;# 
  2892     0E1C                     	;# 
  2893     0E1D                     	;# 
  2894     0E1E                     	;# 
  2895     0E1F                     	;# 
  2896     0E20                     	;# 
  2897     0E21                     	;# 
  2898     0E22                     	;# 
  2899     0E24                     	;# 
  2900     0E25                     	;# 
  2901     0E28                     	;# 
  2902     0E29                     	;# 
  2903     0E2A                     	;# 
  2904     0E2B                     	;# 
  2905     0E2C                     	;# 
  2906     0E2D                     	;# 
  2907     0E2E                     	;# 
  2908     0E2F                     	;# 
  2909     0E90                     	;# 
  2910     0E91                     	;# 
  2911     0E92                     	;# 
  2912     0E94                     	;# 
  2913     0E95                     	;# 
  2914     0E9C                     	;# 
  2915     0E9D                     	;# 
  2916     0E9E                     	;# 
  2917     0E9F                     	;# 
  2918     0EA0                     	;# 
  2919     0EA1                     	;# 
  2920     0EA2                     	;# 
  2921     0EA3                     	;# 
  2922     0EA4                     	;# 
  2923     0EA5                     	;# 
  2924     0EA6                     	;# 
  2925     0EA7                     	;# 
  2926     0F0F                     	;# 
  2927     0F10                     	;# 
  2928     0F11                     	;# 
  2929     0F12                     	;# 
  2930     0F13                     	;# 
  2931     0F14                     	;# 
  2932     0F15                     	;# 
  2933     0F16                     	;# 
  2934     0F17                     	;# 
  2935     0F18                     	;# 
  2936     0F19                     	;# 
  2937     0F1A                     	;# 
  2938     0F1B                     	;# 
  2939     0F1C                     	;# 
  2940     0F1D                     	;# 
  2941     0F1E                     	;# 
  2942     0F1F                     	;# 
  2943     0F20                     	;# 
  2944     0F21                     	;# 
  2945     0F22                     	;# 
  2946     0F23                     	;# 
  2947     0F24                     	;# 
  2948     0F25                     	;# 
  2949     0F26                     	;# 
  2950     0F27                     	;# 
  2951     0F28                     	;# 
  2952     0F29                     	;# 
  2953     0F2A                     	;# 
  2954     0F2B                     	;# 
  2955     0F2C                     	;# 
  2956     0F2D                     	;# 
  2957     0F2E                     	;# 
  2958     0F2F                     	;# 
  2959     0F30                     	;# 
  2960     0F31                     	;# 
  2961     0F32                     	;# 
  2962     0F33                     	;# 
  2963     0F34                     	;# 
  2964     0F35                     	;# 
  2965     0F36                     	;# 
  2966     0F37                     	;# 
  2967     0FE4                     	;# 
  2968     0FE5                     	;# 
  2969     0FE6                     	;# 
  2970     0FE7                     	;# 
  2971     0FE8                     	;# 
  2972     0FE9                     	;# 
  2973     0FEA                     	;# 
  2974     0FEB                     	;# 
  2975     0FED                     	;# 
  2976     0FEE                     	;# 
  2977     0FEF                     	;# 
  2978     0000                     	;# 
  2979     0001                     	;# 
  2980     0002                     	;# 
  2981     0003                     	;# 
  2982     0004                     	;# 
  2983     0005                     	;# 
  2984     0006                     	;# 
  2985     0007                     	;# 
  2986     0008                     	;# 
  2987     0009                     	;# 
  2988     000A                     	;# 
  2989     000B                     	;# 
  2990     000C                     	;# 
  2991     000D                     	;# 
  2992     000E                     	;# 
  2993     0010                     	;# 
  2994     0011                     	;# 
  2995     0012                     	;# 
  2996     0013                     	;# 
  2997     0014                     	;# 
  2998     0015                     	;# 
  2999     0015                     	;# 
  3000     0016                     	;# 
  3001     0016                     	;# 
  3002     0017                     	;# 
  3003     0018                     	;# 
  3004     0019                     	;# 
  3005     0019                     	;# 
  3006     001A                     	;# 
  3007     001B                     	;# 
  3008     001C                     	;# 
  3009     001D                     	;# 
  3010     001E                     	;# 
  3011     001F                     	;# 
  3012     008C                     	;# 
  3013     008D                     	;# 
  3014     008E                     	;# 
  3015     0090                     	;# 
  3016     0091                     	;# 
  3017     0092                     	;# 
  3018     0093                     	;# 
  3019     0094                     	;# 
  3020     0097                     	;# 
  3021     009B                     	;# 
  3022     009B                     	;# 
  3023     009C                     	;# 
  3024     009D                     	;# 
  3025     009E                     	;# 
  3026     009F                     	;# 
  3027     010C                     	;# 
  3028     010D                     	;# 
  3029     010E                     	;# 
  3030     0111                     	;# 
  3031     0112                     	;# 
  3032     0113                     	;# 
  3033     0114                     	;# 
  3034     0115                     	;# 
  3035     0116                     	;# 
  3036     0117                     	;# 
  3037     0118                     	;# 
  3038     0119                     	;# 
  3039     018C                     	;# 
  3040     018D                     	;# 
  3041     018E                     	;# 
  3042     0197                     	;# 
  3043     0199                     	;# 
  3044     0199                     	;# 
  3045     0199                     	;# 
  3046     019A                     	;# 
  3047     019A                     	;# 
  3048     019A                     	;# 
  3049     019B                     	;# 
  3050     019B                     	;# 
  3051     019B                     	;# 
  3052     019B                     	;# 
  3053     019B                     	;# 
  3054     019C                     	;# 
  3055     019C                     	;# 
  3056     019C                     	;# 
  3057     019D                     	;# 
  3058     019D                     	;# 
  3059     019D                     	;# 
  3060     019E                     	;# 
  3061     019E                     	;# 
  3062     019E                     	;# 
  3063     019F                     	;# 
  3064     019F                     	;# 
  3065     019F                     	;# 
  3066     019F                     	;# 
  3067     019F                     	;# 
  3068     020C                     	;# 
  3069     020D                     	;# 
  3070     020E                     	;# 
  3071     0211                     	;# 
  3072     0211                     	;# 
  3073     0212                     	;# 
  3074     0212                     	;# 
  3075     0213                     	;# 
  3076     0213                     	;# 
  3077     0214                     	;# 
  3078     0214                     	;# 
  3079     0215                     	;# 
  3080     0215                     	;# 
  3081     0215                     	;# 
  3082     0215                     	;# 
  3083     0216                     	;# 
  3084     0216                     	;# 
  3085     0217                     	;# 
  3086     0217                     	;# 
  3087     0219                     	;# 
  3088     021A                     	;# 
  3089     021B                     	;# 
  3090     021C                     	;# 
  3091     021D                     	;# 
  3092     021D                     	;# 
  3093     021E                     	;# 
  3094     021F                     	;# 
  3095     028C                     	;# 
  3096     028D                     	;# 
  3097     028E                     	;# 
  3098     0291                     	;# 
  3099     0291                     	;# 
  3100     0292                     	;# 
  3101     0293                     	;# 
  3102     0294                     	;# 
  3103     0295                     	;# 
  3104     0295                     	;# 
  3105     0296                     	;# 
  3106     0297                     	;# 
  3107     0298                     	;# 
  3108     029F                     	;# 
  3109     030C                     	;# 
  3110     030D                     	;# 
  3111     030E                     	;# 
  3112     0311                     	;# 
  3113     0311                     	;# 
  3114     0312                     	;# 
  3115     0313                     	;# 
  3116     0314                     	;# 
  3117     0315                     	;# 
  3118     0315                     	;# 
  3119     0316                     	;# 
  3120     0317                     	;# 
  3121     0318                     	;# 
  3122     038C                     	;# 
  3123     038D                     	;# 
  3124     038E                     	;# 
  3125     0391                     	;# 
  3126     0392                     	;# 
  3127     0393                     	;# 
  3128     0394                     	;# 
  3129     0395                     	;# 
  3130     0396                     	;# 
  3131     0397                     	;# 
  3132     0398                     	;# 
  3133     0399                     	;# 
  3134     039A                     	;# 
  3135     039C                     	;# 
  3136     039D                     	;# 
  3137     039E                     	;# 
  3138     039F                     	;# 
  3139     0411                     	;# 
  3140     0411                     	;# 
  3141     0412                     	;# 
  3142     0413                     	;# 
  3143     0414                     	;# 
  3144     0415                     	;# 
  3145     0416                     	;# 
  3146     0417                     	;# 
  3147     0418                     	;# 
  3148     0418                     	;# 
  3149     0419                     	;# 
  3150     041A                     	;# 
  3151     041B                     	;# 
  3152     041C                     	;# 
  3153     041D                     	;# 
  3154     041E                     	;# 
  3155     041F                     	;# 
  3156     0498                     	;# 
  3157     0498                     	;# 
  3158     0499                     	;# 
  3159     049A                     	;# 
  3160     049B                     	;# 
  3161     049B                     	;# 
  3162     049C                     	;# 
  3163     049D                     	;# 
  3164     049E                     	;# 
  3165     049F                     	;# 
  3166     0617                     	;# 
  3167     0618                     	;# 
  3168     0619                     	;# 
  3169     0619                     	;# 
  3170     061A                     	;# 
  3171     061B                     	;# 
  3172     061C                     	;# 
  3173     061C                     	;# 
  3174     061F                     	;# 
  3175     0691                     	;# 
  3176     0692                     	;# 
  3177     0693                     	;# 
  3178     0694                     	;# 
  3179     0695                     	;# 
  3180     0696                     	;# 
  3181     0697                     	;# 
  3182     0698                     	;# 
  3183     0699                     	;# 
  3184     0711                     	;# 
  3185     0712                     	;# 
  3186     0713                     	;# 
  3187     0714                     	;# 
  3188     0715                     	;# 
  3189     0716                     	;# 
  3190     0717                     	;# 
  3191     0718                     	;# 
  3192     0719                     	;# 
  3193     0891                     	;# 
  3194     0891                     	;# 
  3195     0891                     	;# 
  3196     0891                     	;# 
  3197     0891                     	;# 
  3198     0891                     	;# 
  3199     0892                     	;# 
  3200     0892                     	;# 
  3201     0892                     	;# 
  3202     0893                     	;# 
  3203     0893                     	;# 
  3204     0893                     	;# 
  3205     0893                     	;# 
  3206     0893                     	;# 
  3207     0893                     	;# 
  3208     0894                     	;# 
  3209     0894                     	;# 
  3210     0894                     	;# 
  3211     0895                     	;# 
  3212     0895                     	;# 
  3213     0895                     	;# 
  3214     0896                     	;# 
  3215     0896                     	;# 
  3216     0896                     	;# 
  3217     089B                     	;# 
  3218     0911                     	;# 
  3219     0912                     	;# 
  3220     0913                     	;# 
  3221     0914                     	;# 
  3222     0915                     	;# 
  3223     0916                     	;# 
  3224     0918                     	;# 
  3225     0919                     	;# 
  3226     091A                     	;# 
  3227     091B                     	;# 
  3228     091C                     	;# 
  3229     091D                     	;# 
  3230     091E                     	;# 
  3231     091F                     	;# 
  3232     0E0F                     	;# 
  3233     0E10                     	;# 
  3234     0E11                     	;# 
  3235     0E12                     	;# 
  3236     0E13                     	;# 
  3237     0E14                     	;# 
  3238     0E15                     	;# 
  3239     0E16                     	;# 
  3240     0E17                     	;# 
  3241     0E18                     	;# 
  3242     0E19                     	;# 
  3243     0E1A                     	;# 
  3244     0E1B                     	;# 
  3245     0E1C                     	;# 
  3246     0E1D                     	;# 
  3247     0E1E                     	;# 
  3248     0E1F                     	;# 
  3249     0E20                     	;# 
  3250     0E21                     	;# 
  3251     0E22                     	;# 
  3252     0E24                     	;# 
  3253     0E25                     	;# 
  3254     0E28                     	;# 
  3255     0E29                     	;# 
  3256     0E2A                     	;# 
  3257     0E2B                     	;# 
  3258     0E2C                     	;# 
  3259     0E2D                     	;# 
  3260     0E2E                     	;# 
  3261     0E2F                     	;# 
  3262     0E90                     	;# 
  3263     0E91                     	;# 
  3264     0E92                     	;# 
  3265     0E94                     	;# 
  3266     0E95                     	;# 
  3267     0E9C                     	;# 
  3268     0E9D                     	;# 
  3269     0E9E                     	;# 
  3270     0E9F                     	;# 
  3271     0EA0                     	;# 
  3272     0EA1                     	;# 
  3273     0EA2                     	;# 
  3274     0EA3                     	;# 
  3275     0EA4                     	;# 
  3276     0EA5                     	;# 
  3277     0EA6                     	;# 
  3278     0EA7                     	;# 
  3279     0F0F                     	;# 
  3280     0F10                     	;# 
  3281     0F11                     	;# 
  3282     0F12                     	;# 
  3283     0F13                     	;# 
  3284     0F14                     	;# 
  3285     0F15                     	;# 
  3286     0F16                     	;# 
  3287     0F17                     	;# 
  3288     0F18                     	;# 
  3289     0F19                     	;# 
  3290     0F1A                     	;# 
  3291     0F1B                     	;# 
  3292     0F1C                     	;# 
  3293     0F1D                     	;# 
  3294     0F1E                     	;# 
  3295     0F1F                     	;# 
  3296     0F20                     	;# 
  3297     0F21                     	;# 
  3298     0F22                     	;# 
  3299     0F23                     	;# 
  3300     0F24                     	;# 
  3301     0F25                     	;# 
  3302     0F26                     	;# 
  3303     0F27                     	;# 
  3304     0F28                     	;# 
  3305     0F29                     	;# 
  3306     0F2A                     	;# 
  3307     0F2B                     	;# 
  3308     0F2C                     	;# 
  3309     0F2D                     	;# 
  3310     0F2E                     	;# 
  3311     0F2F                     	;# 
  3312     0F30                     	;# 
  3313     0F31                     	;# 
  3314     0F32                     	;# 
  3315     0F33                     	;# 
  3316     0F34                     	;# 
  3317     0F35                     	;# 
  3318     0F36                     	;# 
  3319     0F37                     	;# 
  3320     0FE4                     	;# 
  3321     0FE5                     	;# 
  3322     0FE6                     	;# 
  3323     0FE7                     	;# 
  3324     0FE8                     	;# 
  3325     0FE9                     	;# 
  3326     0FEA                     	;# 
  3327     0FEB                     	;# 
  3328     0FED                     	;# 
  3329     0FEE                     	;# 
  3330     0FEF                     	;# 
  3331     0000                     	;# 
  3332     0001                     	;# 
  3333     0002                     	;# 
  3334     0003                     	;# 
  3335     0004                     	;# 
  3336     0005                     	;# 
  3337     0006                     	;# 
  3338     0007                     	;# 
  3339     0008                     	;# 
  3340     0009                     	;# 
  3341     000A                     	;# 
  3342     000B                     	;# 
  3343     000C                     	;# 
  3344     000D                     	;# 
  3345     000E                     	;# 
  3346     0010                     	;# 
  3347     0011                     	;# 
  3348     0012                     	;# 
  3349     0013                     	;# 
  3350     0014                     	;# 
  3351     0015                     	;# 
  3352     0015                     	;# 
  3353     0016                     	;# 
  3354     0016                     	;# 
  3355     0017                     	;# 
  3356     0018                     	;# 
  3357     0019                     	;# 
  3358     0019                     	;# 
  3359     001A                     	;# 
  3360     001B                     	;# 
  3361     001C                     	;# 
  3362     001D                     	;# 
  3363     001E                     	;# 
  3364     001F                     	;# 
  3365     008C                     	;# 
  3366     008D                     	;# 
  3367     008E                     	;# 
  3368     0090                     	;# 
  3369     0091                     	;# 
  3370     0092                     	;# 
  3371     0093                     	;# 
  3372     0094                     	;# 
  3373     0097                     	;# 
  3374     009B                     	;# 
  3375     009B                     	;# 
  3376     009C                     	;# 
  3377     009D                     	;# 
  3378     009E                     	;# 
  3379     009F                     	;# 
  3380     010C                     	;# 
  3381     010D                     	;# 
  3382     010E                     	;# 
  3383     0111                     	;# 
  3384     0112                     	;# 
  3385     0113                     	;# 
  3386     0114                     	;# 
  3387     0115                     	;# 
  3388     0116                     	;# 
  3389     0117                     	;# 
  3390     0118                     	;# 
  3391     0119                     	;# 
  3392     018C                     	;# 
  3393     018D                     	;# 
  3394     018E                     	;# 
  3395     0197                     	;# 
  3396     0199                     	;# 
  3397     0199                     	;# 
  3398     0199                     	;# 
  3399     019A                     	;# 
  3400     019A                     	;# 
  3401     019A                     	;# 
  3402     019B                     	;# 
  3403     019B                     	;# 
  3404     019B                     	;# 
  3405     019B                     	;# 
  3406     019B                     	;# 
  3407     019C                     	;# 
  3408     019C                     	;# 
  3409     019C                     	;# 
  3410     019D                     	;# 
  3411     019D                     	;# 
  3412     019D                     	;# 
  3413     019E                     	;# 
  3414     019E                     	;# 
  3415     019E                     	;# 
  3416     019F                     	;# 
  3417     019F                     	;# 
  3418     019F                     	;# 
  3419     019F                     	;# 
  3420     019F                     	;# 
  3421     020C                     	;# 
  3422     020D                     	;# 
  3423     020E                     	;# 
  3424     0211                     	;# 
  3425     0211                     	;# 
  3426     0212                     	;# 
  3427     0212                     	;# 
  3428     0213                     	;# 
  3429     0213                     	;# 
  3430     0214                     	;# 
  3431     0214                     	;# 
  3432     0215                     	;# 
  3433     0215                     	;# 
  3434     0215                     	;# 
  3435     0215                     	;# 
  3436     0216                     	;# 
  3437     0216                     	;# 
  3438     0217                     	;# 
  3439     0217                     	;# 
  3440     0219                     	;# 
  3441     021A                     	;# 
  3442     021B                     	;# 
  3443     021C                     	;# 
  3444     021D                     	;# 
  3445     021D                     	;# 
  3446     021E                     	;# 
  3447     021F                     	;# 
  3448     028C                     	;# 
  3449     028D                     	;# 
  3450     028E                     	;# 
  3451     0291                     	;# 
  3452     0291                     	;# 
  3453     0292                     	;# 
  3454     0293                     	;# 
  3455     0294                     	;# 
  3456     0295                     	;# 
  3457     0295                     	;# 
  3458     0296                     	;# 
  3459     0297                     	;# 
  3460     0298                     	;# 
  3461     029F                     	;# 
  3462     030C                     	;# 
  3463     030D                     	;# 
  3464     030E                     	;# 
  3465     0311                     	;# 
  3466     0311                     	;# 
  3467     0312                     	;# 
  3468     0313                     	;# 
  3469     0314                     	;# 
  3470     0315                     	;# 
  3471     0315                     	;# 
  3472     0316                     	;# 
  3473     0317                     	;# 
  3474     0318                     	;# 
  3475     038C                     	;# 
  3476     038D                     	;# 
  3477     038E                     	;# 
  3478     0391                     	;# 
  3479     0392                     	;# 
  3480     0393                     	;# 
  3481     0394                     	;# 
  3482     0395                     	;# 
  3483     0396                     	;# 
  3484     0397                     	;# 
  3485     0398                     	;# 
  3486     0399                     	;# 
  3487     039A                     	;# 
  3488     039C                     	;# 
  3489     039D                     	;# 
  3490     039E                     	;# 
  3491     039F                     	;# 
  3492     0411                     	;# 
  3493     0411                     	;# 
  3494     0412                     	;# 
  3495     0413                     	;# 
  3496     0414                     	;# 
  3497     0415                     	;# 
  3498     0416                     	;# 
  3499     0417                     	;# 
  3500     0418                     	;# 
  3501     0418                     	;# 
  3502     0419                     	;# 
  3503     041A                     	;# 
  3504     041B                     	;# 
  3505     041C                     	;# 
  3506     041D                     	;# 
  3507     041E                     	;# 
  3508     041F                     	;# 
  3509     0498                     	;# 
  3510     0498                     	;# 
  3511     0499                     	;# 
  3512     049A                     	;# 
  3513     049B                     	;# 
  3514     049B                     	;# 
  3515     049C                     	;# 
  3516     049D                     	;# 
  3517     049E                     	;# 
  3518     049F                     	;# 
  3519     0617                     	;# 
  3520     0618                     	;# 
  3521     0619                     	;# 
  3522     0619                     	;# 
  3523     061A                     	;# 
  3524     061B                     	;# 
  3525     061C                     	;# 
  3526     061C                     	;# 
  3527     061F                     	;# 
  3528     0691                     	;# 
  3529     0692                     	;# 
  3530     0693                     	;# 
  3531     0694                     	;# 
  3532     0695                     	;# 
  3533     0696                     	;# 
  3534     0697                     	;# 
  3535     0698                     	;# 
  3536     0699                     	;# 
  3537     0711                     	;# 
  3538     0712                     	;# 
  3539     0713                     	;# 
  3540     0714                     	;# 
  3541     0715                     	;# 
  3542     0716                     	;# 
  3543     0717                     	;# 
  3544     0718                     	;# 
  3545     0719                     	;# 
  3546     0891                     	;# 
  3547     0891                     	;# 
  3548     0891                     	;# 
  3549     0891                     	;# 
  3550     0891                     	;# 
  3551     0891                     	;# 
  3552     0892                     	;# 
  3553     0892                     	;# 
  3554     0892                     	;# 
  3555     0893                     	;# 
  3556     0893                     	;# 
  3557     0893                     	;# 
  3558     0893                     	;# 
  3559     0893                     	;# 
  3560     0893                     	;# 
  3561     0894                     	;# 
  3562     0894                     	;# 
  3563     0894                     	;# 
  3564     0895                     	;# 
  3565     0895                     	;# 
  3566     0895                     	;# 
  3567     0896                     	;# 
  3568     0896                     	;# 
  3569     0896                     	;# 
  3570     089B                     	;# 
  3571     0911                     	;# 
  3572     0912                     	;# 
  3573     0913                     	;# 
  3574     0914                     	;# 
  3575     0915                     	;# 
  3576     0916                     	;# 
  3577     0918                     	;# 
  3578     0919                     	;# 
  3579     091A                     	;# 
  3580     091B                     	;# 
  3581     091C                     	;# 
  3582     091D                     	;# 
  3583     091E                     	;# 
  3584     091F                     	;# 
  3585     0E0F                     	;# 
  3586     0E10                     	;# 
  3587     0E11                     	;# 
  3588     0E12                     	;# 
  3589     0E13                     	;# 
  3590     0E14                     	;# 
  3591     0E15                     	;# 
  3592     0E16                     	;# 
  3593     0E17                     	;# 
  3594     0E18                     	;# 
  3595     0E19                     	;# 
  3596     0E1A                     	;# 
  3597     0E1B                     	;# 
  3598     0E1C                     	;# 
  3599     0E1D                     	;# 
  3600     0E1E                     	;# 
  3601     0E1F                     	;# 
  3602     0E20                     	;# 
  3603     0E21                     	;# 
  3604     0E22                     	;# 
  3605     0E24                     	;# 
  3606     0E25                     	;# 
  3607     0E28                     	;# 
  3608     0E29                     	;# 
  3609     0E2A                     	;# 
  3610     0E2B                     	;# 
  3611     0E2C                     	;# 
  3612     0E2D                     	;# 
  3613     0E2E                     	;# 
  3614     0E2F                     	;# 
  3615     0E90                     	;# 
  3616     0E91                     	;# 
  3617     0E92                     	;# 
  3618     0E94                     	;# 
  3619     0E95                     	;# 
  3620     0E9C                     	;# 
  3621     0E9D                     	;# 
  3622     0E9E                     	;# 
  3623     0E9F                     	;# 
  3624     0EA0                     	;# 
  3625     0EA1                     	;# 
  3626     0EA2                     	;# 
  3627     0EA3                     	;# 
  3628     0EA4                     	;# 
  3629     0EA5                     	;# 
  3630     0EA6                     	;# 
  3631     0EA7                     	;# 
  3632     0F0F                     	;# 
  3633     0F10                     	;# 
  3634     0F11                     	;# 
  3635     0F12                     	;# 
  3636     0F13                     	;# 
  3637     0F14                     	;# 
  3638     0F15                     	;# 
  3639     0F16                     	;# 
  3640     0F17                     	;# 
  3641     0F18                     	;# 
  3642     0F19                     	;# 
  3643     0F1A                     	;# 
  3644     0F1B                     	;# 
  3645     0F1C                     	;# 
  3646     0F1D                     	;# 
  3647     0F1E                     	;# 
  3648     0F1F                     	;# 
  3649     0F20                     	;# 
  3650     0F21                     	;# 
  3651     0F22                     	;# 
  3652     0F23                     	;# 
  3653     0F24                     	;# 
  3654     0F25                     	;# 
  3655     0F26                     	;# 
  3656     0F27                     	;# 
  3657     0F28                     	;# 
  3658     0F29                     	;# 
  3659     0F2A                     	;# 
  3660     0F2B                     	;# 
  3661     0F2C                     	;# 
  3662     0F2D                     	;# 
  3663     0F2E                     	;# 
  3664     0F2F                     	;# 
  3665     0F30                     	;# 
  3666     0F31                     	;# 
  3667     0F32                     	;# 
  3668     0F33                     	;# 
  3669     0F34                     	;# 
  3670     0F35                     	;# 
  3671     0F36                     	;# 
  3672     0F37                     	;# 
  3673     0FE4                     	;# 
  3674     0FE5                     	;# 
  3675     0FE6                     	;# 
  3676     0FE7                     	;# 
  3677     0FE8                     	;# 
  3678     0FE9                     	;# 
  3679     0FEA                     	;# 
  3680     0FEB                     	;# 
  3681     0FED                     	;# 
  3682     0FEE                     	;# 
  3683     0FEF                     	;# 
  3684     0000                     	;# 
  3685     0001                     	;# 
  3686     0002                     	;# 
  3687     0003                     	;# 
  3688     0004                     	;# 
  3689     0005                     	;# 
  3690     0006                     	;# 
  3691     0007                     	;# 
  3692     0008                     	;# 
  3693     0009                     	;# 
  3694     000A                     	;# 
  3695     000B                     	;# 
  3696     000C                     	;# 
  3697     000D                     	;# 
  3698     000E                     	;# 
  3699     0010                     	;# 
  3700     0011                     	;# 
  3701     0012                     	;# 
  3702     0013                     	;# 
  3703     0014                     	;# 
  3704     0015                     	;# 
  3705     0015                     	;# 
  3706     0016                     	;# 
  3707     0016                     	;# 
  3708     0017                     	;# 
  3709     0018                     	;# 
  3710     0019                     	;# 
  3711     0019                     	;# 
  3712     001A                     	;# 
  3713     001B                     	;# 
  3714     001C                     	;# 
  3715     001D                     	;# 
  3716     001E                     	;# 
  3717     001F                     	;# 
  3718     008C                     	;# 
  3719     008D                     	;# 
  3720     008E                     	;# 
  3721     0090                     	;# 
  3722     0091                     	;# 
  3723     0092                     	;# 
  3724     0093                     	;# 
  3725     0094                     	;# 
  3726     0097                     	;# 
  3727     009B                     	;# 
  3728     009B                     	;# 
  3729     009C                     	;# 
  3730     009D                     	;# 
  3731     009E                     	;# 
  3732     009F                     	;# 
  3733     010C                     	;# 
  3734     010D                     	;# 
  3735     010E                     	;# 
  3736     0111                     	;# 
  3737     0112                     	;# 
  3738     0113                     	;# 
  3739     0114                     	;# 
  3740     0115                     	;# 
  3741     0116                     	;# 
  3742     0117                     	;# 
  3743     0118                     	;# 
  3744     0119                     	;# 
  3745     018C                     	;# 
  3746     018D                     	;# 
  3747     018E                     	;# 
  3748     0197                     	;# 
  3749     0199                     	;# 
  3750     0199                     	;# 
  3751     0199                     	;# 
  3752     019A                     	;# 
  3753     019A                     	;# 
  3754     019A                     	;# 
  3755     019B                     	;# 
  3756     019B                     	;# 
  3757     019B                     	;# 
  3758     019B                     	;# 
  3759     019B                     	;# 
  3760     019C                     	;# 
  3761     019C                     	;# 
  3762     019C                     	;# 
  3763     019D                     	;# 
  3764     019D                     	;# 
  3765     019D                     	;# 
  3766     019E                     	;# 
  3767     019E                     	;# 
  3768     019E                     	;# 
  3769     019F                     	;# 
  3770     019F                     	;# 
  3771     019F                     	;# 
  3772     019F                     	;# 
  3773     019F                     	;# 
  3774     020C                     	;# 
  3775     020D                     	;# 
  3776     020E                     	;# 
  3777     0211                     	;# 
  3778     0211                     	;# 
  3779     0212                     	;# 
  3780     0212                     	;# 
  3781     0213                     	;# 
  3782     0213                     	;# 
  3783     0214                     	;# 
  3784     0214                     	;# 
  3785     0215                     	;# 
  3786     0215                     	;# 
  3787     0215                     	;# 
  3788     0215                     	;# 
  3789     0216                     	;# 
  3790     0216                     	;# 
  3791     0217                     	;# 
  3792     0217                     	;# 
  3793     0219                     	;# 
  3794     021A                     	;# 
  3795     021B                     	;# 
  3796     021C                     	;# 
  3797     021D                     	;# 
  3798     021D                     	;# 
  3799     021E                     	;# 
  3800     021F                     	;# 
  3801     028C                     	;# 
  3802     028D                     	;# 
  3803     028E                     	;# 
  3804     0291                     	;# 
  3805     0291                     	;# 
  3806     0292                     	;# 
  3807     0293                     	;# 
  3808     0294                     	;# 
  3809     0295                     	;# 
  3810     0295                     	;# 
  3811     0296                     	;# 
  3812     0297                     	;# 
  3813     0298                     	;# 
  3814     029F                     	;# 
  3815     030C                     	;# 
  3816     030D                     	;# 
  3817     030E                     	;# 
  3818     0311                     	;# 
  3819     0311                     	;# 
  3820     0312                     	;# 
  3821     0313                     	;# 
  3822     0314                     	;# 
  3823     0315                     	;# 
  3824     0315                     	;# 
  3825     0316                     	;# 
  3826     0317                     	;# 
  3827     0318                     	;# 
  3828     038C                     	;# 
  3829     038D                     	;# 
  3830     038E                     	;# 
  3831     0391                     	;# 
  3832     0392                     	;# 
  3833     0393                     	;# 
  3834     0394                     	;# 
  3835     0395                     	;# 
  3836     0396                     	;# 
  3837     0397                     	;# 
  3838     0398                     	;# 
  3839     0399                     	;# 
  3840     039A                     	;# 
  3841     039C                     	;# 
  3842     039D                     	;# 
  3843     039E                     	;# 
  3844     039F                     	;# 
  3845     0411                     	;# 
  3846     0411                     	;# 
  3847     0412                     	;# 
  3848     0413                     	;# 
  3849     0414                     	;# 
  3850     0415                     	;# 
  3851     0416                     	;# 
  3852     0417                     	;# 
  3853     0418                     	;# 
  3854     0418                     	;# 
  3855     0419                     	;# 
  3856     041A                     	;# 
  3857     041B                     	;# 
  3858     041C                     	;# 
  3859     041D                     	;# 
  3860     041E                     	;# 
  3861     041F                     	;# 
  3862     0498                     	;# 
  3863     0498                     	;# 
  3864     0499                     	;# 
  3865     049A                     	;# 
  3866     049B                     	;# 
  3867     049B                     	;# 
  3868     049C                     	;# 
  3869     049D                     	;# 
  3870     049E                     	;# 
  3871     049F                     	;# 
  3872     0617                     	;# 
  3873     0618                     	;# 
  3874     0619                     	;# 
  3875     0619                     	;# 
  3876     061A                     	;# 
  3877     061B                     	;# 
  3878     061C                     	;# 
  3879     061C                     	;# 
  3880     061F                     	;# 
  3881     0691                     	;# 
  3882     0692                     	;# 
  3883     0693                     	;# 
  3884     0694                     	;# 
  3885     0695                     	;# 
  3886     0696                     	;# 
  3887     0697                     	;# 
  3888     0698                     	;# 
  3889     0699                     	;# 
  3890     0711                     	;# 
  3891     0712                     	;# 
  3892     0713                     	;# 
  3893     0714                     	;# 
  3894     0715                     	;# 
  3895     0716                     	;# 
  3896     0717                     	;# 
  3897     0718                     	;# 
  3898     0719                     	;# 
  3899     0891                     	;# 
  3900     0891                     	;# 
  3901     0891                     	;# 
  3902     0891                     	;# 
  3903     0891                     	;# 
  3904     0891                     	;# 
  3905     0892                     	;# 
  3906     0892                     	;# 
  3907     0892                     	;# 
  3908     0893                     	;# 
  3909     0893                     	;# 
  3910     0893                     	;# 
  3911     0893                     	;# 
  3912     0893                     	;# 
  3913     0893                     	;# 
  3914     0894                     	;# 
  3915     0894                     	;# 
  3916     0894                     	;# 
  3917     0895                     	;# 
  3918     0895                     	;# 
  3919     0895                     	;# 
  3920     0896                     	;# 
  3921     0896                     	;# 
  3922     0896                     	;# 
  3923     089B                     	;# 
  3924     0911                     	;# 
  3925     0912                     	;# 
  3926     0913                     	;# 
  3927     0914                     	;# 
  3928     0915                     	;# 
  3929     0916                     	;# 
  3930     0918                     	;# 
  3931     0919                     	;# 
  3932     091A                     	;# 
  3933     091B                     	;# 
  3934     091C                     	;# 
  3935     091D                     	;# 
  3936     091E                     	;# 
  3937     091F                     	;# 
  3938     0E0F                     	;# 
  3939     0E10                     	;# 
  3940     0E11                     	;# 
  3941     0E12                     	;# 
  3942     0E13                     	;# 
  3943     0E14                     	;# 
  3944     0E15                     	;# 
  3945     0E16                     	;# 
  3946     0E17                     	;# 
  3947     0E18                     	;# 
  3948     0E19                     	;# 
  3949     0E1A                     	;# 
  3950     0E1B                     	;# 
  3951     0E1C                     	;# 
  3952     0E1D                     	;# 
  3953     0E1E                     	;# 
  3954     0E1F                     	;# 
  3955     0E20                     	;# 
  3956     0E21                     	;# 
  3957     0E22                     	;# 
  3958     0E24                     	;# 
  3959     0E25                     	;# 
  3960     0E28                     	;# 
  3961     0E29                     	;# 
  3962     0E2A                     	;# 
  3963     0E2B                     	;# 
  3964     0E2C                     	;# 
  3965     0E2D                     	;# 
  3966     0E2E                     	;# 
  3967     0E2F                     	;# 
  3968     0E90                     	;# 
  3969     0E91                     	;# 
  3970     0E92                     	;# 
  3971     0E94                     	;# 
  3972     0E95                     	;# 
  3973     0E9C                     	;# 
  3974     0E9D                     	;# 
  3975     0E9E                     	;# 
  3976     0E9F                     	;# 
  3977     0EA0                     	;# 
  3978     0EA1                     	;# 
  3979     0EA2                     	;# 
  3980     0EA3                     	;# 
  3981     0EA4                     	;# 
  3982     0EA5                     	;# 
  3983     0EA6                     	;# 
  3984     0EA7                     	;# 
  3985     0F0F                     	;# 
  3986     0F10                     	;# 
  3987     0F11                     	;# 
  3988     0F12                     	;# 
  3989     0F13                     	;# 
  3990     0F14                     	;# 
  3991     0F15                     	;# 
  3992     0F16                     	;# 
  3993     0F17                     	;# 
  3994     0F18                     	;# 
  3995     0F19                     	;# 
  3996     0F1A                     	;# 
  3997     0F1B                     	;# 
  3998     0F1C                     	;# 
  3999     0F1D                     	;# 
  4000     0F1E                     	;# 
  4001     0F1F                     	;# 
  4002     0F20                     	;# 
  4003     0F21                     	;# 
  4004     0F22                     	;# 
  4005     0F23                     	;# 
  4006     0F24                     	;# 
  4007     0F25                     	;# 
  4008     0F26                     	;# 
  4009     0F27                     	;# 
  4010     0F28                     	;# 
  4011     0F29                     	;# 
  4012     0F2A                     	;# 
  4013     0F2B                     	;# 
  4014     0F2C                     	;# 
  4015     0F2D                     	;# 
  4016     0F2E                     	;# 
  4017     0F2F                     	;# 
  4018     0F30                     	;# 
  4019     0F31                     	;# 
  4020     0F32                     	;# 
  4021     0F33                     	;# 
  4022     0F34                     	;# 
  4023     0F35                     	;# 
  4024     0F36                     	;# 
  4025     0F37                     	;# 
  4026     0FE4                     	;# 
  4027     0FE5                     	;# 
  4028     0FE6                     	;# 
  4029     0FE7                     	;# 
  4030     0FE8                     	;# 
  4031     0FE9                     	;# 
  4032     0FEA                     	;# 
  4033     0FEB                     	;# 
  4034     0FED                     	;# 
  4035     0FEE                     	;# 
  4036     0FEF                     	;# 
  4037     0000                     	;# 
  4038     0001                     	;# 
  4039     0002                     	;# 
  4040     0003                     	;# 
  4041     0004                     	;# 
  4042     0005                     	;# 
  4043     0006                     	;# 
  4044     0007                     	;# 
  4045     0008                     	;# 
  4046     0009                     	;# 
  4047     000A                     	;# 
  4048     000B                     	;# 
  4049     000C                     	;# 
  4050     000D                     	;# 
  4051     000E                     	;# 
  4052     0010                     	;# 
  4053     0011                     	;# 
  4054     0012                     	;# 
  4055     0013                     	;# 
  4056     0014                     	;# 
  4057     0015                     	;# 
  4058     0015                     	;# 
  4059     0016                     	;# 
  4060     0016                     	;# 
  4061     0017                     	;# 
  4062     0018                     	;# 
  4063     0019                     	;# 
  4064     0019                     	;# 
  4065     001A                     	;# 
  4066     001B                     	;# 
  4067     001C                     	;# 
  4068     001D                     	;# 
  4069     001E                     	;# 
  4070     001F                     	;# 
  4071     008C                     	;# 
  4072     008D                     	;# 
  4073     008E                     	;# 
  4074     0090                     	;# 
  4075     0091                     	;# 
  4076     0092                     	;# 
  4077     0093                     	;# 
  4078     0094                     	;# 
  4079     0097                     	;# 
  4080     009B                     	;# 
  4081     009B                     	;# 
  4082     009C                     	;# 
  4083     009D                     	;# 
  4084     009E                     	;# 
  4085     009F                     	;# 
  4086     010C                     	;# 
  4087     010D                     	;# 
  4088     010E                     	;# 
  4089     0111                     	;# 
  4090     0112                     	;# 
  4091     0113                     	;# 
  4092     0114                     	;# 
  4093     0115                     	;# 
  4094     0116                     	;# 
  4095     0117                     	;# 
  4096     0118                     	;# 
  4097     0119                     	;# 
  4098     018C                     	;# 
  4099     018D                     	;# 
  4100     018E                     	;# 
  4101     0197                     	;# 
  4102     0199                     	;# 
  4103     0199                     	;# 
  4104     0199                     	;# 
  4105     019A                     	;# 
  4106     019A                     	;# 
  4107     019A                     	;# 
  4108     019B                     	;# 
  4109     019B                     	;# 
  4110     019B                     	;# 
  4111     019B                     	;# 
  4112     019B                     	;# 
  4113     019C                     	;# 
  4114     019C                     	;# 
  4115     019C                     	;# 
  4116     019D                     	;# 
  4117     019D                     	;# 
  4118     019D                     	;# 
  4119     019E                     	;# 
  4120     019E                     	;# 
  4121     019E                     	;# 
  4122     019F                     	;# 
  4123     019F                     	;# 
  4124     019F                     	;# 
  4125     019F                     	;# 
  4126     019F                     	;# 
  4127     020C                     	;# 
  4128     020D                     	;# 
  4129     020E                     	;# 
  4130     0211                     	;# 
  4131     0211                     	;# 
  4132     0212                     	;# 
  4133     0212                     	;# 
  4134     0213                     	;# 
  4135     0213                     	;# 
  4136     0214                     	;# 
  4137     0214                     	;# 
  4138     0215                     	;# 
  4139     0215                     	;# 
  4140     0215                     	;# 
  4141     0215                     	;# 
  4142     0216                     	;# 
  4143     0216                     	;# 
  4144     0217                     	;# 
  4145     0217                     	;# 
  4146     0219                     	;# 
  4147     021A                     	;# 
  4148     021B                     	;# 
  4149     021C                     	;# 
  4150     021D                     	;# 
  4151     021D                     	;# 
  4152     021E                     	;# 
  4153     021F                     	;# 
  4154     028C                     	;# 
  4155     028D                     	;# 
  4156     028E                     	;# 
  4157     0291                     	;# 
  4158     0291                     	;# 
  4159     0292                     	;# 
  4160     0293                     	;# 
  4161     0294                     	;# 
  4162     0295                     	;# 
  4163     0295                     	;# 
  4164     0296                     	;# 
  4165     0297                     	;# 
  4166     0298                     	;# 
  4167     029F                     	;# 
  4168     030C                     	;# 
  4169     030D                     	;# 
  4170     030E                     	;# 
  4171     0311                     	;# 
  4172     0311                     	;# 
  4173     0312                     	;# 
  4174     0313                     	;# 
  4175     0314                     	;# 
  4176     0315                     	;# 
  4177     0315                     	;# 
  4178     0316                     	;# 
  4179     0317                     	;# 
  4180     0318                     	;# 
  4181     038C                     	;# 
  4182     038D                     	;# 
  4183     038E                     	;# 
  4184     0391                     	;# 
  4185     0392                     	;# 
  4186     0393                     	;# 
  4187     0394                     	;# 
  4188     0395                     	;# 
  4189     0396                     	;# 
  4190     0397                     	;# 
  4191     0398                     	;# 
  4192     0399                     	;# 
  4193     039A                     	;# 
  4194     039C                     	;# 
  4195     039D                     	;# 
  4196     039E                     	;# 
  4197     039F                     	;# 
  4198     0411                     	;# 
  4199     0411                     	;# 
  4200     0412                     	;# 
  4201     0413                     	;# 
  4202     0414                     	;# 
  4203     0415                     	;# 
  4204     0416                     	;# 
  4205     0417                     	;# 
  4206     0418                     	;# 
  4207     0418                     	;# 
  4208     0419                     	;# 
  4209     041A                     	;# 
  4210     041B                     	;# 
  4211     041C                     	;# 
  4212     041D                     	;# 
  4213     041E                     	;# 
  4214     041F                     	;# 
  4215     0498                     	;# 
  4216     0498                     	;# 
  4217     0499                     	;# 
  4218     049A                     	;# 
  4219     049B                     	;# 
  4220     049B                     	;# 
  4221     049C                     	;# 
  4222     049D                     	;# 
  4223     049E                     	;# 
  4224     049F                     	;# 
  4225     0617                     	;# 
  4226     0618                     	;# 
  4227     0619                     	;# 
  4228     0619                     	;# 
  4229     061A                     	;# 
  4230     061B                     	;# 
  4231     061C                     	;# 
  4232     061C                     	;# 
  4233     061F                     	;# 
  4234     0691                     	;# 
  4235     0692                     	;# 
  4236     0693                     	;# 
  4237     0694                     	;# 
  4238     0695                     	;# 
  4239     0696                     	;# 
  4240     0697                     	;# 
  4241     0698                     	;# 
  4242     0699                     	;# 
  4243     0711                     	;# 
  4244     0712                     	;# 
  4245     0713                     	;# 
  4246     0714                     	;# 
  4247     0715                     	;# 
  4248     0716                     	;# 
  4249     0717                     	;# 
  4250     0718                     	;# 
  4251     0719                     	;# 
  4252     0891                     	;# 
  4253     0891                     	;# 
  4254     0891                     	;# 
  4255     0891                     	;# 
  4256     0891                     	;# 
  4257     0891                     	;# 
  4258     0892                     	;# 
  4259     0892                     	;# 
  4260     0892                     	;# 
  4261     0893                     	;# 
  4262     0893                     	;# 
  4263     0893                     	;# 
  4264     0893                     	;# 
  4265     0893                     	;# 
  4266     0893                     	;# 
  4267     0894                     	;# 
  4268     0894                     	;# 
  4269     0894                     	;# 
  4270     0895                     	;# 
  4271     0895                     	;# 
  4272     0895                     	;# 
  4273     0896                     	;# 
  4274     0896                     	;# 
  4275     0896                     	;# 
  4276     089B                     	;# 
  4277     0911                     	;# 
  4278     0912                     	;# 
  4279     0913                     	;# 
  4280     0914                     	;# 
  4281     0915                     	;# 
  4282     0916                     	;# 
  4283     0918                     	;# 
  4284     0919                     	;# 
  4285     091A                     	;# 
  4286     091B                     	;# 
  4287     091C                     	;# 
  4288     091D                     	;# 
  4289     091E                     	;# 
  4290     091F                     	;# 
  4291     0E0F                     	;# 
  4292     0E10                     	;# 
  4293     0E11                     	;# 
  4294     0E12                     	;# 
  4295     0E13                     	;# 
  4296     0E14                     	;# 
  4297     0E15                     	;# 
  4298     0E16                     	;# 
  4299     0E17                     	;# 
  4300     0E18                     	;# 
  4301     0E19                     	;# 
  4302     0E1A                     	;# 
  4303     0E1B                     	;# 
  4304     0E1C                     	;# 
  4305     0E1D                     	;# 
  4306     0E1E                     	;# 
  4307     0E1F                     	;# 
  4308     0E20                     	;# 
  4309     0E21                     	;# 
  4310     0E22                     	;# 
  4311     0E24                     	;# 
  4312     0E25                     	;# 
  4313     0E28                     	;# 
  4314     0E29                     	;# 
  4315     0E2A                     	;# 
  4316     0E2B                     	;# 
  4317     0E2C                     	;# 
  4318     0E2D                     	;# 
  4319     0E2E                     	;# 
  4320     0E2F                     	;# 
  4321     0E90                     	;# 
  4322     0E91                     	;# 
  4323     0E92                     	;# 
  4324     0E94                     	;# 
  4325     0E95                     	;# 
  4326     0E9C                     	;# 
  4327     0E9D                     	;# 
  4328     0E9E                     	;# 
  4329     0E9F                     	;# 
  4330     0EA0                     	;# 
  4331     0EA1                     	;# 
  4332     0EA2                     	;# 
  4333     0EA3                     	;# 
  4334     0EA4                     	;# 
  4335     0EA5                     	;# 
  4336     0EA6                     	;# 
  4337     0EA7                     	;# 
  4338     0F0F                     	;# 
  4339     0F10                     	;# 
  4340     0F11                     	;# 
  4341     0F12                     	;# 
  4342     0F13                     	;# 
  4343     0F14                     	;# 
  4344     0F15                     	;# 
  4345     0F16                     	;# 
  4346     0F17                     	;# 
  4347     0F18                     	;# 
  4348     0F19                     	;# 
  4349     0F1A                     	;# 
  4350     0F1B                     	;# 
  4351     0F1C                     	;# 
  4352     0F1D                     	;# 
  4353     0F1E                     	;# 
  4354     0F1F                     	;# 
  4355     0F20                     	;# 
  4356     0F21                     	;# 
  4357     0F22                     	;# 
  4358     0F23                     	;# 
  4359     0F24                     	;# 
  4360     0F25                     	;# 
  4361     0F26                     	;# 
  4362     0F27                     	;# 
  4363     0F28                     	;# 
  4364     0F29                     	;# 
  4365     0F2A                     	;# 
  4366     0F2B                     	;# 
  4367     0F2C                     	;# 
  4368     0F2D                     	;# 
  4369     0F2E                     	;# 
  4370     0F2F                     	;# 
  4371     0F30                     	;# 
  4372     0F31                     	;# 
  4373     0F32                     	;# 
  4374     0F33                     	;# 
  4375     0F34                     	;# 
  4376     0F35                     	;# 
  4377     0F36                     	;# 
  4378     0F37                     	;# 
  4379     0FE4                     	;# 
  4380     0FE5                     	;# 
  4381     0FE6                     	;# 
  4382     0FE7                     	;# 
  4383     0FE8                     	;# 
  4384     0FE9                     	;# 
  4385     0FEA                     	;# 
  4386     0FEB                     	;# 
  4387     0FED                     	;# 
  4388     0FEE                     	;# 
  4389     0FEF                     	;# 
  4390     0000                     	;# 
  4391     0001                     	;# 
  4392     0002                     	;# 
  4393     0003                     	;# 
  4394     0004                     	;# 
  4395     0005                     	;# 
  4396     0006                     	;# 
  4397     0007                     	;# 
  4398     0008                     	;# 
  4399     0009                     	;# 
  4400     000A                     	;# 
  4401     000B                     	;# 
  4402     000C                     	;# 
  4403     000D                     	;# 
  4404     000E                     	;# 
  4405     0010                     	;# 
  4406     0011                     	;# 
  4407     0012                     	;# 
  4408     0013                     	;# 
  4409     0014                     	;# 
  4410     0015                     	;# 
  4411     0015                     	;# 
  4412     0016                     	;# 
  4413     0016                     	;# 
  4414     0017                     	;# 
  4415     0018                     	;# 
  4416     0019                     	;# 
  4417     0019                     	;# 
  4418     001A                     	;# 
  4419     001B                     	;# 
  4420     001C                     	;# 
  4421     001D                     	;# 
  4422     001E                     	;# 
  4423     001F                     	;# 
  4424     008C                     	;# 
  4425     008D                     	;# 
  4426     008E                     	;# 
  4427     0090                     	;# 
  4428     0091                     	;# 
  4429     0092                     	;# 
  4430     0093                     	;# 
  4431     0094                     	;# 
  4432     0097                     	;# 
  4433     009B                     	;# 
  4434     009B                     	;# 
  4435     009C                     	;# 
  4436     009D                     	;# 
  4437     009E                     	;# 
  4438     009F                     	;# 
  4439     010C                     	;# 
  4440     010D                     	;# 
  4441     010E                     	;# 
  4442     0111                     	;# 
  4443     0112                     	;# 
  4444     0113                     	;# 
  4445     0114                     	;# 
  4446     0115                     	;# 
  4447     0116                     	;# 
  4448     0117                     	;# 
  4449     0118                     	;# 
  4450     0119                     	;# 
  4451     018C                     	;# 
  4452     018D                     	;# 
  4453     018E                     	;# 
  4454     0197                     	;# 
  4455     0199                     	;# 
  4456     0199                     	;# 
  4457     0199                     	;# 
  4458     019A                     	;# 
  4459     019A                     	;# 
  4460     019A                     	;# 
  4461     019B                     	;# 
  4462     019B                     	;# 
  4463     019B                     	;# 
  4464     019B                     	;# 
  4465     019B                     	;# 
  4466     019C                     	;# 
  4467     019C                     	;# 
  4468     019C                     	;# 
  4469     019D                     	;# 
  4470     019D                     	;# 
  4471     019D                     	;# 
  4472     019E                     	;# 
  4473     019E                     	;# 
  4474     019E                     	;# 
  4475     019F                     	;# 
  4476     019F                     	;# 
  4477     019F                     	;# 
  4478     019F                     	;# 
  4479     019F                     	;# 
  4480     020C                     	;# 
  4481     020D                     	;# 
  4482     020E                     	;# 
  4483     0211                     	;# 
  4484     0211                     	;# 
  4485     0212                     	;# 
  4486     0212                     	;# 
  4487     0213                     	;# 
  4488     0213                     	;# 
  4489     0214                     	;# 
  4490     0214                     	;# 
  4491     0215                     	;# 
  4492     0215                     	;# 
  4493     0215                     	;# 
  4494     0215                     	;# 
  4495     0216                     	;# 
  4496     0216                     	;# 
  4497     0217                     	;# 
  4498     0217                     	;# 
  4499     0219                     	;# 
  4500     021A                     	;# 
  4501     021B                     	;# 
  4502     021C                     	;# 
  4503     021D                     	;# 
  4504     021D                     	;# 
  4505     021E                     	;# 
  4506     021F                     	;# 
  4507     028C                     	;# 
  4508     028D                     	;# 
  4509     028E                     	;# 
  4510     0291                     	;# 
  4511     0291                     	;# 
  4512     0292                     	;# 
  4513     0293                     	;# 
  4514     0294                     	;# 
  4515     0295                     	;# 
  4516     0295                     	;# 
  4517     0296                     	;# 
  4518     0297                     	;# 
  4519     0298                     	;# 
  4520     029F                     	;# 
  4521     030C                     	;# 
  4522     030D                     	;# 
  4523     030E                     	;# 
  4524     0311                     	;# 
  4525     0311                     	;# 
  4526     0312                     	;# 
  4527     0313                     	;# 
  4528     0314                     	;# 
  4529     0315                     	;# 
  4530     0315                     	;# 
  4531     0316                     	;# 
  4532     0317                     	;# 
  4533     0318                     	;# 
  4534     038C                     	;# 
  4535     038D                     	;# 
  4536     038E                     	;# 
  4537     0391                     	;# 
  4538     0392                     	;# 
  4539     0393                     	;# 
  4540     0394                     	;# 
  4541     0395                     	;# 
  4542     0396                     	;# 
  4543     0397                     	;# 
  4544     0398                     	;# 
  4545     0399                     	;# 
  4546     039A                     	;# 
  4547     039C                     	;# 
  4548     039D                     	;# 
  4549     039E                     	;# 
  4550     039F                     	;# 
  4551     0411                     	;# 
  4552     0411                     	;# 
  4553     0412                     	;# 
  4554     0413                     	;# 
  4555     0414                     	;# 
  4556     0415                     	;# 
  4557     0416                     	;# 
  4558     0417                     	;# 
  4559     0418                     	;# 
  4560     0418                     	;# 
  4561     0419                     	;# 
  4562     041A                     	;# 
  4563     041B                     	;# 
  4564     041C                     	;# 
  4565     041D                     	;# 
  4566     041E                     	;# 
  4567     041F                     	;# 
  4568     0498                     	;# 
  4569     0498                     	;# 
  4570     0499                     	;# 
  4571     049A                     	;# 
  4572     049B                     	;# 
  4573     049B                     	;# 
  4574     049C                     	;# 
  4575     049D                     	;# 
  4576     049E                     	;# 
  4577     049F                     	;# 
  4578     0617                     	;# 
  4579     0618                     	;# 
  4580     0619                     	;# 
  4581     0619                     	;# 
  4582     061A                     	;# 
  4583     061B                     	;# 
  4584     061C                     	;# 
  4585     061C                     	;# 
  4586     061F                     	;# 
  4587     0691                     	;# 
  4588     0692                     	;# 
  4589     0693                     	;# 
  4590     0694                     	;# 
  4591     0695                     	;# 
  4592     0696                     	;# 
  4593     0697                     	;# 
  4594     0698                     	;# 
  4595     0699                     	;# 
  4596     0711                     	;# 
  4597     0712                     	;# 
  4598     0713                     	;# 
  4599     0714                     	;# 
  4600     0715                     	;# 
  4601     0716                     	;# 
  4602     0717                     	;# 
  4603     0718                     	;# 
  4604     0719                     	;# 
  4605     0891                     	;# 
  4606     0891                     	;# 
  4607     0891                     	;# 
  4608     0891                     	;# 
  4609     0891                     	;# 
  4610     0891                     	;# 
  4611     0892                     	;# 
  4612     0892                     	;# 
  4613     0892                     	;# 
  4614     0893                     	;# 
  4615     0893                     	;# 
  4616     0893                     	;# 
  4617     0893                     	;# 
  4618     0893                     	;# 
  4619     0893                     	;# 
  4620     0894                     	;# 
  4621     0894                     	;# 
  4622     0894                     	;# 
  4623     0895                     	;# 
  4624     0895                     	;# 
  4625     0895                     	;# 
  4626     0896                     	;# 
  4627     0896                     	;# 
  4628     0896                     	;# 
  4629     089B                     	;# 
  4630     0911                     	;# 
  4631     0912                     	;# 
  4632     0913                     	;# 
  4633     0914                     	;# 
  4634     0915                     	;# 
  4635     0916                     	;# 
  4636     0918                     	;# 
  4637     0919                     	;# 
  4638     091A                     	;# 
  4639     091B                     	;# 
  4640     091C                     	;# 
  4641     091D                     	;# 
  4642     091E                     	;# 
  4643     091F                     	;# 
  4644     0E0F                     	;# 
  4645     0E10                     	;# 
  4646     0E11                     	;# 
  4647     0E12                     	;# 
  4648     0E13                     	;# 
  4649     0E14                     	;# 
  4650     0E15                     	;# 
  4651     0E16                     	;# 
  4652     0E17                     	;# 
  4653     0E18                     	;# 
  4654     0E19                     	;# 
  4655     0E1A                     	;# 
  4656     0E1B                     	;# 
  4657     0E1C                     	;# 
  4658     0E1D                     	;# 
  4659     0E1E                     	;# 
  4660     0E1F                     	;# 
  4661     0E20                     	;# 
  4662     0E21                     	;# 
  4663     0E22                     	;# 
  4664     0E24                     	;# 
  4665     0E25                     	;# 
  4666     0E28                     	;# 
  4667     0E29                     	;# 
  4668     0E2A                     	;# 
  4669     0E2B                     	;# 
  4670     0E2C                     	;# 
  4671     0E2D                     	;# 
  4672     0E2E                     	;# 
  4673     0E2F                     	;# 
  4674     0E90                     	;# 
  4675     0E91                     	;# 
  4676     0E92                     	;# 
  4677     0E94                     	;# 
  4678     0E95                     	;# 
  4679     0E9C                     	;# 
  4680     0E9D                     	;# 
  4681     0E9E                     	;# 
  4682     0E9F                     	;# 
  4683     0EA0                     	;# 
  4684     0EA1                     	;# 
  4685     0EA2                     	;# 
  4686     0EA3                     	;# 
  4687     0EA4                     	;# 
  4688     0EA5                     	;# 
  4689     0EA6                     	;# 
  4690     0EA7                     	;# 
  4691     0F0F                     	;# 
  4692     0F10                     	;# 
  4693     0F11                     	;# 
  4694     0F12                     	;# 
  4695     0F13                     	;# 
  4696     0F14                     	;# 
  4697     0F15                     	;# 
  4698     0F16                     	;# 
  4699     0F17                     	;# 
  4700     0F18                     	;# 
  4701     0F19                     	;# 
  4702     0F1A                     	;# 
  4703     0F1B                     	;# 
  4704     0F1C                     	;# 
  4705     0F1D                     	;# 
  4706     0F1E                     	;# 
  4707     0F1F                     	;# 
  4708     0F20                     	;# 
  4709     0F21                     	;# 
  4710     0F22                     	;# 
  4711     0F23                     	;# 
  4712     0F24                     	;# 
  4713     0F25                     	;# 
  4714     0F26                     	;# 
  4715     0F27                     	;# 
  4716     0F28                     	;# 
  4717     0F29                     	;# 
  4718     0F2A                     	;# 
  4719     0F2B                     	;# 
  4720     0F2C                     	;# 
  4721     0F2D                     	;# 
  4722     0F2E                     	;# 
  4723     0F2F                     	;# 
  4724     0F30                     	;# 
  4725     0F31                     	;# 
  4726     0F32                     	;# 
  4727     0F33                     	;# 
  4728     0F34                     	;# 
  4729     0F35                     	;# 
  4730     0F36                     	;# 
  4731     0F37                     	;# 
  4732     0FE4                     	;# 
  4733     0FE5                     	;# 
  4734     0FE6                     	;# 
  4735     0FE7                     	;# 
  4736     0FE8                     	;# 
  4737     0FE9                     	;# 
  4738     0FEA                     	;# 
  4739     0FEB                     	;# 
  4740     0FED                     	;# 
  4741     0FEE                     	;# 
  4742     0FEF                     	;# 
  4743     0000                     	;# 
  4744     0001                     	;# 
  4745     0002                     	;# 
  4746     0003                     	;# 
  4747     0004                     	;# 
  4748     0005                     	;# 
  4749     0006                     	;# 
  4750     0007                     	;# 
  4751     0008                     	;# 
  4752     0009                     	;# 
  4753     000A                     	;# 
  4754     000B                     	;# 
  4755     000C                     	;# 
  4756     000D                     	;# 
  4757     000E                     	;# 
  4758     0010                     	;# 
  4759     0011                     	;# 
  4760     0012                     	;# 
  4761     0013                     	;# 
  4762     0014                     	;# 
  4763     0015                     	;# 
  4764     0015                     	;# 
  4765     0016                     	;# 
  4766     0016                     	;# 
  4767     0017                     	;# 
  4768     0018                     	;# 
  4769     0019                     	;# 
  4770     0019                     	;# 
  4771     001A                     	;# 
  4772     001B                     	;# 
  4773     001C                     	;# 
  4774     001D                     	;# 
  4775     001E                     	;# 
  4776     001F                     	;# 
  4777     008C                     	;# 
  4778     008D                     	;# 
  4779     008E                     	;# 
  4780     0090                     	;# 
  4781     0091                     	;# 
  4782     0092                     	;# 
  4783     0093                     	;# 
  4784     0094                     	;# 
  4785     0097                     	;# 
  4786     009B                     	;# 
  4787     009B                     	;# 
  4788     009C                     	;# 
  4789     009D                     	;# 
  4790     009E                     	;# 
  4791     009F                     	;# 
  4792     010C                     	;# 
  4793     010D                     	;# 
  4794     010E                     	;# 
  4795     0111                     	;# 
  4796     0112                     	;# 
  4797     0113                     	;# 
  4798     0114                     	;# 
  4799     0115                     	;# 
  4800     0116                     	;# 
  4801     0117                     	;# 
  4802     0118                     	;# 
  4803     0119                     	;# 
  4804     018C                     	;# 
  4805     018D                     	;# 
  4806     018E                     	;# 
  4807     0197                     	;# 
  4808     0199                     	;# 
  4809     0199                     	;# 
  4810     0199                     	;# 
  4811     019A                     	;# 
  4812     019A                     	;# 
  4813     019A                     	;# 
  4814     019B                     	;# 
  4815     019B                     	;# 
  4816     019B                     	;# 
  4817     019B                     	;# 
  4818     019B                     	;# 
  4819     019C                     	;# 
  4820     019C                     	;# 
  4821     019C                     	;# 
  4822     019D                     	;# 
  4823     019D                     	;# 
  4824     019D                     	;# 
  4825     019E                     	;# 
  4826     019E                     	;# 
  4827     019E                     	;# 
  4828     019F                     	;# 
  4829     019F                     	;# 
  4830     019F                     	;# 
  4831     019F                     	;# 
  4832     019F                     	;# 
  4833     020C                     	;# 
  4834     020D                     	;# 
  4835     020E                     	;# 
  4836     0211                     	;# 
  4837     0211                     	;# 
  4838     0212                     	;# 
  4839     0212                     	;# 
  4840     0213                     	;# 
  4841     0213                     	;# 
  4842     0214                     	;# 
  4843     0214                     	;# 
  4844     0215                     	;# 
  4845     0215                     	;# 
  4846     0215                     	;# 
  4847     0215                     	;# 
  4848     0216                     	;# 
  4849     0216                     	;# 
  4850     0217                     	;# 
  4851     0217                     	;# 
  4852     0219                     	;# 
  4853     021A                     	;# 
  4854     021B                     	;# 
  4855     021C                     	;# 
  4856     021D                     	;# 
  4857     021D                     	;# 
  4858     021E                     	;# 
  4859     021F                     	;# 
  4860     028C                     	;# 
  4861     028D                     	;# 
  4862     028E                     	;# 
  4863     0291                     	;# 
  4864     0291                     	;# 
  4865     0292                     	;# 
  4866     0293                     	;# 
  4867     0294                     	;# 
  4868     0295                     	;# 
  4869     0295                     	;# 
  4870     0296                     	;# 
  4871     0297                     	;# 
  4872     0298                     	;# 
  4873     029F                     	;# 
  4874     030C                     	;# 
  4875     030D                     	;# 
  4876     030E                     	;# 
  4877     0311                     	;# 
  4878     0311                     	;# 
  4879     0312                     	;# 
  4880     0313                     	;# 
  4881     0314                     	;# 
  4882     0315                     	;# 
  4883     0315                     	;# 
  4884     0316                     	;# 
  4885     0317                     	;# 
  4886     0318                     	;# 
  4887     038C                     	;# 
  4888     038D                     	;# 
  4889     038E                     	;# 
  4890     0391                     	;# 
  4891     0392                     	;# 
  4892     0393                     	;# 
  4893     0394                     	;# 
  4894     0395                     	;# 
  4895     0396                     	;# 
  4896     0397                     	;# 
  4897     0398                     	;# 
  4898     0399                     	;# 
  4899     039A                     	;# 
  4900     039C                     	;# 
  4901     039D                     	;# 
  4902     039E                     	;# 
  4903     039F                     	;# 
  4904     0411                     	;# 
  4905     0411                     	;# 
  4906     0412                     	;# 
  4907     0413                     	;# 
  4908     0414                     	;# 
  4909     0415                     	;# 
  4910     0416                     	;# 
  4911     0417                     	;# 
  4912     0418                     	;# 
  4913     0418                     	;# 
  4914     0419                     	;# 
  4915     041A                     	;# 
  4916     041B                     	;# 
  4917     041C                     	;# 
  4918     041D                     	;# 
  4919     041E                     	;# 
  4920     041F                     	;# 
  4921     0498                     	;# 
  4922     0498                     	;# 
  4923     0499                     	;# 
  4924     049A                     	;# 
  4925     049B                     	;# 
  4926     049B                     	;# 
  4927     049C                     	;# 
  4928     049D                     	;# 
  4929     049E                     	;# 
  4930     049F                     	;# 
  4931     0617                     	;# 
  4932     0618                     	;# 
  4933     0619                     	;# 
  4934     0619                     	;# 
  4935     061A                     	;# 
  4936     061B                     	;# 
  4937     061C                     	;# 
  4938     061C                     	;# 
  4939     061F                     	;# 
  4940     0691                     	;# 
  4941     0692                     	;# 
  4942     0693                     	;# 
  4943     0694                     	;# 
  4944     0695                     	;# 
  4945     0696                     	;# 
  4946     0697                     	;# 
  4947     0698                     	;# 
  4948     0699                     	;# 
  4949     0711                     	;# 
  4950     0712                     	;# 
  4951     0713                     	;# 
  4952     0714                     	;# 
  4953     0715                     	;# 
  4954     0716                     	;# 
  4955     0717                     	;# 
  4956     0718                     	;# 
  4957     0719                     	;# 
  4958     0891                     	;# 
  4959     0891                     	;# 
  4960     0891                     	;# 
  4961     0891                     	;# 
  4962     0891                     	;# 
  4963     0891                     	;# 
  4964     0892                     	;# 
  4965     0892                     	;# 
  4966     0892                     	;# 
  4967     0893                     	;# 
  4968     0893                     	;# 
  4969     0893                     	;# 
  4970     0893                     	;# 
  4971     0893                     	;# 
  4972     0893                     	;# 
  4973     0894                     	;# 
  4974     0894                     	;# 
  4975     0894                     	;# 
  4976     0895                     	;# 
  4977     0895                     	;# 
  4978     0895                     	;# 
  4979     0896                     	;# 
  4980     0896                     	;# 
  4981     0896                     	;# 
  4982     089B                     	;# 
  4983     0911                     	;# 
  4984     0912                     	;# 
  4985     0913                     	;# 
  4986     0914                     	;# 
  4987     0915                     	;# 
  4988     0916                     	;# 
  4989     0918                     	;# 
  4990     0919                     	;# 
  4991     091A                     	;# 
  4992     091B                     	;# 
  4993     091C                     	;# 
  4994     091D                     	;# 
  4995     091E                     	;# 
  4996     091F                     	;# 
  4997     0E0F                     	;# 
  4998     0E10                     	;# 
  4999     0E11                     	;# 
  5000     0E12                     	;# 
  5001     0E13                     	;# 
  5002     0E14                     	;# 
  5003     0E15                     	;# 
  5004     0E16                     	;# 
  5005     0E17                     	;# 
  5006     0E18                     	;# 
  5007     0E19                     	;# 
  5008     0E1A                     	;# 
  5009     0E1B                     	;# 
  5010     0E1C                     	;# 
  5011     0E1D                     	;# 
  5012     0E1E                     	;# 
  5013     0E1F                     	;# 
  5014     0E20                     	;# 
  5015     0E21                     	;# 
  5016     0E22                     	;# 
  5017     0E24                     	;# 
  5018     0E25                     	;# 
  5019     0E28                     	;# 
  5020     0E29                     	;# 
  5021     0E2A                     	;# 
  5022     0E2B                     	;# 
  5023     0E2C                     	;# 
  5024     0E2D                     	;# 
  5025     0E2E                     	;# 
  5026     0E2F                     	;# 
  5027     0E90                     	;# 
  5028     0E91                     	;# 
  5029     0E92                     	;# 
  5030     0E94                     	;# 
  5031     0E95                     	;# 
  5032     0E9C                     	;# 
  5033     0E9D                     	;# 
  5034     0E9E                     	;# 
  5035     0E9F                     	;# 
  5036     0EA0                     	;# 
  5037     0EA1                     	;# 
  5038     0EA2                     	;# 
  5039     0EA3                     	;# 
  5040     0EA4                     	;# 
  5041     0EA5                     	;# 
  5042     0EA6                     	;# 
  5043     0EA7                     	;# 
  5044     0F0F                     	;# 
  5045     0F10                     	;# 
  5046     0F11                     	;# 
  5047     0F12                     	;# 
  5048     0F13                     	;# 
  5049     0F14                     	;# 
  5050     0F15                     	;# 
  5051     0F16                     	;# 
  5052     0F17                     	;# 
  5053     0F18                     	;# 
  5054     0F19                     	;# 
  5055     0F1A                     	;# 
  5056     0F1B                     	;# 
  5057     0F1C                     	;# 
  5058     0F1D                     	;# 
  5059     0F1E                     	;# 
  5060     0F1F                     	;# 
  5061     0F20                     	;# 
  5062     0F21                     	;# 
  5063     0F22                     	;# 
  5064     0F23                     	;# 
  5065     0F24                     	;# 
  5066     0F25                     	;# 
  5067     0F26                     	;# 
  5068     0F27                     	;# 
  5069     0F28                     	;# 
  5070     0F29                     	;# 
  5071     0F2A                     	;# 
  5072     0F2B                     	;# 
  5073     0F2C                     	;# 
  5074     0F2D                     	;# 
  5075     0F2E                     	;# 
  5076     0F2F                     	;# 
  5077     0F30                     	;# 
  5078     0F31                     	;# 
  5079     0F32                     	;# 
  5080     0F33                     	;# 
  5081     0F34                     	;# 
  5082     0F35                     	;# 
  5083     0F36                     	;# 
  5084     0F37                     	;# 
  5085     0FE4                     	;# 
  5086     0FE5                     	;# 
  5087     0FE6                     	;# 
  5088     0FE7                     	;# 
  5089     0FE8                     	;# 
  5090     0FE9                     	;# 
  5091     0FEA                     	;# 
  5092     0FEB                     	;# 
  5093     0FED                     	;# 
  5094     0FEE                     	;# 
  5095     0FEF                     	;# 
  5096     0000                     	;# 
  5097     0001                     	;# 
  5098     0002                     	;# 
  5099     0003                     	;# 
  5100     0004                     	;# 
  5101     0005                     	;# 
  5102     0006                     	;# 
  5103     0007                     	;# 
  5104     0008                     	;# 
  5105     0009                     	;# 
  5106     000A                     	;# 
  5107     000B                     	;# 
  5108     000C                     	;# 
  5109     000D                     	;# 
  5110     000E                     	;# 
  5111     0010                     	;# 
  5112     0011                     	;# 
  5113     0012                     	;# 
  5114     0013                     	;# 
  5115     0014                     	;# 
  5116     0015                     	;# 
  5117     0015                     	;# 
  5118     0016                     	;# 
  5119     0016                     	;# 
  5120     0017                     	;# 
  5121     0018                     	;# 
  5122     0019                     	;# 
  5123     0019                     	;# 
  5124     001A                     	;# 
  5125     001B                     	;# 
  5126     001C                     	;# 
  5127     001D                     	;# 
  5128     001E                     	;# 
  5129     001F                     	;# 
  5130     008C                     	;# 
  5131     008D                     	;# 
  5132     008E                     	;# 
  5133     0090                     	;# 
  5134     0091                     	;# 
  5135     0092                     	;# 
  5136     0093                     	;# 
  5137     0094                     	;# 
  5138     0097                     	;# 
  5139     009B                     	;# 
  5140     009B                     	;# 
  5141     009C                     	;# 
  5142     009D                     	;# 
  5143     009E                     	;# 
  5144     009F                     	;# 
  5145     010C                     	;# 
  5146     010D                     	;# 
  5147     010E                     	;# 
  5148     0111                     	;# 
  5149     0112                     	;# 
  5150     0113                     	;# 
  5151     0114                     	;# 
  5152     0115                     	;# 
  5153     0116                     	;# 
  5154     0117                     	;# 
  5155     0118                     	;# 
  5156     0119                     	;# 
  5157     018C                     	;# 
  5158     018D                     	;# 
  5159     018E                     	;# 
  5160     0197                     	;# 
  5161     0199                     	;# 
  5162     0199                     	;# 
  5163     0199                     	;# 
  5164     019A                     	;# 
  5165     019A                     	;# 
  5166     019A                     	;# 
  5167     019B                     	;# 
  5168     019B                     	;# 
  5169     019B                     	;# 
  5170     019B                     	;# 
  5171     019B                     	;# 
  5172     019C                     	;# 
  5173     019C                     	;# 
  5174     019C                     	;# 
  5175     019D                     	;# 
  5176     019D                     	;# 
  5177     019D                     	;# 
  5178     019E                     	;# 
  5179     019E                     	;# 
  5180     019E                     	;# 
  5181     019F                     	;# 
  5182     019F                     	;# 
  5183     019F                     	;# 
  5184     019F                     	;# 
  5185     019F                     	;# 
  5186     020C                     	;# 
  5187     020D                     	;# 
  5188     020E                     	;# 
  5189     0211                     	;# 
  5190     0211                     	;# 
  5191     0212                     	;# 
  5192     0212                     	;# 
  5193     0213                     	;# 
  5194     0213                     	;# 
  5195     0214                     	;# 
  5196     0214                     	;# 
  5197     0215                     	;# 
  5198     0215                     	;# 
  5199     0215                     	;# 
  5200     0215                     	;# 
  5201     0216                     	;# 
  5202     0216                     	;# 
  5203     0217                     	;# 
  5204     0217                     	;# 
  5205     0219                     	;# 
  5206     021A                     	;# 
  5207     021B                     	;# 
  5208     021C                     	;# 
  5209     021D                     	;# 
  5210     021D                     	;# 
  5211     021E                     	;# 
  5212     021F                     	;# 
  5213     028C                     	;# 
  5214     028D                     	;# 
  5215     028E                     	;# 
  5216     0291                     	;# 
  5217     0291                     	;# 
  5218     0292                     	;# 
  5219     0293                     	;# 
  5220     0294                     	;# 
  5221     0295                     	;# 
  5222     0295                     	;# 
  5223     0296                     	;# 
  5224     0297                     	;# 
  5225     0298                     	;# 
  5226     029F                     	;# 
  5227     030C                     	;# 
  5228     030D                     	;# 
  5229     030E                     	;# 
  5230     0311                     	;# 
  5231     0311                     	;# 
  5232     0312                     	;# 
  5233     0313                     	;# 
  5234     0314                     	;# 
  5235     0315                     	;# 
  5236     0315                     	;# 
  5237     0316                     	;# 
  5238     0317                     	;# 
  5239     0318                     	;# 
  5240     038C                     	;# 
  5241     038D                     	;# 
  5242     038E                     	;# 
  5243     0391                     	;# 
  5244     0392                     	;# 
  5245     0393                     	;# 
  5246     0394                     	;# 
  5247     0395                     	;# 
  5248     0396                     	;# 
  5249     0397                     	;# 
  5250     0398                     	;# 
  5251     0399                     	;# 
  5252     039A                     	;# 
  5253     039C                     	;# 
  5254     039D                     	;# 
  5255     039E                     	;# 
  5256     039F                     	;# 
  5257     0411                     	;# 
  5258     0411                     	;# 
  5259     0412                     	;# 
  5260     0413                     	;# 
  5261     0414                     	;# 
  5262     0415                     	;# 
  5263     0416                     	;# 
  5264     0417                     	;# 
  5265     0418                     	;# 
  5266     0418                     	;# 
  5267     0419                     	;# 
  5268     041A                     	;# 
  5269     041B                     	;# 
  5270     041C                     	;# 
  5271     041D                     	;# 
  5272     041E                     	;# 
  5273     041F                     	;# 
  5274     0498                     	;# 
  5275     0498                     	;# 
  5276     0499                     	;# 
  5277     049A                     	;# 
  5278     049B                     	;# 
  5279     049B                     	;# 
  5280     049C                     	;# 
  5281     049D                     	;# 
  5282     049E                     	;# 
  5283     049F                     	;# 
  5284     0617                     	;# 
  5285     0618                     	;# 
  5286     0619                     	;# 
  5287     0619                     	;# 
  5288     061A                     	;# 
  5289     061B                     	;# 
  5290     061C                     	;# 
  5291     061C                     	;# 
  5292     061F                     	;# 
  5293     0691                     	;# 
  5294     0692                     	;# 
  5295     0693                     	;# 
  5296     0694                     	;# 
  5297     0695                     	;# 
  5298     0696                     	;# 
  5299     0697                     	;# 
  5300     0698                     	;# 
  5301     0699                     	;# 
  5302     0711                     	;# 
  5303     0712                     	;# 
  5304     0713                     	;# 
  5305     0714                     	;# 
  5306     0715                     	;# 
  5307     0716                     	;# 
  5308     0717                     	;# 
  5309     0718                     	;# 
  5310     0719                     	;# 
  5311     0891                     	;# 
  5312     0891                     	;# 
  5313     0891                     	;# 
  5314     0891                     	;# 
  5315     0891                     	;# 
  5316     0891                     	;# 
  5317     0892                     	;# 
  5318     0892                     	;# 
  5319     0892                     	;# 
  5320     0893                     	;# 
  5321     0893                     	;# 
  5322     0893                     	;# 
  5323     0893                     	;# 
  5324     0893                     	;# 
  5325     0893                     	;# 
  5326     0894                     	;# 
  5327     0894                     	;# 
  5328     0894                     	;# 
  5329     0895                     	;# 
  5330     0895                     	;# 
  5331     0895                     	;# 
  5332     0896                     	;# 
  5333     0896                     	;# 
  5334     0896                     	;# 
  5335     089B                     	;# 
  5336     0911                     	;# 
  5337     0912                     	;# 
  5338     0913                     	;# 
  5339     0914                     	;# 
  5340     0915                     	;# 
  5341     0916                     	;# 
  5342     0918                     	;# 
  5343     0919                     	;# 
  5344     091A                     	;# 
  5345     091B                     	;# 
  5346     091C                     	;# 
  5347     091D                     	;# 
  5348     091E                     	;# 
  5349     091F                     	;# 
  5350     0E0F                     	;# 
  5351     0E10                     	;# 
  5352     0E11                     	;# 
  5353     0E12                     	;# 
  5354     0E13                     	;# 
  5355     0E14                     	;# 
  5356     0E15                     	;# 
  5357     0E16                     	;# 
  5358     0E17                     	;# 
  5359     0E18                     	;# 
  5360     0E19                     	;# 
  5361     0E1A                     	;# 
  5362     0E1B                     	;# 
  5363     0E1C                     	;# 
  5364     0E1D                     	;# 
  5365     0E1E                     	;# 
  5366     0E1F                     	;# 
  5367     0E20                     	;# 
  5368     0E21                     	;# 
  5369     0E22                     	;# 
  5370     0E24                     	;# 
  5371     0E25                     	;# 
  5372     0E28                     	;# 
  5373     0E29                     	;# 
  5374     0E2A                     	;# 
  5375     0E2B                     	;# 
  5376     0E2C                     	;# 
  5377     0E2D                     	;# 
  5378     0E2E                     	;# 
  5379     0E2F                     	;# 
  5380     0E90                     	;# 
  5381     0E91                     	;# 
  5382     0E92                     	;# 
  5383     0E94                     	;# 
  5384     0E95                     	;# 
  5385     0E9C                     	;# 
  5386     0E9D                     	;# 
  5387     0E9E                     	;# 
  5388     0E9F                     	;# 
  5389     0EA0                     	;# 
  5390     0EA1                     	;# 
  5391     0EA2                     	;# 
  5392     0EA3                     	;# 
  5393     0EA4                     	;# 
  5394     0EA5                     	;# 
  5395     0EA6                     	;# 
  5396     0EA7                     	;# 
  5397     0F0F                     	;# 
  5398     0F10                     	;# 
  5399     0F11                     	;# 
  5400     0F12                     	;# 
  5401     0F13                     	;# 
  5402     0F14                     	;# 
  5403     0F15                     	;# 
  5404     0F16                     	;# 
  5405     0F17                     	;# 
  5406     0F18                     	;# 
  5407     0F19                     	;# 
  5408     0F1A                     	;# 
  5409     0F1B                     	;# 
  5410     0F1C                     	;# 
  5411     0F1D                     	;# 
  5412     0F1E                     	;# 
  5413     0F1F                     	;# 
  5414     0F20                     	;# 
  5415     0F21                     	;# 
  5416     0F22                     	;# 
  5417     0F23                     	;# 
  5418     0F24                     	;# 
  5419     0F25                     	;# 
  5420     0F26                     	;# 
  5421     0F27                     	;# 
  5422     0F28                     	;# 
  5423     0F29                     	;# 
  5424     0F2A                     	;# 
  5425     0F2B                     	;# 
  5426     0F2C                     	;# 
  5427     0F2D                     	;# 
  5428     0F2E                     	;# 
  5429     0F2F                     	;# 
  5430     0F30                     	;# 
  5431     0F31                     	;# 
  5432     0F32                     	;# 
  5433     0F33                     	;# 
  5434     0F34                     	;# 
  5435     0F35                     	;# 
  5436     0F36                     	;# 
  5437     0F37                     	;# 
  5438     0FE4                     	;# 
  5439     0FE5                     	;# 
  5440     0FE6                     	;# 
  5441     0FE7                     	;# 
  5442     0FE8                     	;# 
  5443     0FE9                     	;# 
  5444     0FEA                     	;# 
  5445     0FEB                     	;# 
  5446     0FED                     	;# 
  5447     0FEE                     	;# 
  5448     0FEF                     	;# 
  5449     0000                     	;# 
  5450     0001                     	;# 
  5451     0002                     	;# 
  5452     0003                     	;# 
  5453     0004                     	;# 
  5454     0005                     	;# 
  5455     0006                     	;# 
  5456     0007                     	;# 
  5457     0008                     	;# 
  5458     0009                     	;# 
  5459     000A                     	;# 
  5460     000B                     	;# 
  5461     000C                     	;# 
  5462     000D                     	;# 
  5463     000E                     	;# 
  5464     0010                     	;# 
  5465     0011                     	;# 
  5466     0012                     	;# 
  5467     0013                     	;# 
  5468     0014                     	;# 
  5469     0015                     	;# 
  5470     0015                     	;# 
  5471     0016                     	;# 
  5472     0016                     	;# 
  5473     0017                     	;# 
  5474     0018                     	;# 
  5475     0019                     	;# 
  5476     0019                     	;# 
  5477     001A                     	;# 
  5478     001B                     	;# 
  5479     001C                     	;# 
  5480     001D                     	;# 
  5481     001E                     	;# 
  5482     001F                     	;# 
  5483     008C                     	;# 
  5484     008D                     	;# 
  5485     008E                     	;# 
  5486     0090                     	;# 
  5487     0091                     	;# 
  5488     0092                     	;# 
  5489     0093                     	;# 
  5490     0094                     	;# 
  5491     0097                     	;# 
  5492     009B                     	;# 
  5493     009B                     	;# 
  5494     009C                     	;# 
  5495     009D                     	;# 
  5496     009E                     	;# 
  5497     009F                     	;# 
  5498     010C                     	;# 
  5499     010D                     	;# 
  5500     010E                     	;# 
  5501     0111                     	;# 
  5502     0112                     	;# 
  5503     0113                     	;# 
  5504     0114                     	;# 
  5505     0115                     	;# 
  5506     0116                     	;# 
  5507     0117                     	;# 
  5508     0118                     	;# 
  5509     0119                     	;# 
  5510     018C                     	;# 
  5511     018D                     	;# 
  5512     018E                     	;# 
  5513     0197                     	;# 
  5514     0199                     	;# 
  5515     0199                     	;# 
  5516     0199                     	;# 
  5517     019A                     	;# 
  5518     019A                     	;# 
  5519     019A                     	;# 
  5520     019B                     	;# 
  5521     019B                     	;# 
  5522     019B                     	;# 
  5523     019B                     	;# 
  5524     019B                     	;# 
  5525     019C                     	;# 
  5526     019C                     	;# 
  5527     019C                     	;# 
  5528     019D                     	;# 
  5529     019D                     	;# 
  5530     019D                     	;# 
  5531     019E                     	;# 
  5532     019E                     	;# 
  5533     019E                     	;# 
  5534     019F                     	;# 
  5535     019F                     	;# 
  5536     019F                     	;# 
  5537     019F                     	;# 
  5538     019F                     	;# 
  5539     020C                     	;# 
  5540     020D                     	;# 
  5541     020E                     	;# 
  5542     0211                     	;# 
  5543     0211                     	;# 
  5544     0212                     	;# 
  5545     0212                     	;# 
  5546     0213                     	;# 
  5547     0213                     	;# 
  5548     0214                     	;# 
  5549     0214                     	;# 
  5550     0215                     	;# 
  5551     0215                     	;# 
  5552     0215                     	;# 
  5553     0215                     	;# 
  5554     0216                     	;# 
  5555     0216                     	;# 
  5556     0217                     	;# 
  5557     0217                     	;# 
  5558     0219                     	;# 
  5559     021A                     	;# 
  5560     021B                     	;# 
  5561     021C                     	;# 
  5562     021D                     	;# 
  5563     021D                     	;# 
  5564     021E                     	;# 
  5565     021F                     	;# 
  5566     028C                     	;# 
  5567     028D                     	;# 
  5568     028E                     	;# 
  5569     0291                     	;# 
  5570     0291                     	;# 
  5571     0292                     	;# 
  5572     0293                     	;# 
  5573     0294                     	;# 
  5574     0295                     	;# 
  5575     0295                     	;# 
  5576     0296                     	;# 
  5577     0297                     	;# 
  5578     0298                     	;# 
  5579     029F                     	;# 
  5580     030C                     	;# 
  5581     030D                     	;# 
  5582     030E                     	;# 
  5583     0311                     	;# 
  5584     0311                     	;# 
  5585     0312                     	;# 
  5586     0313                     	;# 
  5587     0314                     	;# 
  5588     0315                     	;# 
  5589     0315                     	;# 
  5590     0316                     	;# 
  5591     0317                     	;# 
  5592     0318                     	;# 
  5593     038C                     	;# 
  5594     038D                     	;# 
  5595     038E                     	;# 
  5596     0391                     	;# 
  5597     0392                     	;# 
  5598     0393                     	;# 
  5599     0394                     	;# 
  5600     0395                     	;# 
  5601     0396                     	;# 
  5602     0397                     	;# 
  5603     0398                     	;# 
  5604     0399                     	;# 
  5605     039A                     	;# 
  5606     039C                     	;# 
  5607     039D                     	;# 
  5608     039E                     	;# 
  5609     039F                     	;# 
  5610     0411                     	;# 
  5611     0411                     	;# 
  5612     0412                     	;# 
  5613     0413                     	;# 
  5614     0414                     	;# 
  5615     0415                     	;# 
  5616     0416                     	;# 
  5617     0417                     	;# 
  5618     0418                     	;# 
  5619     0418                     	;# 
  5620     0419                     	;# 
  5621     041A                     	;# 
  5622     041B                     	;# 
  5623     041C                     	;# 
  5624     041D                     	;# 
  5625     041E                     	;# 
  5626     041F                     	;# 
  5627     0498                     	;# 
  5628     0498                     	;# 
  5629     0499                     	;# 
  5630     049A                     	;# 
  5631     049B                     	;# 
  5632     049B                     	;# 
  5633     049C                     	;# 
  5634     049D                     	;# 
  5635     049E                     	;# 
  5636     049F                     	;# 
  5637     0617                     	;# 
  5638     0618                     	;# 
  5639     0619                     	;# 
  5640     0619                     	;# 
  5641     061A                     	;# 
  5642     061B                     	;# 
  5643     061C                     	;# 
  5644     061C                     	;# 
  5645     061F                     	;# 
  5646     0691                     	;# 
  5647     0692                     	;# 
  5648     0693                     	;# 
  5649     0694                     	;# 
  5650     0695                     	;# 
  5651     0696                     	;# 
  5652     0697                     	;# 
  5653     0698                     	;# 
  5654     0699                     	;# 
  5655     0711                     	;# 
  5656     0712                     	;# 
  5657     0713                     	;# 
  5658     0714                     	;# 
  5659     0715                     	;# 
  5660     0716                     	;# 
  5661     0717                     	;# 
  5662     0718                     	;# 
  5663     0719                     	;# 
  5664     0891                     	;# 
  5665     0891                     	;# 
  5666     0891                     	;# 
  5667     0891                     	;# 
  5668     0891                     	;# 
  5669     0891                     	;# 
  5670     0892                     	;# 
  5671     0892                     	;# 
  5672     0892                     	;# 
  5673     0893                     	;# 
  5674     0893                     	;# 
  5675     0893                     	;# 
  5676     0893                     	;# 
  5677     0893                     	;# 
  5678     0893                     	;# 
  5679     0894                     	;# 
  5680     0894                     	;# 
  5681     0894                     	;# 
  5682     0895                     	;# 
  5683     0895                     	;# 
  5684     0895                     	;# 
  5685     0896                     	;# 
  5686     0896                     	;# 
  5687     0896                     	;# 
  5688     089B                     	;# 
  5689     0911                     	;# 
  5690     0912                     	;# 
  5691     0913                     	;# 
  5692     0914                     	;# 
  5693     0915                     	;# 
  5694     0916                     	;# 
  5695     0918                     	;# 
  5696     0919                     	;# 
  5697     091A                     	;# 
  5698     091B                     	;# 
  5699     091C                     	;# 
  5700     091D                     	;# 
  5701     091E                     	;# 
  5702     091F                     	;# 
  5703     0E0F                     	;# 
  5704     0E10                     	;# 
  5705     0E11                     	;# 
  5706     0E12                     	;# 
  5707     0E13                     	;# 
  5708     0E14                     	;# 
  5709     0E15                     	;# 
  5710     0E16                     	;# 
  5711     0E17                     	;# 
  5712     0E18                     	;# 
  5713     0E19                     	;# 
  5714     0E1A                     	;# 
  5715     0E1B                     	;# 
  5716     0E1C                     	;# 
  5717     0E1D                     	;# 
  5718     0E1E                     	;# 
  5719     0E1F                     	;# 
  5720     0E20                     	;# 
  5721     0E21                     	;# 
  5722     0E22                     	;# 
  5723     0E24                     	;# 
  5724     0E25                     	;# 
  5725     0E28                     	;# 
  5726     0E29                     	;# 
  5727     0E2A                     	;# 
  5728     0E2B                     	;# 
  5729     0E2C                     	;# 
  5730     0E2D                     	;# 
  5731     0E2E                     	;# 
  5732     0E2F                     	;# 
  5733     0E90                     	;# 
  5734     0E91                     	;# 
  5735     0E92                     	;# 
  5736     0E94                     	;# 
  5737     0E95                     	;# 
  5738     0E9C                     	;# 
  5739     0E9D                     	;# 
  5740     0E9E                     	;# 
  5741     0E9F                     	;# 
  5742     0EA0                     	;# 
  5743     0EA1                     	;# 
  5744     0EA2                     	;# 
  5745     0EA3                     	;# 
  5746     0EA4                     	;# 
  5747     0EA5                     	;# 
  5748     0EA6                     	;# 
  5749     0EA7                     	;# 
  5750     0F0F                     	;# 
  5751     0F10                     	;# 
  5752     0F11                     	;# 
  5753     0F12                     	;# 
  5754     0F13                     	;# 
  5755     0F14                     	;# 
  5756     0F15                     	;# 
  5757     0F16                     	;# 
  5758     0F17                     	;# 
  5759     0F18                     	;# 
  5760     0F19                     	;# 
  5761     0F1A                     	;# 
  5762     0F1B                     	;# 
  5763     0F1C                     	;# 
  5764     0F1D                     	;# 
  5765     0F1E                     	;# 
  5766     0F1F                     	;# 
  5767     0F20                     	;# 
  5768     0F21                     	;# 
  5769     0F22                     	;# 
  5770     0F23                     	;# 
  5771     0F24                     	;# 
  5772     0F25                     	;# 
  5773     0F26                     	;# 
  5774     0F27                     	;# 
  5775     0F28                     	;# 
  5776     0F29                     	;# 
  5777     0F2A                     	;# 
  5778     0F2B                     	;# 
  5779     0F2C                     	;# 
  5780     0F2D                     	;# 
  5781     0F2E                     	;# 
  5782     0F2F                     	;# 
  5783     0F30                     	;# 
  5784     0F31                     	;# 
  5785     0F32                     	;# 
  5786     0F33                     	;# 
  5787     0F34                     	;# 
  5788     0F35                     	;# 
  5789     0F36                     	;# 
  5790     0F37                     	;# 
  5791     0FE4                     	;# 
  5792     0FE5                     	;# 
  5793     0FE6                     	;# 
  5794     0FE7                     	;# 
  5795     0FE8                     	;# 
  5796     0FE9                     	;# 
  5797     0FEA                     	;# 
  5798     0FEB                     	;# 
  5799     0FED                     	;# 
  5800     0FEE                     	;# 
  5801     0FEF                     	;# 
  5802                           
  5803 ;; Function _SPI1_Close is unused but had its address taken
  5804     0000                     
  5805 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
  5806     0000                     
  5807 ;; Function _SPI1_WriteBlock is unused but had its address taken
  5808     0000                     
  5809 ;; Function _SPI1_ReadBlock is unused but had its address taken
  5810     0000                     
  5811 ;; Function _SPI1_WriteByte is unused but had its address taken
  5812     0000                     
  5813 ;; Function _SPI1_ReadByte is unused but had its address taken
  5814     0000                     
  5815                           	psect	idataBANK1
  5816     1549                     __pidataBANK1:
  5817                           
  5818                           ;initializer for _kp
  5819     1549  3400               	retlw	0
  5820     154A  3400               	retlw	0
  5821     154B  34C0               	retlw	192
  5822     154C  343F               	retlw	63
  5823                           
  5824                           ;initializer for _ki
  5825     154D  3402               	retlw	2
  5826     154E  342B               	retlw	43
  5827     154F  3487               	retlw	135
  5828     1550  343C               	retlw	60
  5829                           
  5830                           ;initializer for adcConversionDoneHandler@channel
  5831     1551  3410               	retlw	16
  5832                           
  5833                           ;initializer for updateLedstripAnimation@red
  5834     1552  34FF               	retlw	255
  5835                           
  5836                           ;initializer for _mustPrintLogs
  5837     1553  3401               	retlw	1
  5838                           
  5839                           ;initializer for _setpoint
  5840     1554  34C8               	retlw	200
  5841                           
  5842                           	psect	idataBANK2
  5843     159B                     __pidataBANK2:
  5844                           
  5845                           ;initializer for _buffer
  5846     159B  3464               	retlw	100
  5847     159C  3461               	retlw	97
  5848     159D  3474               	retlw	116
  5849     159E  3461               	retlw	97
  5850     159F  3400               	retlw	0
  5851     15A0  3400               	retlw	0
  5852     15A1  3400               	retlw	0
  5853     15A2  3400               	retlw	0
  5854     15A3  3400               	retlw	0
  5855     15A4  3400               	retlw	0
  5856     15A5  3400               	retlw	0
  5857     15A6  3400               	retlw	0
  5858     15A7  3400               	retlw	0
  5859     15A8  3400               	retlw	0
  5860     15A9  3400               	retlw	0
  5861     15AA  3400               	retlw	0
  5862                           
  5863                           	psect	stringtext1
  5864     1836                     __pstringtext1:
  5865     1836                     _spiMaster:
  5866     1836  3400               	retlw	0
  5867     1837  3400               	retlw	0
  5868     1838  3467               	retlw	low _MASTER0_open
  5869     1839  3414               	retlw	high _MASTER0_open
  5870     183A  343D               	retlw	low _SPI1_ExchangeByte
  5871     183B  3415               	retlw	high _SPI1_ExchangeByte
  5872     183C  3400               	retlw	0
  5873     183D  3400               	retlw	0
  5874     183E  3400               	retlw	0
  5875     183F  3400               	retlw	0
  5876     1840  3400               	retlw	0
  5877     1841  3400               	retlw	0
  5878     1842  3400               	retlw	0
  5879     1843  3400               	retlw	0
  5880     1844  3400               	retlw	0
  5881     1845  3400               	retlw	0
  5882     1846  3400               	retlw	0
  5883     1847  3400               	retlw	0
  5884     1848  3400               	retlw	0
  5885     1849  3400               	retlw	0
  5886     184A                     __end_of_spiMaster:
  5887                           
  5888                           	psect	stringtext2
  5889     1800                     __pstringtext2:
  5890     1800                     _spi1_configuration:
  5891     1800  340A               	retlw	10
  5892     1801  3440               	retlw	64
  5893     1802  343F               	retlw	63
  5894     1803  3400               	retlw	0
  5895     1804  3400               	retlw	0
  5896     1805  3440               	retlw	64
  5897     1806  3401               	retlw	1
  5898     1807  3400               	retlw	0
  5899     1808                     __end_of_spi1_configuration:
  5900     0012                     _PIR2bits	set	18
  5901     000B                     _INTCONbits	set	11
  5902     001F                     _T2CONbits	set	31
  5903     001F                     _T2CON	set	31
  5904     0011                     _PIR1bits	set	17
  5905     001D                     _TMR2	set	29
  5906     001E                     _PR2	set	30
  5907     0017                     _T0CON0bits	set	23
  5908     0017                     _T0CON0	set	23
  5909     0010                     _PIR0bits	set	16
  5910     0015                     _TMR0L	set	21
  5911     0016                     _TMR0H	set	22
  5912     0018                     _T0CON1	set	24
  5913     008D                     _TRISBbits	set	141
  5914     009D                     _ADCON0bits	set	157
  5915     009D                     _ADCON0	set	157
  5916     009C                     _ADRESH	set	156
  5917     009B                     _ADRESL	set	155
  5918     009F                     _ADACT	set	159
  5919     009E                     _ADCON1	set	158
  5920     0091                     _PIE1bits	set	145
  5921     0097                     _WDTCON	set	151
  5922     008E                     _TRISC	set	142
  5923     008D                     _TRISB	set	141
  5924     008C                     _TRISA	set	140
  5925     010E                     _LATC	set	270
  5926     010D                     _LATB	set	269
  5927     010C                     _LATA	set	268
  5928     0199                     _RC1REG	set	409
  5929     019D                     _RC1STAbits	set	413
  5930     019A                     _TX1REG	set	410
  5931     019E                     _TX1STAbits	set	414
  5932     019C                     _SP1BRGH	set	412
  5933     019B                     _SP1BRGL	set	411
  5934     019E                     _TX1STA	set	414
  5935     019D                     _RC1STA	set	413
  5936     019F                     _BAUD1CON	set	415
  5937     018C                     _ANSELA	set	396
  5938     018D                     _ANSELB	set	397
  5939     018E                     _ANSELC	set	398
  5940     0211                     _SSP1BUF	set	529
  5941     0216                     _SSP1CON2	set	534
  5942     0215                     _SSP1CON1bits	set	533
  5943     0212                     _SSP1ADD	set	530
  5944     0215                     _SSP1CON1	set	533
  5945     0214                     _SSP1STAT	set	532
  5946     020E                     _WPUC	set	526
  5947     020C                     _WPUA	set	524
  5948     020D                     _WPUB	set	525
  5949     028E                     _ODCONC	set	654
  5950     028D                     _ODCONB	set	653
  5951     028C                     _ODCONA	set	652
  5952     030E                     _SLRCONC	set	782
  5953     030D                     _SLRCONB	set	781
  5954     030C                     _SLRCONA	set	780
  5955     038E                     _INLVLC	set	910
  5956     038D                     _INLVLB	set	909
  5957     038C                     _INLVLA	set	908
  5958     0417                     _T4CONbits	set	1047
  5959     0417                     _T4CON	set	1047
  5960     0415                     _TMR4	set	1045
  5961     0416                     _PR4	set	1046
  5962     061F                     _PWMTMRSbits	set	1567
  5963     0617                     _PWM5DCL	set	1559
  5964     0618                     _PWM5DCH	set	1560
  5965     0619                     _PWM5CON	set	1561
  5966     0916                     _PMD5	set	2326
  5967     0915                     _PMD4	set	2325
  5968     0914                     _PMD3	set	2324
  5969     0913                     _PMD2	set	2323
  5970     0912                     _PMD1	set	2322
  5971     0911                     _PMD0	set	2321
  5972     091E                     _OSCTUNE	set	2334
  5973     091F                     _OSCFRQ	set	2335
  5974     091D                     _OSCEN	set	2333
  5975     091B                     _OSCCON3	set	2331
  5976     0919                     _OSCCON1	set	2329
  5977     48E0                     _PLLR	set	18656
  5978     0E21                     _SSP1DATPPS	set	3617
  5979     0E20                     _SSP1CLKPPS	set	3616
  5980     0E24                     _RXPPS	set	3620
  5981     0EA5                     _RC5PPS	set	3749
  5982     0E9C                     _RB4PPS	set	3740
  5983     0E9F                     _RB7PPS	set	3743
  5984     0E9E                     _RB6PPS	set	3742
  5985     1808                     STR_13:
  5986     1808  3443               	retlw	67	;'C'
  5987     1809  346F               	retlw	111	;'o'
  5988     180A  346D               	retlw	109	;'m'
  5989     180B  346D               	retlw	109	;'m'
  5990     180C  3461               	retlw	97	;'a'
  5991     180D  346E               	retlw	110	;'n'
  5992     180E  3464               	retlw	100	;'d'
  5993     180F  3420               	retlw	32	;' '
  5994     1810  346E               	retlw	110	;'n'
  5995     1811  346F               	retlw	111	;'o'
  5996     1812  3474               	retlw	116	;'t'
  5997     1813  3420               	retlw	32	;' '
  5998     1814  3473               	retlw	115	;'s'
  5999     1815  3475               	retlw	117	;'u'
  6000     1816  3470               	retlw	112	;'p'
  6001     1817  3470               	retlw	112	;'p'
  6002     1818  346F               	retlw	111	;'o'
  6003     1819  3472               	retlw	114	;'r'
  6004     181A  3474               	retlw	116	;'t'
  6005     181B  3465               	retlw	101	;'e'
  6006     181C  3464               	retlw	100	;'d'
  6007     181D  342E               	retlw	46	;'.'
  6008     181E  3420               	retlw	32	;' '
  6009     181F  3400               	retlw	0
  6010                           
  6011                           	psect	stringtext3
  6012     1820                     __pstringtext3:
  6013     1820                     STR_5:
  6014     1820  3469               	retlw	105	;'i'
  6015     1821  346E               	retlw	110	;'n'
  6016     1822  3470               	retlw	112	;'p'
  6017     1823  3475               	retlw	117	;'u'
  6018     1824  3474               	retlw	116	;'t'
  6019     1825  3420               	retlw	32	;' '
  6020     1826  3462               	retlw	98	;'b'
  6021     1827  3475               	retlw	117	;'u'
  6022     1828  3466               	retlw	102	;'f'
  6023     1829  3466               	retlw	102	;'f'
  6024     182A  3465               	retlw	101	;'e'
  6025     182B  3472               	retlw	114	;'r'
  6026     182C  3420               	retlw	32	;' '
  6027     182D  346F               	retlw	111	;'o'
  6028     182E  3476               	retlw	118	;'v'
  6029     182F  3465               	retlw	101	;'e'
  6030     1830  3472               	retlw	114	;'r'
  6031     1831  3466               	retlw	102	;'f'
  6032     1832  346C               	retlw	108	;'l'
  6033     1833  346F               	retlw	111	;'o'
  6034     1834  3477               	retlw	119	;'w'
  6035     1835  3400               	retlw	0
  6036                           
  6037                           	psect	stringtext4
  6038     184A                     __pstringtext4:
  6039     184A                     STR_9:
  6040     184A  342C               	retlw	44	;','
  6041     184B  3420               	retlw	32	;' '
  6042     184C  3464               	retlw	100	;'d'
  6043     184D  3475               	retlw	117	;'u'
  6044     184E  3474               	retlw	116	;'t'
  6045     184F  3479               	retlw	121	;'y'
  6046     1850  3420               	retlw	32	;' '
  6047     1851  3463               	retlw	99	;'c'
  6048     1852  3479               	retlw	121	;'y'
  6049     1853  3463               	retlw	99	;'c'
  6050     1854  346C               	retlw	108	;'l'
  6051     1855  3465               	retlw	101	;'e'
  6052     1856  343A               	retlw	58	;':'
  6053     1857  3420               	retlw	32	;' '
  6054     1858  3400               	retlw	0
  6055                           
  6056                           	psect	stringtext5
  6057     1859                     __pstringtext5:
  6058     1859                     STR_8:
  6059     1859  342C               	retlw	44	;','
  6060     185A  3420               	retlw	32	;' '
  6061     185B  3473               	retlw	115	;'s'
  6062     185C  3465               	retlw	101	;'e'
  6063     185D  3474               	retlw	116	;'t'
  6064     185E  3450               	retlw	80	;'P'
  6065     185F  346F               	retlw	111	;'o'
  6066     1860  3469               	retlw	105	;'i'
  6067     1861  346E               	retlw	110	;'n'
  6068     1862  3474               	retlw	116	;'t'
  6069     1863  343A               	retlw	58	;':'
  6070     1864  3420               	retlw	32	;' '
  6071     1865  3400               	retlw	0
  6072                           
  6073                           	psect	stringtext6
  6074     1866                     __pstringtext6:
  6075     1866                     STR_16:
  6076     1866  346C               	retlw	108	;'l'
  6077     1867  346F               	retlw	111	;'o'
  6078     1868  3467               	retlw	103	;'g'
  6079     1869  3473               	retlw	115	;'s'
  6080     186A  3420               	retlw	32	;' '
  6081     186B  3474               	retlw	116	;'t'
  6082     186C  346F               	retlw	111	;'o'
  6083     186D  3467               	retlw	103	;'g'
  6084     186E  3467               	retlw	103	;'g'
  6085     186F  346C               	retlw	108	;'l'
  6086     1870  3465               	retlw	101	;'e'
  6087     1871  3464               	retlw	100	;'d'
  6088     1872  3400               	retlw	0
  6089                           
  6090                           	psect	stringtext7
  6091     1873                     __pstringtext7:
  6092     1873                     STR_18:
  6093     1873  3448               	retlw	72	;'H'
  6094     1874  3465               	retlw	101	;'e'
  6095     1875  346C               	retlw	108	;'l'
  6096     1876  346C               	retlw	108	;'l'
  6097     1877  346F               	retlw	111	;'o'
  6098     1878  3420               	retlw	32	;' '
  6099     1879  343A               	retlw	58	;':'
  6100     187A  3429               	retlw	41	;')'
  6101     187B  3420               	retlw	32	;' '
  6102     187C  340D               	retlw	13
  6103     187D  340A               	retlw	10
  6104     187E  3400               	retlw	0
  6105                           
  6106                           	psect	stringtext8
  6107     187F                     __pstringtext8:
  6108     187F                     STR_12:
  6109     187F  3473               	retlw	115	;'s'
  6110     1880  3465               	retlw	101	;'e'
  6111     1881  3474               	retlw	116	;'t'
  6112     1882  3470               	retlw	112	;'p'
  6113     1883  346F               	retlw	111	;'o'
  6114     1884  3469               	retlw	105	;'i'
  6115     1885  346E               	retlw	110	;'n'
  6116     1886  3474               	retlw	116	;'t'
  6117     1887  3420               	retlw	32	;' '
  6118     1888  3400               	retlw	0
  6119                           
  6120                           	psect	stringtext9
  6121     1889                     __pstringtext9:
  6122     1889                     STR_7:
  6123     1889  3468               	retlw	104	;'h'
  6124     188A  346F               	retlw	111	;'o'
  6125     188B  346F               	retlw	111	;'o'
  6126     188C  3467               	retlw	103	;'g'
  6127     188D  3474               	retlw	116	;'t'
  6128     188E  3465               	retlw	101	;'e'
  6129     188F  343A               	retlw	58	;':'
  6130     1890  3420               	retlw	32	;' '
  6131     1891  3400               	retlw	0
  6132                           
  6133                           	psect	stringtext10
  6134     1892                     __pstringtext10:
  6135     1892                     STR_10:
  6136     1892  342C               	retlw	44	;','
  6137     1893  3420               	retlw	32	;' '
  6138     1894  346B               	retlw	107	;'k'
  6139     1895  3469               	retlw	105	;'i'
  6140     1896  343A               	retlw	58	;':'
  6141     1897  3420               	retlw	32	;' '
  6142     1898  3400               	retlw	0
  6143                           
  6144                           	psect	stringtext11
  6145     1899                     __pstringtext11:
  6146     1899                     STR_11:
  6147     1899  342C               	retlw	44	;','
  6148     189A  3420               	retlw	32	;' '
  6149     189B  346B               	retlw	107	;'k'
  6150     189C  3470               	retlw	112	;'p'
  6151     189D  343A               	retlw	58	;':'
  6152     189E  3420               	retlw	32	;' '
  6153     189F  3400               	retlw	0
  6154                           
  6155                           	psect	stringtext12
  6156     18A0                     __pstringtext12:
  6157     18A0                     STR_1:
  6158     18A0  3464               	retlw	100	;'d'
  6159     18A1  3461               	retlw	97	;'a'
  6160     18A2  3474               	retlw	116	;'t'
  6161     18A3  3461               	retlw	97	;'a'
  6162     18A4  3400               	retlw	0
  6163                           
  6164                           	psect	stringtext13
  6165     18A5                     __pstringtext13:
  6166     18A5                     STR_15:
  6167     18A5  344B               	retlw	75	;'K'
  6168     18A6  3469               	retlw	105	;'i'
  6169     18A7  3420               	retlw	32	;' '
  6170     18A8  3400               	retlw	0
  6171                           
  6172                           	psect	stringtext14
  6173     18A9                     __pstringtext14:
  6174     18A9                     STR_14:
  6175     18A9  344B               	retlw	75	;'K'
  6176     18AA  3470               	retlw	112	;'p'
  6177     18AB  3420               	retlw	32	;' '
  6178     18AC  3400               	retlw	0
  6179                           
  6180                           	psect	stringtext15
  6181     18AD                     __pstringtext15:
  6182     18AD                     STR_6:
  6183     18AD  342C               	retlw	44	;','
  6184     18AE  3400               	retlw	0
  6185                           
  6186                           	psect	stringtext16
  6187     0000                     __pstringtext16:
  6188     1808                     
  6189                           	psect	cinit
  6190     003E                     start_initialization:	
  6191                           ; #config settings
  6192                           
  6193     003E                     __initialization:
  6194                           
  6195                           ; Initialize objects allocated to BANK1
  6196     003E  3049               	movlw	low __pidataBANK1
  6197     003F  0084               	movwf	4
  6198     0040  3095               	movlw	(high __pidataBANK1)| (0+128)
  6199     0041  0085               	movwf	5
  6200     0042  30E4               	movlw	low __pdataBANK1
  6201     0043  0086               	movwf	6
  6202     0044  3000               	movlw	high __pdataBANK1
  6203     0045  0087               	movwf	7
  6204     0046  300C               	movlw	12
  6205     0047  3194  24AC  3180   	fcall	init_ram
  6206                           
  6207                           ; Initialize objects allocated to BANK2
  6208     004A  309B               	movlw	low __pidataBANK2
  6209     004B  0084               	movwf	4
  6210     004C  3095               	movlw	(high __pidataBANK2)| (0+128)
  6211     004D  0085               	movwf	5
  6212     004E  304F               	movlw	low __pdataBANK2
  6213     004F  0086               	movwf	6
  6214     0050  3001               	movlw	high __pdataBANK2
  6215     0051  0087               	movwf	7
  6216     0052  3010               	movlw	16
  6217     0053  3194  24AC  3180   	fcall	init_ram
  6218                           
  6219                           ; Clear objects allocated to COMMON
  6220     0056  01F6               	clrf	__pbssCOMMON& (0+127)
  6221     0057  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  6222     0058  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  6223     0059  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  6224                           
  6225                           ; Clear objects allocated to BANK1
  6226     005A  30A0               	movlw	low __pbssBANK1
  6227     005B  0084               	movwf	4
  6228     005C  3000               	movlw	high __pbssBANK1
  6229     005D  0085               	movwf	5
  6230     005E  3032               	movlw	50
  6231     005F  3194  24A6  3180   	fcall	clear_ram0
  6232                           
  6233                           ; Clear objects allocated to BANK2
  6234     0062  3020               	movlw	low __pbssBANK2
  6235     0063  0084               	movwf	4
  6236     0064  3001               	movlw	high __pbssBANK2
  6237     0065  0085               	movwf	5
  6238     0066  302F               	movlw	47
  6239     0067  3194  24A6  3180   	fcall	clear_ram0
  6240                           
  6241                           ; Clear objects allocated to BANK3
  6242     006A  30A0               	movlw	low __pbssBANK3
  6243     006B  0084               	movwf	4
  6244     006C  3001               	movlw	high __pbssBANK3
  6245     006D  0085               	movwf	5
  6246     006E  3020               	movlw	32
  6247     006F  3194  24A6  3180   	fcall	clear_ram0
  6248     0072                     end_of_initialization:	
  6249                           ;End of C runtime variable initialization code
  6250                           
  6251     0072                     __end_of__initialization:
  6252     0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6253     0073  0020               	movlb	0
  6254     0074  3188  28A1         	ljmp	_main	;jump to C main() function
  6255                           
  6256                           	psect	bssCOMMON
  6257     0076                     __pbssCOMMON:
  6258     0076                     readLine@index:
  6259     0076                     	ds	1
  6260     0077                     _eusartRxTail:
  6261     0077                     	ds	1
  6262     0078                     _eusartRxHead:
  6263     0078                     	ds	1
  6264     0079                     _eusartTxHead:
  6265     0079                     	ds	1
  6266                           
  6267                           	psect	bssBANK1
  6268     00A0                     __pbssBANK1:
  6269     00A0                     _eusartRxStatusBuffer:
  6270     00A0                     	ds	8
  6271     00A8                     _integral:
  6272     00A8                     	ds	4
  6273     00AC                     _width:
  6274     00AC                     	ds	2
  6275     00AE                     _prec:
  6276     00AE                     	ds	2
  6277     00B0                     _potentiometer:
  6278     00B0                     	ds	2
  6279     00B2                     _hoogteSensor:
  6280     00B2                     	ds	2
  6281     00B4                     _dutycycle:
  6282     00B4                     	ds	2
  6283     00B6                     _prev_error:
  6284     00B6                     	ds	2
  6285     00B8                     _error:
  6286     00B8                     	ds	2
  6287     00BA                     _ADC_InterruptHandler:
  6288     00BA                     	ds	2
  6289     00BC                     _EUSART_ErrorHandler:
  6290     00BC                     	ds	2
  6291     00BE                     _EUSART_OverrunErrorHandler:
  6292     00BE                     	ds	2
  6293     00C0                     _EUSART_FramingErrorHandler:
  6294     00C0                     	ds	2
  6295     00C2                     _EUSART_RxDefaultInterruptHandler:
  6296     00C2                     	ds	2
  6297     00C4                     _EUSART_TxDefaultInterruptHandler:
  6298     00C4                     	ds	2
  6299     00C6                     _flags:
  6300     00C6                     	ds	1
  6301     00C7                     updateLedstripAnimation@green:
  6302     00C7                     	ds	1
  6303     00C8                     updateLedstripAnimation@blue:
  6304     00C8                     	ds	1
  6305     00C9                     updateLedstripAnimation@change_color:
  6306     00C9                     	ds	1
  6307     00CA                     updateLedstripAnimation@led_run:
  6308     00CA                     	ds	1
  6309     00CB                     updateLedstripAnimation@direction:
  6310     00CB                     	ds	1
  6311     00CC                     main@printCycle:
  6312     00CC                     	ds	1
  6313     00CD                     _sensorHeight:
  6314     00CD                     	ds	1
  6315     00CE                     _eusartRxLastError:
  6316     00CE                     	ds	1
  6317     00CF                     _eusartRxCount:
  6318     00CF                     	ds	1
  6319     00D0                     _eusartTxBufferRemaining:
  6320     00D0                     	ds	1
  6321     00D1                     _eusartTxTail:
  6322     00D1                     	ds	1
  6323                           
  6324                           	psect	dataBANK1
  6325     00E4                     __pdataBANK1:
  6326     00E4                     _kp:
  6327     00E4                     	ds	4
  6328     00E8                     _ki:
  6329     00E8                     	ds	4
  6330     00EC                     adcConversionDoneHandler@channel:
  6331     00EC                     	ds	1
  6332     00ED                     updateLedstripAnimation@red:
  6333     00ED                     	ds	1
  6334     00EE                     _mustPrintLogs:
  6335     00EE                     	ds	1
  6336     00EF                     _setpoint:
  6337     00EF                     	ds	1
  6338                           
  6339                           	psect	bssBANK2
  6340     0120                     __pbssBANK2:
  6341     0120                     _eusartRxBuffer:
  6342     0120                     	ds	8
  6343     0128                     _eusartTxBuffer:
  6344     0128                     	ds	8
  6345     0130                     _line:
  6346     0130                     	ds	20
  6347     0144                     _printBuffer:
  6348     0144                     	ds	11
  6349                           
  6350                           	psect	dataBANK2
  6351     014F                     __pdataBANK2:
  6352     014F                     _buffer:
  6353     014F                     	ds	16
  6354                           
  6355                           	psect	bssBANK3
  6356     01A0                     __pbssBANK3:
  6357     01A0                     _dbuf:
  6358     01A0                     	ds	32
  6359                           
  6360                           	psect	inittext
  6361     14AC                     init_ram:
  6362     14AC  00FE               	movwf	btemp
  6363     14AD                     initloop:
  6364     14AD  0012               	moviw fsr0++
  6365     14AE  001E               	movwi fsr1++
  6366     14AF  0BFE               	decfsz	btemp,f
  6367     14B0  2CAD               	goto	initloop
  6368     14B1  3400               	retlw	0
  6369                           
  6370                           	psect	clrtext
  6371     14A6                     clear_ram0:	
  6372                           ;	Called with FSR0 containing the base address, and
  6373                           ;	WREG with the size to clear
  6374                           
  6375     14A6  0064               	clrwdt	;clear the watchdog before getting into this loop
  6376     14A7                     clrloop0:
  6377     14A7  0180               	clrf	0	;clear RAM location pointed to by FSR
  6378     14A8  3101               	addfsr 0,1
  6379     14A9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6380     14AA  2CA7               	goto	clrloop0	;have we reached the end yet?
  6381     14AB  3400               	retlw	0	;all done for this memory range, return
  6382                           
  6383                           	psect	cstackBANK1
  6384     00D2                     __pcstackBANK1:
  6385     00D2                     ?_printFloat:
  6386     00D2                     str2float@i:	
  6387                           ; 1 bytes @ 0x0
  6388                           
  6389     00D2                     printFloat@value:	
  6390                           ; 2 bytes @ 0x0
  6391                           
  6392                           
  6393                           ; 4 bytes @ 0x0
  6394     00D2                     	ds	2
  6395     00D4                     str2float@kommaPresent:
  6396                           
  6397                           ; 1 bytes @ 0x2
  6398     00D4                     	ds	1
  6399     00D5                     str2float@kommaCounter:
  6400                           
  6401                           ; 1 bytes @ 0x3
  6402     00D5                     	ds	1
  6403     00D6                     str2float@str:
  6404     00D6                     printFloat@naComma:	
  6405                           ; 1 bytes @ 0x4
  6406                           
  6407                           
  6408                           ; 4 bytes @ 0x4
  6409     00D6                     	ds	1
  6410     00D7                     str2float@getal:
  6411                           
  6412                           ; 4 bytes @ 0x5
  6413     00D7                     	ds	3
  6414     00DA                     printFloat@voorComma:
  6415                           
  6416                           ; 2 bytes @ 0x8
  6417     00DA                     	ds	1
  6418     00DB                     str2float@cijfer:
  6419                           
  6420                           ; 1 bytes @ 0x9
  6421     00DB                     	ds	1
  6422     00DC                     ?_PI_SetKp:
  6423     00DC                     ?_PI_SetKi:	
  6424                           ; 1 bytes @ 0xA
  6425                           
  6426     00DC                     ??_printLogs:	
  6427                           ; 1 bytes @ 0xA
  6428                           
  6429     00DC                     PI_SetKp@value:	
  6430                           ; 1 bytes @ 0xA
  6431                           
  6432     00DC                     PI_SetKi@value:	
  6433                           ; 4 bytes @ 0xA
  6434                           
  6435                           
  6436                           ; 4 bytes @ 0xA
  6437     00DC                     	ds	4
  6438     00E0                     ??_uartHandler:
  6439                           
  6440                           ; 1 bytes @ 0xE
  6441     00E0                     	ds	4
  6442                           
  6443                           	psect	cstackCOMMON
  6444     0070                     __pcstackCOMMON:
  6445     0070                     ?_MASTER0_open:
  6446     0070                     ?_SPI1_Open:	
  6447                           ; 1 bytes @ 0x0
  6448                           
  6449     0070                     ?_PMD_Initialize:	
  6450                           ; 1 bytes @ 0x0
  6451                           
  6452     0070                     ?_SPI1_Initialize:	
  6453                           ; 1 bytes @ 0x0
  6454                           
  6455     0070                     ?_OSCILLATOR_Initialize:	
  6456                           ; 1 bytes @ 0x0
  6457                           
  6458     0070                     ?_WDT_Initialize:	
  6459                           ; 1 bytes @ 0x0
  6460                           
  6461     0070                     ?_ADC_Initialize:	
  6462                           ; 1 bytes @ 0x0
  6463                           
  6464     0070                     ?_TMR4_Initialize:	
  6465                           ; 1 bytes @ 0x0
  6466                           
  6467     0070                     ?_EUSART_Initialize:	
  6468                           ; 1 bytes @ 0x0
  6469                           
  6470     0070                     ?_EUSART_Receive_ISR:	
  6471                           ; 1 bytes @ 0x0
  6472                           
  6473     0070                     ?_EUSART_Transmit_ISR:	
  6474                           ; 1 bytes @ 0x0
  6475                           
  6476     0070                     ??_EUSART_Transmit_ISR:	
  6477                           ; 1 bytes @ 0x0
  6478                           
  6479     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  6480                           ; 1 bytes @ 0x0
  6481                           
  6482     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  6483                           ; 1 bytes @ 0x0
  6484                           
  6485     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  6486                           ; 1 bytes @ 0x0
  6487                           
  6488     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  6489                           ; 1 bytes @ 0x0
  6490                           
  6491     0070                     ?_EUSART_DefaultErrorHandler:	
  6492                           ; 1 bytes @ 0x0
  6493                           
  6494     0070                     ?_EUSART_RxDataHandler:	
  6495                           ; 1 bytes @ 0x0
  6496                           
  6497     0070                     ??_EUSART_RxDataHandler:	
  6498                           ; 1 bytes @ 0x0
  6499                           
  6500     0070                     ?_ADC_ISR:	
  6501                           ; 1 bytes @ 0x0
  6502                           
  6503     0070                     ?_ADC_DefaultInterruptHandler:	
  6504                           ; 1 bytes @ 0x0
  6505                           
  6506     0070                     ??_ADC_DefaultInterruptHandler:	
  6507                           ; 1 bytes @ 0x0
  6508                           
  6509     0070                     ?_getHoogteSensor:	
  6510                           ; 1 bytes @ 0x0
  6511                           
  6512     0070                     ?_getPotentiometer:	
  6513                           ; 1 bytes @ 0x0
  6514                           
  6515     0070                     ?_initAdcMultiplexer:	
  6516                           ; 1 bytes @ 0x0
  6517                           
  6518     0070                     ?_initLedStrip:	
  6519                           ; 1 bytes @ 0x0
  6520                           
  6521     0070                     ?_updateLedstripAnimation:	
  6522                           ; 1 bytes @ 0x0
  6523                           
  6524     0070                     ?_spi_master_open:	
  6525                           ; 1 bytes @ 0x0
  6526                           
  6527     0070                     ?_TMR0_Initialize:	
  6528                           ; 1 bytes @ 0x0
  6529                           
  6530     0070                     ?_TMR0_HasOverflowOccured:	
  6531                           ; 1 bytes @ 0x0
  6532                           
  6533     0070                     ?_PWM5_Initialize:	
  6534                           ; 1 bytes @ 0x0
  6535                           
  6536     0070                     ?_TMR2_Initialize:	
  6537                           ; 1 bytes @ 0x0
  6538                           
  6539     0070                     ?_PIN_MANAGER_Initialize:	
  6540                           ; 1 bytes @ 0x0
  6541                           
  6542     0070                     ?_SYSTEM_Initialize:	
  6543                           ; 1 bytes @ 0x0
  6544                           
  6545     0070                     ?_EUSART_is_rx_ready:	
  6546                           ; 1 bytes @ 0x0
  6547                           
  6548     0070                     ?_EUSART_Read:	
  6549                           ; 1 bytes @ 0x0
  6550                           
  6551     0070                     ?_EUSART_Write:	
  6552                           ; 1 bytes @ 0x0
  6553                           
  6554     0070                     ?_putch:	
  6555                           ; 1 bytes @ 0x0
  6556                           
  6557     0070                     ?_INTERRUPT_InterruptManager:	
  6558                           ; 1 bytes @ 0x0
  6559                           
  6560     0070                     ?_ADC_SelectChannel:	
  6561                           ; 1 bytes @ 0x0
  6562                           
  6563     0070                     ?_TMR4_HasOverflowOccured:	
  6564                           ; 1 bytes @ 0x0
  6565                           
  6566     0070                     ?_PI_GetSensorHeight:	
  6567                           ; 1 bytes @ 0x0
  6568                           
  6569     0070                     ?_PI_SetSetpoint:	
  6570                           ; 1 bytes @ 0x0
  6571                           
  6572     0070                     ?_PI_GetSetPoint:	
  6573                           ; 1 bytes @ 0x0
  6574                           
  6575     0070                     ?_PI:	
  6576                           ; 1 bytes @ 0x0
  6577                           
  6578     0070                     ?_printNewLine:	
  6579                           ; 1 bytes @ 0x0
  6580                           
  6581     0070                     ?_str2uint8:	
  6582                           ; 1 bytes @ 0x0
  6583                           
  6584     0070                     ?_printStr:	
  6585                           ; 1 bytes @ 0x0
  6586                           
  6587     0070                     ?_printLogs:	
  6588                           ; 1 bytes @ 0x0
  6589                           
  6590     0070                     ?_uartHandler:	
  6591                           ; 1 bytes @ 0x0
  6592                           
  6593     0070                     ?_main:	
  6594                           ; 1 bytes @ 0x0
  6595                           
  6596     0070                     ?_Send_LED_StartFrame:	
  6597                           ; 1 bytes @ 0x0
  6598                           
  6599     0070                     ?_Send_LED_EndFrame:	
  6600                           ; 1 bytes @ 0x0
  6601                           
  6602     0070                     ?_adcConversionDoneHandler:	
  6603                           ; 1 bytes @ 0x0
  6604                           
  6605     0070                     ?i1_ADC_SelectChannel:	
  6606                           ; 1 bytes @ 0x0
  6607                           
  6608     0070                     ??i1_ADC_SelectChannel:	
  6609                           ; 1 bytes @ 0x0
  6610                           
  6611     0070                     ?_ADC_GetConversionResult:	
  6612                           ; 1 bytes @ 0x0
  6613                           
  6614                           
  6615                           ; 2 bytes @ 0x0
  6616     0070                     	ds	1
  6617     0071                     ??_EUSART_Receive_ISR:
  6618     0071                     ??_EUSART_DefaultErrorHandler:	
  6619                           ; 1 bytes @ 0x1
  6620                           
  6621     0071                     i1ADC_SelectChannel@channel:	
  6622                           ; 1 bytes @ 0x1
  6623                           
  6624                           
  6625                           ; 1 bytes @ 0x1
  6626     0071                     	ds	1
  6627     0072                     ??_ADC_GetConversionResult:
  6628     0072                     ??_adcConversionDoneHandler:	
  6629                           ; 1 bytes @ 0x2
  6630                           
  6631                           
  6632                           ; 1 bytes @ 0x2
  6633     0072                     	ds	2
  6634     0074                     ?_SPI1_ExchangeByte:
  6635     0074                     ??_PMD_Initialize:	
  6636                           ; 1 bytes @ 0x4
  6637                           
  6638     0074                     ??_SPI1_Initialize:	
  6639                           ; 1 bytes @ 0x4
  6640                           
  6641     0074                     ??_OSCILLATOR_Initialize:	
  6642                           ; 1 bytes @ 0x4
  6643                           
  6644     0074                     ??_WDT_Initialize:	
  6645                           ; 1 bytes @ 0x4
  6646                           
  6647     0074                     ??_TMR4_Initialize:	
  6648                           ; 1 bytes @ 0x4
  6649                           
  6650     0074                     ?_EUSART_SetRxInterruptHandler:	
  6651                           ; 1 bytes @ 0x4
  6652                           
  6653     0074                     ?_EUSART_SetTxInterruptHandler:	
  6654                           ; 1 bytes @ 0x4
  6655                           
  6656     0074                     ?_EUSART_SetFramingErrorHandler:	
  6657                           ; 1 bytes @ 0x4
  6658                           
  6659     0074                     ?_EUSART_SetOverrunErrorHandler:	
  6660                           ; 1 bytes @ 0x4
  6661                           
  6662     0074                     ?_EUSART_SetErrorHandler:	
  6663                           ; 1 bytes @ 0x4
  6664                           
  6665     0074                     ??_ADC_ISR:	
  6666                           ; 1 bytes @ 0x4
  6667                           
  6668     0074                     ?_ADC_SetInterruptHandler:	
  6669                           ; 1 bytes @ 0x4
  6670                           
  6671     0074                     ??_getHoogteSensor:	
  6672                           ; 1 bytes @ 0x4
  6673                           
  6674     0074                     ??_getPotentiometer:	
  6675                           ; 1 bytes @ 0x4
  6676                           
  6677     0074                     ??_TMR0_Initialize:	
  6678                           ; 1 bytes @ 0x4
  6679                           
  6680     0074                     ??_TMR0_HasOverflowOccured:	
  6681                           ; 1 bytes @ 0x4
  6682                           
  6683     0074                     ??_PWM5_Initialize:	
  6684                           ; 1 bytes @ 0x4
  6685                           
  6686     0074                     ?_PWM5_LoadDutyValue:	
  6687                           ; 1 bytes @ 0x4
  6688                           
  6689     0074                     ??_TMR2_Initialize:	
  6690                           ; 1 bytes @ 0x4
  6691                           
  6692     0074                     ??_PIN_MANAGER_Initialize:	
  6693                           ; 1 bytes @ 0x4
  6694                           
  6695     0074                     ??_EUSART_is_rx_ready:	
  6696                           ; 1 bytes @ 0x4
  6697                           
  6698     0074                     ??_EUSART_Read:	
  6699                           ; 1 bytes @ 0x4
  6700                           
  6701     0074                     ??_EUSART_Write:	
  6702                           ; 1 bytes @ 0x4
  6703                           
  6704     0074                     ??_INTERRUPT_InterruptManager:	
  6705                           ; 1 bytes @ 0x4
  6706                           
  6707     0074                     ??_ADC_SelectChannel:	
  6708                           ; 1 bytes @ 0x4
  6709                           
  6710     0074                     ??_TMR4_HasOverflowOccured:	
  6711                           ; 1 bytes @ 0x4
  6712                           
  6713     0074                     ??_PI_GetSensorHeight:	
  6714                           ; 1 bytes @ 0x4
  6715                           
  6716     0074                     ??_PI_SetSetpoint:	
  6717                           ; 1 bytes @ 0x4
  6718                           
  6719     0074                     ??_PI_GetSetPoint:	
  6720                           ; 1 bytes @ 0x4
  6721                           
  6722     0074                     ??_PI_GetKp:	
  6723                           ; 1 bytes @ 0x4
  6724                           
  6725     0074                     ??_PI_GetKi:	
  6726                           ; 1 bytes @ 0x4
  6727                           
  6728     0074                     ?___bmul:	
  6729                           ; 1 bytes @ 0x4
  6730                           
  6731     0074                     ??___lldiv:	
  6732                           ; 1 bytes @ 0x4
  6733                           
  6734     0074                     ??___llmod:	
  6735                           ; 1 bytes @ 0x4
  6736                           
  6737     0074                     ?__Umul8_16:	
  6738                           ; 1 bytes @ 0x4
  6739                           
  6740     0074                     ?_PI_GetDutycycle:	
  6741                           ; 2 bytes @ 0x4
  6742                           
  6743     0074                     SPI1_Open@spi1UniqueConfiguration:	
  6744                           ; 2 bytes @ 0x4
  6745                           
  6746     0074                     SPI1_ExchangeByte@data:	
  6747                           ; 1 bytes @ 0x4
  6748                           
  6749     0074                     TMR4_HasOverflowOccured@status:	
  6750                           ; 1 bytes @ 0x4
  6751                           
  6752     0074                     PI_SetSetpoint@value:	
  6753                           ; 1 bytes @ 0x4
  6754                           
  6755     0074                     ___bmul@multiplicand:	
  6756                           ; 1 bytes @ 0x4
  6757                           
  6758     0074                     __Umul8_16@multiplicand:	
  6759                           ; 1 bytes @ 0x4
  6760                           
  6761     0074                     PWM5_LoadDutyValue@dutyValue:	
  6762                           ; 1 bytes @ 0x4
  6763                           
  6764     0074                     EUSART_SetFramingErrorHandler@interruptHandler:	
  6765                           ; 2 bytes @ 0x4
  6766                           
  6767     0074                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  6768                           ; 2 bytes @ 0x4
  6769                           
  6770     0074                     EUSART_SetErrorHandler@interruptHandler:	
  6771                           ; 2 bytes @ 0x4
  6772                           
  6773     0074                     EUSART_SetTxInterruptHandler@interruptHandler:	
  6774                           ; 2 bytes @ 0x4
  6775                           
  6776     0074                     EUSART_SetRxInterruptHandler@interruptHandler:	
  6777                           ; 2 bytes @ 0x4
  6778                           
  6779     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  6780                           ; 2 bytes @ 0x4
  6781                           
  6782                           
  6783                           ; 2 bytes @ 0x4
  6784     0074                     	ds	1
  6785     0075                     ??_MASTER0_open:
  6786     0075                     ??_SPI1_ExchangeByte:	
  6787                           ; 1 bytes @ 0x5
  6788                           
  6789     0075                     ??_Send_LED_Frame:	
  6790                           ; 1 bytes @ 0x5
  6791                           
  6792     0075                     ??_Send_LED_StartFrame:	
  6793                           ; 1 bytes @ 0x5
  6794                           
  6795     0075                     ??_Send_LED_EndFrame:	
  6796                           ; 1 bytes @ 0x5
  6797                           
  6798     0075                     ??___bmul:	
  6799                           ; 1 bytes @ 0x5
  6800                           
  6801     0075                     spi_master_open@config:	
  6802                           ; 1 bytes @ 0x5
  6803                           
  6804     0075                     EUSART_Read@readValue:	
  6805                           ; 1 bytes @ 0x5
  6806                           
  6807     0075                     EUSART_Write@txData:	
  6808                           ; 1 bytes @ 0x5
  6809                           
  6810     0075                     ADC_SelectChannel@channel:	
  6811                           ; 1 bytes @ 0x5
  6812                           
  6813     0075                     Send_LED_Frame@intensity:	
  6814                           ; 1 bytes @ 0x5
  6815                           
  6816     0075                     ___llmod@counter:	
  6817                           ; 1 bytes @ 0x5
  6818                           
  6819                           
  6820                           ; 1 bytes @ 0x5
  6821     0075                     	ds	1
  6822     0076                     ??_ADC_Initialize:
  6823     0076                     ??_EUSART_Initialize:	
  6824                           ; 1 bytes @ 0x6
  6825                           
  6826     0076                     ??_EUSART_SetRxInterruptHandler:	
  6827                           ; 1 bytes @ 0x6
  6828                           
  6829     0076                     ??_EUSART_SetTxInterruptHandler:	
  6830                           ; 1 bytes @ 0x6
  6831                           
  6832     0076                     ??_EUSART_SetFramingErrorHandler:	
  6833                           ; 1 bytes @ 0x6
  6834                           
  6835     0076                     ??_EUSART_SetOverrunErrorHandler:	
  6836                           ; 1 bytes @ 0x6
  6837                           
  6838     0076                     ??_EUSART_SetErrorHandler:	
  6839                           ; 1 bytes @ 0x6
  6840                           
  6841     0076                     ??_ADC_SetInterruptHandler:	
  6842                           ; 1 bytes @ 0x6
  6843                           
  6844     0076                     ??_printf:	
  6845                           ; 1 bytes @ 0x6
  6846                           
  6847     0076                     ??_initAdcMultiplexer:	
  6848                           ; 1 bytes @ 0x6
  6849                           
  6850     0076                     ??_initLedStrip:	
  6851                           ; 1 bytes @ 0x6
  6852                           
  6853     0076                     ??_SYSTEM_Initialize:	
  6854                           ; 1 bytes @ 0x6
  6855                           
  6856     0076                     ??_putch:	
  6857                           ; 1 bytes @ 0x6
  6858                           
  6859     0076                     ??_PI_GetDutycycle:	
  6860                           ; 1 bytes @ 0x6
  6861                           
  6862     0076                     ??_PI_SetKp:	
  6863                           ; 1 bytes @ 0x6
  6864                           
  6865     0076                     ??_PI_SetKi:	
  6866                           ; 1 bytes @ 0x6
  6867                           
  6868     0076                     ??_printNewLine:	
  6869                           ; 1 bytes @ 0x6
  6870                           
  6871     0076                     ??_printFloat:	
  6872                           ; 1 bytes @ 0x6
  6873                           
  6874     0076                     ??___flsub:	
  6875                           ; 1 bytes @ 0x6
  6876                           
  6877                           
  6878                           	psect	cstackBANK0
  6879     0020                     __pcstackBANK0:	
  6880                           ; 1 bytes @ 0x6
  6881                           
  6882     0020                     ??_SPI1_Open:
  6883     0020                     ??__Umul8_16:	
  6884                           ; 1 bytes @ 0x0
  6885                           
  6886     0020                     ??_PWM5_LoadDutyValue:	
  6887                           ; 1 bytes @ 0x0
  6888                           
  6889     0020                     ??_printStr:	
  6890                           ; 1 bytes @ 0x0
  6891                           
  6892     0020                     ?_Send_LED_Frame:	
  6893                           ; 1 bytes @ 0x0
  6894                           
  6895     0020                     ?_PI_GetKp:	
  6896                           ; 1 bytes @ 0x0
  6897                           
  6898     0020                     ?_PI_GetKi:	
  6899                           ; 4 bytes @ 0x0
  6900                           
  6901     0020                     ?___lldiv:	
  6902                           ; 4 bytes @ 0x0
  6903                           
  6904     0020                     ?___llmod:	
  6905                           ; 4 bytes @ 0x0
  6906                           
  6907     0020                     ?___fldiv:	
  6908                           ; 4 bytes @ 0x0
  6909                           
  6910     0020                     ?___xxtofl:	
  6911                           ; 4 bytes @ 0x0
  6912                           
  6913     0020                     putch@txData:	
  6914                           ; 4 bytes @ 0x0
  6915                           
  6916     0020                     Send_LED_Frame@blue:	
  6917                           ; 1 bytes @ 0x0
  6918                           
  6919     0020                     ___bmul@product:	
  6920                           ; 1 bytes @ 0x0
  6921                           
  6922     0020                     Send_LED_StartFrame@i:	
  6923                           ; 1 bytes @ 0x0
  6924                           
  6925     0020                     Send_LED_EndFrame@i:	
  6926                           ; 2 bytes @ 0x0
  6927                           
  6928     0020                     ___lldiv@divisor:	
  6929                           ; 2 bytes @ 0x0
  6930                           
  6931     0020                     ___llmod@divisor:	
  6932                           ; 4 bytes @ 0x0
  6933                           
  6934     0020                     ___fldiv@a:	
  6935                           ; 4 bytes @ 0x0
  6936                           
  6937     0020                     ___xxtofl@val:	
  6938                           ; 4 bytes @ 0x0
  6939                           
  6940                           
  6941                           ; 4 bytes @ 0x0
  6942     0020                     	ds	1
  6943     0021                     ?_fputc:
  6944     0021                     printStr@str:	
  6945                           ; 2 bytes @ 0x1
  6946                           
  6947     0021                     Send_LED_Frame@green:	
  6948                           ; 1 bytes @ 0x1
  6949                           
  6950     0021                     ___bmul@multiplier:	
  6951                           ; 1 bytes @ 0x1
  6952                           
  6953     0021                     fputc@c:	
  6954                           ; 1 bytes @ 0x1
  6955                           
  6956                           
  6957                           ; 2 bytes @ 0x1
  6958     0021                     	ds	1
  6959     0022                     ??_str2uint8:
  6960     0022                     Send_LED_Frame@red:	
  6961                           ; 1 bytes @ 0x2
  6962                           
  6963     0022                     __Umul8_16@product:	
  6964                           ; 1 bytes @ 0x2
  6965                           
  6966                           
  6967                           ; 2 bytes @ 0x2
  6968     0022                     	ds	1
  6969     0023                     ??_updateLedstripAnimation:
  6970     0023                     ??_spi_master_open:	
  6971                           ; 1 bytes @ 0x3
  6972                           
  6973     0023                     str2uint8@str:	
  6974                           ; 1 bytes @ 0x3
  6975                           
  6976     0023                     fputc@fp:	
  6977                           ; 1 bytes @ 0x3
  6978                           
  6979                           
  6980                           ; 2 bytes @ 0x3
  6981     0023                     	ds	1
  6982     0024                     ??___xxtofl:
  6983     0024                     str2uint8@i:	
  6984                           ; 1 bytes @ 0x4
  6985                           
  6986     0024                     __Umul8_16@word_mpld:	
  6987                           ; 2 bytes @ 0x4
  6988                           
  6989     0024                     ___lldiv@dividend:	
  6990                           ; 2 bytes @ 0x4
  6991                           
  6992     0024                     ___llmod@dividend:	
  6993                           ; 4 bytes @ 0x4
  6994                           
  6995     0024                     ___fldiv@b:	
  6996                           ; 4 bytes @ 0x4
  6997                           
  6998                           
  6999                           ; 4 bytes @ 0x4
  7000     0024                     	ds	1
  7001     0025                     ??_fputc:
  7002     0025                     updateLedstripAnimation@led:	
  7003                           ; 1 bytes @ 0x5
  7004                           
  7005                           
  7006                           ; 1 bytes @ 0x5
  7007     0025                     	ds	1
  7008     0026                     str2uint8@cijfer:
  7009     0026                     __Umul8_16@multiplier:	
  7010                           ; 1 bytes @ 0x6
  7011                           
  7012                           
  7013                           ; 1 bytes @ 0x6
  7014     0026                     	ds	1
  7015     0027                     str2uint8@getal:
  7016                           
  7017                           ; 1 bytes @ 0x7
  7018     0027                     	ds	1
  7019     0028                     ??___fldiv:
  7020     0028                     ___xxtofl@sign:	
  7021                           ; 1 bytes @ 0x8
  7022                           
  7023     0028                     ___lldiv@quotient:	
  7024                           ; 1 bytes @ 0x8
  7025                           
  7026                           
  7027                           ; 4 bytes @ 0x8
  7028     0028                     	ds	1
  7029     0029                     ___xxtofl@exp:
  7030                           
  7031                           ; 1 bytes @ 0x9
  7032     0029                     	ds	1
  7033     002A                     ?_vfpfcnvrt:
  7034     002A                     vfpfcnvrt@fp:	
  7035                           ; 1 bytes @ 0xA
  7036                           
  7037     002A                     ___xxtofl@arg:	
  7038                           ; 2 bytes @ 0xA
  7039                           
  7040                           
  7041                           ; 4 bytes @ 0xA
  7042     002A                     	ds	2
  7043     002C                     ___lldiv@counter:
  7044     002C                     vfpfcnvrt@fmt:	
  7045                           ; 1 bytes @ 0xC
  7046                           
  7047                           
  7048                           ; 1 bytes @ 0xC
  7049     002C                     	ds	1
  7050     002D                     ?_printUint32:
  7051     002D                     vfpfcnvrt@ap:	
  7052                           ; 1 bytes @ 0xD
  7053                           
  7054     002D                     printUint32@getal:	
  7055                           ; 1 bytes @ 0xD
  7056                           
  7057     002D                     ___fldiv@rem:	
  7058                           ; 4 bytes @ 0xD
  7059                           
  7060                           
  7061                           ; 4 bytes @ 0xD
  7062     002D                     	ds	1
  7063     002E                     ??_vfpfcnvrt:
  7064     002E                     ?___fladd:	
  7065                           ; 1 bytes @ 0xE
  7066                           
  7067     002E                     ___fladd@b:	
  7068                           ; 4 bytes @ 0xE
  7069                           
  7070                           
  7071                           ; 4 bytes @ 0xE
  7072     002E                     	ds	3
  7073     0031                     printUint32@leadingZeros:
  7074     0031                     ___fldiv@sign:	
  7075                           ; 1 bytes @ 0x11
  7076                           
  7077                           
  7078                           ; 1 bytes @ 0x11
  7079     0031                     	ds	1
  7080     0032                     ??_printUint32:
  7081     0032                     ?_vfprintf:	
  7082                           ; 1 bytes @ 0x12
  7083                           
  7084     0032                     ___fldiv@new_exp:	
  7085                           ; 2 bytes @ 0x12
  7086                           
  7087     0032                     vfprintf@fp:	
  7088                           ; 2 bytes @ 0x12
  7089                           
  7090     0032                     ___fladd@a:	
  7091                           ; 2 bytes @ 0x12
  7092                           
  7093                           
  7094                           ; 4 bytes @ 0x12
  7095     0032                     	ds	1
  7096     0033                     printUint32@i:
  7097                           
  7098                           ; 1 bytes @ 0x13
  7099     0033                     	ds	1
  7100     0034                     vfprintf@fmt:
  7101     0034                     ___fldiv@grs:	
  7102                           ; 2 bytes @ 0x14
  7103                           
  7104                           
  7105                           ; 4 bytes @ 0x14
  7106     0034                     	ds	2
  7107     0036                     ??___fladd:
  7108     0036                     vfprintf@ap:	
  7109                           ; 1 bytes @ 0x16
  7110                           
  7111                           
  7112                           ; 1 bytes @ 0x16
  7113     0036                     	ds	1
  7114     0037                     ??_vfprintf:
  7115                           
  7116                           ; 1 bytes @ 0x17
  7117     0037                     	ds	1
  7118     0038                     ___fldiv@bexp:
  7119     0038                     vfprintf@cfmt:	
  7120                           ; 1 bytes @ 0x18
  7121                           
  7122                           
  7123                           ; 2 bytes @ 0x18
  7124     0038                     	ds	1
  7125     0039                     ___fldiv@aexp:
  7126                           
  7127                           ; 1 bytes @ 0x19
  7128     0039                     	ds	1
  7129     003A                     ?_printf:
  7130     003A                     printf@fmt:	
  7131                           ; 2 bytes @ 0x1A
  7132                           
  7133                           
  7134                           ; 2 bytes @ 0x1A
  7135     003A                     	ds	2
  7136     003C                     printf@ap:
  7137                           
  7138                           ; 1 bytes @ 0x1C
  7139     003C                     	ds	1
  7140     003D                     ?_readLine:
  7141                           
  7142                           ; 1 bytes @ 0x1D
  7143     003D                     	ds	1
  7144     003E                     ___fladd@signs:
  7145                           
  7146                           ; 1 bytes @ 0x1E
  7147     003E                     	ds	1
  7148     003F                     ??_readLine:
  7149     003F                     ___fladd@aexp:	
  7150                           ; 1 bytes @ 0x1F
  7151                           
  7152                           
  7153                           ; 1 bytes @ 0x1F
  7154     003F                     	ds	1
  7155     0040                     ___fladd@bexp:
  7156                           
  7157                           ; 1 bytes @ 0x20
  7158     0040                     	ds	1
  7159     0041                     ___fladd@grs:
  7160                           
  7161                           ; 1 bytes @ 0x21
  7162     0041                     	ds	1
  7163     0042                     ?___flsub:
  7164     0042                     ___flsub@a:	
  7165                           ; 4 bytes @ 0x22
  7166                           
  7167                           
  7168                           ; 4 bytes @ 0x22
  7169     0042                     	ds	4
  7170     0046                     ___flsub@b:
  7171                           
  7172                           ; 4 bytes @ 0x26
  7173     0046                     	ds	4
  7174     004A                     ?___flmul:
  7175     004A                     ___flmul@b:	
  7176                           ; 4 bytes @ 0x2A
  7177                           
  7178                           
  7179                           ; 4 bytes @ 0x2A
  7180     004A                     	ds	4
  7181     004E                     ___flmul@a:
  7182                           
  7183                           ; 4 bytes @ 0x2E
  7184     004E                     	ds	4
  7185     0052                     ??___flmul:
  7186                           
  7187                           ; 1 bytes @ 0x32
  7188     0052                     	ds	5
  7189     0057                     ___flmul@sign:
  7190                           
  7191                           ; 1 bytes @ 0x37
  7192     0057                     	ds	1
  7193     0058                     ___flmul@aexp:
  7194                           
  7195                           ; 1 bytes @ 0x38
  7196     0058                     	ds	1
  7197     0059                     ___flmul@grs:
  7198                           
  7199                           ; 4 bytes @ 0x39
  7200     0059                     	ds	4
  7201     005D                     ___flmul@bexp:
  7202                           
  7203                           ; 1 bytes @ 0x3D
  7204     005D                     	ds	1
  7205     005E                     ___flmul@prod:
  7206                           
  7207                           ; 4 bytes @ 0x3E
  7208     005E                     	ds	4
  7209     0062                     ___flmul@temp:
  7210                           
  7211                           ; 2 bytes @ 0x42
  7212     0062                     	ds	2
  7213     0064                     ?_str2float:
  7214     0064                     ?___fltol:	
  7215                           ; 4 bytes @ 0x44
  7216                           
  7217     0064                     ___fltol@f1:	
  7218                           ; 4 bytes @ 0x44
  7219                           
  7220                           
  7221                           ; 4 bytes @ 0x44
  7222     0064                     	ds	4
  7223     0068                     ??_str2float:
  7224     0068                     ??___fltol:	
  7225                           ; 1 bytes @ 0x48
  7226                           
  7227                           
  7228                           ; 1 bytes @ 0x48
  7229     0068                     	ds	4
  7230     006C                     ___fltol@sign1:
  7231                           
  7232                           ; 1 bytes @ 0x4C
  7233     006C                     	ds	1
  7234     006D                     ___fltol@exp1:
  7235                           
  7236                           ; 1 bytes @ 0x4D
  7237     006D                     	ds	1
  7238     006E                     ??_PI:
  7239     006E                     uartHandler@str:	
  7240                           ; 1 bytes @ 0x4E
  7241                           
  7242                           
  7243                           ; 1 bytes @ 0x4E
  7244     006E                     	ds	1
  7245     006F                     ??_main:
  7246                           
  7247                           ; 1 bytes @ 0x4F
  7248     006F                     	ds	1
  7249                           
  7250                           	psect	maintext
  7251     08A1                     __pmaintext:	
  7252 ;;
  7253 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  7254 ;;
  7255 ;; *************** function _main *****************
  7256 ;; Defined at:
  7257 ;;		line 21 in file "main.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : B1F/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;Total ram usage:        1 bytes
  7276 ;; Hardware stack levels required when called: 12
  7277 ;; This function calls:
  7278 ;;		_PI
  7279 ;;		_SYSTEM_Initialize
  7280 ;;		_TMR0_HasOverflowOccured
  7281 ;;		_TMR0_Initialize
  7282 ;;		_TMR4_HasOverflowOccured
  7283 ;;		_TMR4_Initialize
  7284 ;;		_initAdcMultiplexer
  7285 ;;		_initLedStrip
  7286 ;;		_printLogs
  7287 ;;		_printf
  7288 ;;		_uartHandler
  7289 ;;		_updateLedstripAnimation
  7290 ;; This function is called by:
  7291 ;;		Startup code after reset
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295     08A1                     _main:	
  7296                           ;psect for function _main
  7297                           
  7298     08A1                     l6003:	
  7299                           ;incstack = 0
  7300                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7301                           
  7302                           
  7303                           ;main.c: 23:     SYSTEM_Initialize();
  7304     08A1  3197  271B  3188   	fcall	_SYSTEM_Initialize
  7305     08A4                     l6005:
  7306                           
  7307                           ;main.c: 29:     (INTCONbits.GIE = 1);
  7308     08A4  178B               	bsf	11,7	;volatile
  7309     08A5                     l6007:
  7310                           
  7311                           ;main.c: 32:     (INTCONbits.PEIE = 1);
  7312     08A5  170B               	bsf	11,6	;volatile
  7313                           
  7314                           ;main.c: 40:     initAdcMultiplexer();
  7315     08A6  3195  2531  3188   	fcall	_initAdcMultiplexer
  7316     08A9                     l6009:
  7317                           
  7318                           ;main.c: 41:     initLedStrip();
  7319     08A9  3194  246C  3188   	fcall	_initLedStrip
  7320     08AC                     l6011:
  7321                           
  7322                           ;main.c: 43:     printf("Hello :) \r\n");
  7323     08AC  3073               	movlw	low (STR_18| (0+32768))
  7324     08AD  0020               	movlb	0	; select bank0
  7325     08AE  00BA               	movwf	printf@fmt
  7326     08AF  3098               	movlw	high (STR_18| (0+32768))
  7327     08B0  00BB               	movwf	printf@fmt+1
  7328     08B1  3195  258B  3188   	fcall	_printf
  7329     08B4                     l6013:
  7330                           
  7331                           ;main.c: 47:         uartHandler();
  7332     08B4  3186  2663  3188   	fcall	_uartHandler
  7333     08B7                     l6015:
  7334                           
  7335                           ;main.c: 51:         if (TMR0_HasOverflowOccured()) {
  7336     08B7  3194  2462  3188   	fcall	_TMR0_HasOverflowOccured
  7337     08BA  3A00               	xorlw	0
  7338     08BB  1903               	skipnz
  7339     08BC  28BE               	goto	u6201
  7340     08BD  28BF               	goto	u6200
  7341     08BE                     u6201:
  7342     08BE  28D5               	goto	l6025
  7343     08BF                     u6200:
  7344     08BF                     l6017:
  7345                           
  7346                           ;main.c: 52:             TMR0_Initialize();
  7347     08BF  3194  24DB  3188   	fcall	_TMR0_Initialize
  7348                           
  7349                           ;main.c: 54:             PI();
  7350     08C2  318E  2620  3188   	fcall	_PI
  7351     08C5                     l6019:
  7352                           
  7353                           ;main.c: 55:             static uint8_t printCycle = 0;;main.c: 56:             if (prin
      +                          tCycle++ > 30) {
  7354     08C5  0021               	movlb	1	; select bank1
  7355     08C6  084C               	movf	main@printCycle^(0+128),w
  7356     08C7  0ACC               	incf	main@printCycle^(0+128),f
  7357     08C8  0020               	movlb	0	; select bank0
  7358     08C9  00EF               	movwf	??_main
  7359     08CA  301F               	movlw	31
  7360     08CB  026F               	subwf	??_main,w
  7361     08CC  1C03               	skipc
  7362     08CD  28CF               	goto	u6211
  7363     08CE  28D0               	goto	u6210
  7364     08CF                     u6211:
  7365     08CF  28D5               	goto	l6025
  7366     08D0                     u6210:
  7367     08D0                     l6021:
  7368                           
  7369                           ;main.c: 57:                 printLogs();
  7370     08D0  318C  2499  3188   	fcall	_printLogs
  7371     08D3                     l6023:
  7372                           
  7373                           ;main.c: 58:                 printCycle = 0;
  7374     08D3  0021               	movlb	1	; select bank1
  7375     08D4  01CC               	clrf	main@printCycle^(0+128)
  7376     08D5                     l6025:
  7377                           
  7378                           ;main.c: 64:         if (TMR4_HasOverflowOccured()) {
  7379     08D5  3195  2562  3188   	fcall	_TMR4_HasOverflowOccured
  7380     08D8  3A00               	xorlw	0
  7381     08D9  1903               	skipnz
  7382     08DA  28DC               	goto	u6221
  7383     08DB  28DD               	goto	u6220
  7384     08DC                     u6221:
  7385     08DC  28B4               	goto	l6013
  7386     08DD                     u6220:
  7387     08DD                     l6027:
  7388                           
  7389                           ;main.c: 65:             TMR4_Initialize();
  7390     08DD  3194  24E5  3188   	fcall	_TMR4_Initialize
  7391     08E0                     l6029:
  7392                           
  7393                           ;main.c: 66:             updateLedstripAnimation();
  7394     08E0  318D  254D  3188   	fcall	_updateLedstripAnimation
  7395     08E3  28B4               	goto	l6013
  7396     08E4  3180  283C         	ljmp	start
  7397     08E6                     __end_of_main:
  7398                           
  7399                           	psect	text1
  7400     0D4D                     __ptext1:	
  7401 ;; *************** function _updateLedstripAnimation *****************
  7402 ;; Defined at:
  7403 ;;		line 51 in file "ledstrip.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  led             1    5[BANK0 ] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        3 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; Hardware stack levels required when called: 6
  7424 ;; This function calls:
  7425 ;;		_Send_LED_EndFrame
  7426 ;;		_Send_LED_Frame
  7427 ;;		_Send_LED_StartFrame
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433     0D4D                     _updateLedstripAnimation:	
  7434                           ;psect for function _updateLedstripAnimation
  7435                           
  7436     0D4D                     l5889:	
  7437                           ;incstack = 0
  7438                           ; Regs used in _updateLedstripAnimation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7439                           
  7440                           
  7441                           ;ledstrip.c: 53:     static enum count direction = UP;;ledstrip.c: 54:     static uint8_
      +                          t led_run = 0;;ledstrip.c: 55:     static enum states change_color = GREEN_UP;;ledstrip.
      +                          c: 56:     static uint8_t blue = 0x00, green = 0x00, red = 0xFF;;ledstrip.c: 59:     swi
      +                          tch (direction) {
  7442     0D4D  2D6A               	goto	l5903
  7443     0D4E                     l5891:
  7444     0D4E  303B               	movlw	59
  7445     0D4F  0021               	movlb	1	; select bank1
  7446     0D50  024A               	subwf	updateLedstripAnimation@led_run^(0+128),w
  7447     0D51  1803               	skipnc
  7448     0D52  2D54               	goto	u6071
  7449     0D53  2D55               	goto	u6070
  7450     0D54                     u6071:
  7451     0D54  2D5C               	goto	l821
  7452     0D55                     u6070:
  7453     0D55                     l5893:
  7454                           
  7455                           ;ledstrip.c: 61:                 led_run++;
  7456     0D55  3001               	movlw	1
  7457     0D56  0020               	movlb	0	; select bank0
  7458     0D57  00A3               	movwf	??_updateLedstripAnimation
  7459     0D58  0823               	movf	??_updateLedstripAnimation,w
  7460     0D59  0021               	movlb	1	; select bank1
  7461     0D5A  07CA               	addwf	updateLedstripAnimation@led_run^(0+128),f
  7462                           
  7463                           ;ledstrip.c: 62:             } else {
  7464     0D5B  2DCF               	goto	l5941
  7465     0D5C                     l821:
  7466                           
  7467                           ;ledstrip.c: 63:                 direction = DOWN;
  7468     0D5C  01CB               	clrf	updateLedstripAnimation@direction^(0+128)
  7469     0D5D  0ACB               	incf	updateLedstripAnimation@direction^(0+128),f
  7470     0D5E  2DCF               	goto	l5941
  7471     0D5F                     l5895:
  7472     0D5F  0021               	movlb	1	; select bank1
  7473     0D60  084A               	movf	updateLedstripAnimation@led_run^(0+128),w
  7474     0D61  1903               	btfsc	3,2
  7475     0D62  2D64               	goto	u6081
  7476     0D63  2D65               	goto	u6080
  7477     0D64                     u6081:
  7478     0D64  2D68               	goto	l5899
  7479     0D65                     u6080:
  7480     0D65                     l5897:
  7481                           
  7482                           ;ledstrip.c: 67:                 led_run--;
  7483     0D65  3001               	movlw	1
  7484     0D66  02CA               	subwf	updateLedstripAnimation@led_run^(0+128),f
  7485                           
  7486                           ;ledstrip.c: 68:             } else {
  7487     0D67  2DCF               	goto	l5941
  7488     0D68                     l5899:
  7489                           
  7490                           ;ledstrip.c: 69:                 direction = UP;
  7491     0D68  01CB               	clrf	updateLedstripAnimation@direction^(0+128)
  7492     0D69  2DCF               	goto	l5941
  7493     0D6A                     l5903:
  7494     0D6A  0021               	movlb	1	; select bank1
  7495     0D6B  084B               	movf	updateLedstripAnimation@direction^(0+128),w
  7496     0D6C  0020               	movlb	0	; select bank0
  7497     0D6D  00A3               	movwf	??_updateLedstripAnimation
  7498     0D6E  01A4               	clrf	??_updateLedstripAnimation+1
  7499                           
  7500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7501                           ; Switch size 1, requested type "simple"
  7502                           ; Number of cases is 1, Range of values is 0 to 0
  7503                           ; switch strategies available:
  7504                           ; Name         Instructions Cycles
  7505                           ; simple_byte            4     3 (average)
  7506                           ; direct_byte            8     6 (fixed)
  7507                           ; jumptable            260     6 (fixed)
  7508                           ;	Chosen strategy is simple_byte
  7509     0D6F  0824               	movf	??_updateLedstripAnimation+1,w
  7510     0D70  3A00               	xorlw	0	; case 0
  7511     0D71  1903               	skipnz
  7512     0D72  2D74               	goto	l6151
  7513     0D73  2DCF               	goto	l5941
  7514     0D74                     l6151:
  7515                           
  7516                           ; Switch size 1, requested type "simple"
  7517                           ; Number of cases is 2, Range of values is 0 to 1
  7518                           ; switch strategies available:
  7519                           ; Name         Instructions Cycles
  7520                           ; simple_byte            7     4 (average)
  7521                           ; direct_byte           10     6 (fixed)
  7522                           ; jumptable            260     6 (fixed)
  7523                           ;	Chosen strategy is simple_byte
  7524     0D74  0823               	movf	??_updateLedstripAnimation,w
  7525     0D75  3A00               	xorlw	0	; case 0
  7526     0D76  1903               	skipnz
  7527     0D77  2D4E               	goto	l5891
  7528     0D78  3A01               	xorlw	1	; case 1
  7529     0D79  1903               	skipnz
  7530     0D7A  2D5F               	goto	l5895
  7531     0D7B  2DCF               	goto	l5941
  7532     0D7C                     l5905:
  7533     0D7C  0021               	movlb	1	; select bank1
  7534     0D7D  0A47               	incf	updateLedstripAnimation@green^(0+128),w
  7535     0D7E  1903               	btfsc	3,2
  7536     0D7F  2D81               	goto	u6091
  7537     0D80  2D82               	goto	u6090
  7538     0D81                     u6091:
  7539     0D81  2D89               	goto	l829
  7540     0D82                     u6090:
  7541     0D82                     l5907:
  7542                           
  7543                           ;ledstrip.c: 76:                 green += 2;
  7544     0D82  3002               	movlw	2
  7545     0D83  0020               	movlb	0	; select bank0
  7546     0D84  00A3               	movwf	??_updateLedstripAnimation
  7547     0D85  0823               	movf	??_updateLedstripAnimation,w
  7548     0D86  0021               	movlb	1	; select bank1
  7549     0D87  07C7               	addwf	updateLedstripAnimation@green^(0+128),f
  7550                           
  7551                           ;ledstrip.c: 77:             } else {
  7552     0D88  2DED               	goto	l5943
  7553     0D89                     l829:
  7554                           
  7555                           ;ledstrip.c: 78:                 change_color = RED_DOWN;
  7556     0D89  01C9               	clrf	updateLedstripAnimation@change_color^(0+128)
  7557     0D8A  0AC9               	incf	updateLedstripAnimation@change_color^(0+128),f
  7558     0D8B  2DED               	goto	l5943
  7559     0D8C                     l5909:
  7560     0D8C  0021               	movlb	1	; select bank1
  7561     0D8D  086D               	movf	updateLedstripAnimation@red^(0+128),w
  7562     0D8E  1903               	btfsc	3,2
  7563     0D8F  2D91               	goto	u6101
  7564     0D90  2D92               	goto	u6100
  7565     0D91                     u6101:
  7566     0D91  2D95               	goto	l5913
  7567     0D92                     u6100:
  7568     0D92                     l5911:
  7569                           
  7570                           ;ledstrip.c: 82:                 red -= 2;
  7571     0D92  3002               	movlw	2
  7572     0D93  02ED               	subwf	updateLedstripAnimation@red^(0+128),f
  7573                           
  7574                           ;ledstrip.c: 83:             } else {
  7575     0D94  2DED               	goto	l5943
  7576     0D95                     l5913:
  7577                           
  7578                           ;ledstrip.c: 84:                 change_color = BLUE_UP;
  7579     0D95  3002               	movlw	2
  7580     0D96  00C9               	movwf	updateLedstripAnimation@change_color^(0+128)
  7581     0D97  2DED               	goto	l5943
  7582     0D98                     l5915:
  7583     0D98  0021               	movlb	1	; select bank1
  7584     0D99  0A48               	incf	updateLedstripAnimation@blue^(0+128),w
  7585     0D9A  1903               	btfsc	3,2
  7586     0D9B  2D9D               	goto	u6111
  7587     0D9C  2D9E               	goto	u6110
  7588     0D9D                     u6111:
  7589     0D9D  2DA5               	goto	l5919
  7590     0D9E                     u6110:
  7591     0D9E                     l5917:
  7592                           
  7593                           ;ledstrip.c: 88:                 blue += 2;
  7594     0D9E  3002               	movlw	2
  7595     0D9F  0020               	movlb	0	; select bank0
  7596     0DA0  00A3               	movwf	??_updateLedstripAnimation
  7597     0DA1  0823               	movf	??_updateLedstripAnimation,w
  7598     0DA2  0021               	movlb	1	; select bank1
  7599     0DA3  07C8               	addwf	updateLedstripAnimation@blue^(0+128),f
  7600                           
  7601                           ;ledstrip.c: 89:             } else {
  7602     0DA4  2DED               	goto	l5943
  7603     0DA5                     l5919:
  7604                           
  7605                           ;ledstrip.c: 90:                 change_color = GREEN_DOWN;
  7606     0DA5  3003               	movlw	3
  7607     0DA6  00C9               	movwf	updateLedstripAnimation@change_color^(0+128)
  7608     0DA7  2DED               	goto	l5943
  7609     0DA8                     l5921:
  7610     0DA8  0021               	movlb	1	; select bank1
  7611     0DA9  0847               	movf	updateLedstripAnimation@green^(0+128),w
  7612     0DAA  1903               	btfsc	3,2
  7613     0DAB  2DAD               	goto	u6121
  7614     0DAC  2DAE               	goto	u6120
  7615     0DAD                     u6121:
  7616     0DAD  2DB1               	goto	l5925
  7617     0DAE                     u6120:
  7618     0DAE                     l5923:
  7619                           
  7620                           ;ledstrip.c: 94:                 green -= 2;
  7621     0DAE  3002               	movlw	2
  7622     0DAF  02C7               	subwf	updateLedstripAnimation@green^(0+128),f
  7623                           
  7624                           ;ledstrip.c: 95:             } else {
  7625     0DB0  2DED               	goto	l5943
  7626     0DB1                     l5925:
  7627                           
  7628                           ;ledstrip.c: 96:                 change_color = RED_UP;
  7629     0DB1  3004               	movlw	4
  7630     0DB2  00C9               	movwf	updateLedstripAnimation@change_color^(0+128)
  7631     0DB3  2DED               	goto	l5943
  7632     0DB4                     l5927:
  7633     0DB4  0021               	movlb	1	; select bank1
  7634     0DB5  0A6D               	incf	updateLedstripAnimation@red^(0+128),w
  7635     0DB6  1903               	btfsc	3,2
  7636     0DB7  2DB9               	goto	u6131
  7637     0DB8  2DBA               	goto	u6130
  7638     0DB9                     u6131:
  7639     0DB9  2DC1               	goto	l5931
  7640     0DBA                     u6130:
  7641     0DBA                     l5929:
  7642                           
  7643                           ;ledstrip.c: 100:                 red += 2;
  7644     0DBA  3002               	movlw	2
  7645     0DBB  0020               	movlb	0	; select bank0
  7646     0DBC  00A3               	movwf	??_updateLedstripAnimation
  7647     0DBD  0823               	movf	??_updateLedstripAnimation,w
  7648     0DBE  0021               	movlb	1	; select bank1
  7649     0DBF  07ED               	addwf	updateLedstripAnimation@red^(0+128),f
  7650                           
  7651                           ;ledstrip.c: 101:             } else {
  7652     0DC0  2DED               	goto	l5943
  7653     0DC1                     l5931:
  7654                           
  7655                           ;ledstrip.c: 102:                 change_color = BLUE_DOWN;
  7656     0DC1  3005               	movlw	5
  7657     0DC2  00C9               	movwf	updateLedstripAnimation@change_color^(0+128)
  7658     0DC3  2DED               	goto	l5943
  7659     0DC4                     l5933:
  7660     0DC4  0021               	movlb	1	; select bank1
  7661     0DC5  0848               	movf	updateLedstripAnimation@blue^(0+128),w
  7662     0DC6  1903               	btfsc	3,2
  7663     0DC7  2DC9               	goto	u6141
  7664     0DC8  2DCA               	goto	u6140
  7665     0DC9                     u6141:
  7666     0DC9  2DCD               	goto	l5937
  7667     0DCA                     u6140:
  7668     0DCA                     l5935:
  7669                           
  7670                           ;ledstrip.c: 106:                 blue -= 2;
  7671     0DCA  3002               	movlw	2
  7672     0DCB  02C8               	subwf	updateLedstripAnimation@blue^(0+128),f
  7673                           
  7674                           ;ledstrip.c: 107:             } else {
  7675     0DCC  2DED               	goto	l5943
  7676     0DCD                     l5937:
  7677                           
  7678                           ;ledstrip.c: 108:                 change_color = GREEN_UP;
  7679     0DCD  01C9               	clrf	updateLedstripAnimation@change_color^(0+128)
  7680     0DCE  2DED               	goto	l5943
  7681     0DCF                     l5941:
  7682     0DCF  0021               	movlb	1	; select bank1
  7683     0DD0  0849               	movf	updateLedstripAnimation@change_color^(0+128),w
  7684     0DD1  0020               	movlb	0	; select bank0
  7685     0DD2  00A3               	movwf	??_updateLedstripAnimation
  7686     0DD3  01A4               	clrf	??_updateLedstripAnimation+1
  7687                           
  7688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7689                           ; Switch size 1, requested type "simple"
  7690                           ; Number of cases is 1, Range of values is 0 to 0
  7691                           ; switch strategies available:
  7692                           ; Name         Instructions Cycles
  7693                           ; simple_byte            4     3 (average)
  7694                           ; direct_byte            8     6 (fixed)
  7695                           ; jumptable            260     6 (fixed)
  7696                           ;	Chosen strategy is simple_byte
  7697     0DD4  0824               	movf	??_updateLedstripAnimation+1,w
  7698     0DD5  3A00               	xorlw	0	; case 0
  7699     0DD6  1903               	skipnz
  7700     0DD7  2DD9               	goto	l6153
  7701     0DD8  2DED               	goto	l5943
  7702     0DD9                     l6153:
  7703                           
  7704                           ; Switch size 1, requested type "simple"
  7705                           ; Number of cases is 6, Range of values is 0 to 5
  7706                           ; switch strategies available:
  7707                           ; Name         Instructions Cycles
  7708                           ; direct_byte           18     6 (fixed)
  7709                           ; simple_byte           19    10 (average)
  7710                           ; jumptable            260     6 (fixed)
  7711                           ;	Chosen strategy is simple_byte
  7712     0DD9  0823               	movf	??_updateLedstripAnimation,w
  7713     0DDA  3A00               	xorlw	0	; case 0
  7714     0DDB  1903               	skipnz
  7715     0DDC  2D7C               	goto	l5905
  7716     0DDD  3A01               	xorlw	1	; case 1
  7717     0DDE  1903               	skipnz
  7718     0DDF  2D8C               	goto	l5909
  7719     0DE0  3A03               	xorlw	3	; case 2
  7720     0DE1  1903               	skipnz
  7721     0DE2  2D98               	goto	l5915
  7722     0DE3  3A01               	xorlw	1	; case 3
  7723     0DE4  1903               	skipnz
  7724     0DE5  2DA8               	goto	l5921
  7725     0DE6  3A07               	xorlw	7	; case 4
  7726     0DE7  1903               	skipnz
  7727     0DE8  2DB4               	goto	l5927
  7728     0DE9  3A01               	xorlw	1	; case 5
  7729     0DEA  1903               	skipnz
  7730     0DEB  2DC4               	goto	l5933
  7731     0DEC  2DED               	goto	l5943
  7732     0DED                     l5943:
  7733                           
  7734                           ;ledstrip.c: 114:     Send_LED_StartFrame();
  7735     0DED  3196  2686  318D   	fcall	_Send_LED_StartFrame
  7736     0DF0                     l5945:
  7737                           
  7738                           ;ledstrip.c: 115:     for (char led = 0; led < 60; led++) {
  7739     0DF0  0020               	movlb	0	; select bank0
  7740     0DF1  01A5               	clrf	updateLedstripAnimation@led
  7741     0DF2                     l5951:
  7742                           
  7743                           ;ledstrip.c: 116:         if (led == led_run) {
  7744     0DF2  0825               	movf	updateLedstripAnimation@led,w
  7745     0DF3  0021               	movlb	1	; select bank1
  7746     0DF4  064A               	xorwf	updateLedstripAnimation@led_run^(0+128),w
  7747     0DF5  1D03               	skipz
  7748     0DF6  2DF8               	goto	u6151
  7749     0DF7  2DF9               	goto	u6150
  7750     0DF8                     u6151:
  7751     0DF8  2E09               	goto	l5955
  7752     0DF9                     u6150:
  7753     0DF9                     l5953:
  7754                           
  7755                           ;ledstrip.c: 117:             Send_LED_Frame(0x1F, blue, green, red);
  7756     0DF9  0848               	movf	updateLedstripAnimation@blue^(0+128),w
  7757     0DFA  0020               	movlb	0	; select bank0
  7758     0DFB  00A0               	movwf	Send_LED_Frame@blue
  7759     0DFC  0021               	movlb	1	; select bank1
  7760     0DFD  0847               	movf	updateLedstripAnimation@green^(0+128),w
  7761     0DFE  0020               	movlb	0	; select bank0
  7762     0DFF  00A1               	movwf	Send_LED_Frame@green
  7763     0E00  0021               	movlb	1	; select bank1
  7764     0E01  086D               	movf	updateLedstripAnimation@red^(0+128),w
  7765     0E02  0020               	movlb	0	; select bank0
  7766     0E03  00A2               	movwf	Send_LED_Frame@red
  7767     0E04  301F               	movlw	31
  7768     0E05  3196  266C  318D   	fcall	_Send_LED_Frame
  7769                           
  7770                           ;ledstrip.c: 118:         } else {
  7771     0E08  2E11               	goto	l5957
  7772     0E09                     l5955:
  7773                           
  7774                           ;ledstrip.c: 119:             Send_LED_Frame(0x00, 0x00, 0x00, 0x00);
  7775     0E09  0020               	movlb	0	; select bank0
  7776     0E0A  01A0               	clrf	Send_LED_Frame@blue
  7777     0E0B  01A1               	clrf	Send_LED_Frame@green
  7778     0E0C  01A2               	clrf	Send_LED_Frame@red
  7779     0E0D  3000               	movlw	0
  7780     0E0E  3196  266C  318D   	fcall	_Send_LED_Frame
  7781     0E11                     l5957:
  7782                           
  7783                           ;ledstrip.c: 121:     }
  7784     0E11  3001               	movlw	1
  7785     0E12  0020               	movlb	0	; select bank0
  7786     0E13  00A3               	movwf	??_updateLedstripAnimation
  7787     0E14  0823               	movf	??_updateLedstripAnimation,w
  7788     0E15  07A5               	addwf	updateLedstripAnimation@led,f
  7789     0E16                     l5959:
  7790     0E16  303C               	movlw	60
  7791     0E17  0225               	subwf	updateLedstripAnimation@led,w
  7792     0E18  1C03               	skipc
  7793     0E19  2E1B               	goto	u6161
  7794     0E1A  2E1C               	goto	u6160
  7795     0E1B                     u6161:
  7796     0E1B  2DF2               	goto	l5951
  7797     0E1C                     u6160:
  7798     0E1C                     l5961:
  7799                           
  7800                           ;ledstrip.c: 123:     Send_LED_EndFrame();
  7801     0E1C  3196  26A0  318D   	fcall	_Send_LED_EndFrame
  7802     0E1F                     l851:
  7803     0E1F  0008               	return
  7804     0E20                     __end_of_updateLedstripAnimation:
  7805                           
  7806                           	psect	text2
  7807     1686                     __ptext2:	
  7808 ;; *************** function _Send_LED_StartFrame *****************
  7809 ;; Defined at:
  7810 ;;		line 35 in file "ledstrip.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  i               2    0[BANK0 ] int 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0, pclath, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;Total ram usage:        3 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 5
  7831 ;; This function calls:
  7832 ;;		_SPI1_ExchangeByte
  7833 ;; This function is called by:
  7834 ;;		_updateLedstripAnimation
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838     1686                     _Send_LED_StartFrame:	
  7839                           ;psect for function _Send_LED_StartFrame
  7840                           
  7841     1686                     l5791:	
  7842                           ;incstack = 0
  7843                           ; Regs used in _Send_LED_StartFrame: [wreg+status,2+status,0+pclath+cstack]
  7844                           
  7845                           
  7846                           ;ledstrip.c: 36:     for (int i = 0; i < 4; i++) {
  7847     1686  0020               	movlb	0	; select bank0
  7848     1687  01A0               	clrf	Send_LED_StartFrame@i
  7849     1688  01A1               	clrf	Send_LED_StartFrame@i+1
  7850     1689                     l5797:
  7851                           
  7852                           ;ledstrip.c: 37:         SPI1_ExchangeByte(0x00);
  7853     1689  01F4               	clrf	SPI1_ExchangeByte@data
  7854     168A  3195  253D  3196   	fcall	_SPI1_ExchangeByte
  7855     168D                     l5799:
  7856                           
  7857                           ;ledstrip.c: 38:     }
  7858     168D  3001               	movlw	1
  7859     168E  0020               	movlb	0	; select bank0
  7860     168F  07A0               	addwf	Send_LED_StartFrame@i,f
  7861     1690  3000               	movlw	0
  7862     1691  3DA1               	addwfc	Send_LED_StartFrame@i+1,f
  7863     1692                     l5801:
  7864     1692  0821               	movf	Send_LED_StartFrame@i+1,w
  7865     1693  3A80               	xorlw	128
  7866     1694  00F5               	movwf	??_Send_LED_StartFrame
  7867     1695  3080               	movlw	128
  7868     1696  0275               	subwf	??_Send_LED_StartFrame,w
  7869     1697  1D03               	skipz
  7870     1698  2E9B               	goto	u6005
  7871     1699  3004               	movlw	4
  7872     169A  0220               	subwf	Send_LED_StartFrame@i,w
  7873     169B                     u6005:
  7874     169B  1C03               	skipc
  7875     169C  2E9E               	goto	u6001
  7876     169D  2E9F               	goto	u6000
  7877     169E                     u6001:
  7878     169E  2E89               	goto	l5797
  7879     169F                     u6000:
  7880     169F                     l796:
  7881     169F  0008               	return
  7882     16A0                     __end_of_Send_LED_StartFrame:
  7883                           
  7884                           	psect	text3
  7885     166C                     __ptext3:	
  7886 ;; *************** function _Send_LED_Frame *****************
  7887 ;; Defined at:
  7888 ;;		line 28 in file "ledstrip.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  intensity       1    wreg     unsigned char 
  7891 ;;  blue            1    0[BANK0 ] unsigned char 
  7892 ;;  green           1    1[BANK0 ] unsigned char 
  7893 ;;  red             1    2[BANK0 ] unsigned char 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  intensity       1    5[COMMON] unsigned char 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, pclath, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7905 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;Total ram usage:        4 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 5
  7912 ;; This function calls:
  7913 ;;		_SPI1_ExchangeByte
  7914 ;; This function is called by:
  7915 ;;		_updateLedstripAnimation
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919     166C                     _Send_LED_Frame:	
  7920                           ;psect for function _Send_LED_Frame
  7921                           
  7922                           
  7923                           ;incstack = 0
  7924                           ; Regs used in _Send_LED_Frame: [wreg+status,2+status,0+pclath+cstack]
  7925                           ;Send_LED_Frame@intensity stored from wreg
  7926     166C  00F5               	movwf	Send_LED_Frame@intensity
  7927     166D                     l5789:
  7928                           
  7929                           ;ledstrip.c: 29:     SPI1_ExchangeByte(0xE0 | intensity);
  7930     166D  0875               	movf	Send_LED_Frame@intensity,w
  7931     166E  38E0               	iorlw	224
  7932     166F  00F4               	movwf	SPI1_ExchangeByte@data
  7933     1670  3195  253D  3196   	fcall	_SPI1_ExchangeByte
  7934                           
  7935                           ;ledstrip.c: 30:     SPI1_ExchangeByte(blue);
  7936     1673  0020               	movlb	0	; select bank0
  7937     1674  0820               	movf	Send_LED_Frame@blue,w
  7938     1675  00F4               	movwf	SPI1_ExchangeByte@data
  7939     1676  3195  253D  3196   	fcall	_SPI1_ExchangeByte
  7940                           
  7941                           ;ledstrip.c: 31:     SPI1_ExchangeByte(green);
  7942     1679  0020               	movlb	0	; select bank0
  7943     167A  0821               	movf	Send_LED_Frame@green,w
  7944     167B  00F4               	movwf	SPI1_ExchangeByte@data
  7945     167C  3195  253D  3196   	fcall	_SPI1_ExchangeByte
  7946                           
  7947                           ;ledstrip.c: 32:     SPI1_ExchangeByte(red);
  7948     167F  0020               	movlb	0	; select bank0
  7949     1680  0822               	movf	Send_LED_Frame@red,w
  7950     1681  00F4               	movwf	SPI1_ExchangeByte@data
  7951     1682  3195  253D  3196   	fcall	_SPI1_ExchangeByte
  7952     1685                     l791:
  7953     1685  0008               	return
  7954     1686                     __end_of_Send_LED_Frame:
  7955                           
  7956                           	psect	text4
  7957     16A0                     __ptext4:	
  7958 ;; *************** function _Send_LED_EndFrame *****************
  7959 ;; Defined at:
  7960 ;;		line 41 in file "ledstrip.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;		None
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  i               2    0[BANK0 ] int 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      void 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0, pclath, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;Total ram usage:        3 bytes
  7979 ;; Hardware stack levels used: 1
  7980 ;; Hardware stack levels required when called: 5
  7981 ;; This function calls:
  7982 ;;		_SPI1_ExchangeByte
  7983 ;; This function is called by:
  7984 ;;		_updateLedstripAnimation
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988     16A0                     _Send_LED_EndFrame:	
  7989                           ;psect for function _Send_LED_EndFrame
  7990                           
  7991     16A0                     l5803:	
  7992                           ;incstack = 0
  7993                           ; Regs used in _Send_LED_EndFrame: [wreg+status,2+status,0+pclath+cstack]
  7994                           
  7995                           
  7996                           ;ledstrip.c: 42:     for (int i = 0; i < 4; i++) {
  7997     16A0  0020               	movlb	0	; select bank0
  7998     16A1  01A0               	clrf	Send_LED_EndFrame@i
  7999     16A2  01A1               	clrf	Send_LED_EndFrame@i+1
  8000     16A3                     l5809:
  8001                           
  8002                           ;ledstrip.c: 43:         SPI1_ExchangeByte(0xFF);
  8003     16A3  30FF               	movlw	255
  8004     16A4  00F4               	movwf	SPI1_ExchangeByte@data
  8005     16A5  3195  253D  3196   	fcall	_SPI1_ExchangeByte
  8006     16A8                     l5811:
  8007                           
  8008                           ;ledstrip.c: 44:     }
  8009     16A8  3001               	movlw	1
  8010     16A9  0020               	movlb	0	; select bank0
  8011     16AA  07A0               	addwf	Send_LED_EndFrame@i,f
  8012     16AB  3000               	movlw	0
  8013     16AC  3DA1               	addwfc	Send_LED_EndFrame@i+1,f
  8014     16AD                     l5813:
  8015     16AD  0821               	movf	Send_LED_EndFrame@i+1,w
  8016     16AE  3A80               	xorlw	128
  8017     16AF  00F5               	movwf	??_Send_LED_EndFrame
  8018     16B0  3080               	movlw	128
  8019     16B1  0275               	subwf	??_Send_LED_EndFrame,w
  8020     16B2  1D03               	skipz
  8021     16B3  2EB6               	goto	u6015
  8022     16B4  3004               	movlw	4
  8023     16B5  0220               	subwf	Send_LED_EndFrame@i,w
  8024     16B6                     u6015:
  8025     16B6  1C03               	skipc
  8026     16B7  2EB9               	goto	u6011
  8027     16B8  2EBA               	goto	u6010
  8028     16B9                     u6011:
  8029     16B9  2EA3               	goto	l5809
  8030     16BA                     u6010:
  8031     16BA                     l801:
  8032     16BA  0008               	return
  8033     16BB                     __end_of_Send_LED_EndFrame:
  8034                           
  8035                           	psect	text5
  8036     153D                     __ptext5:	
  8037 ;; *************** function _SPI1_ExchangeByte *****************
  8038 ;; Defined at:
  8039 ;;		line 98 in file "mcc_generated_files/spi1.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  data            1    4[COMMON] unsigned char 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      unsigned char 
  8046 ;; Registers used:
  8047 ;;		wreg
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;Total ram usage:        1 bytes
  8058 ;; Hardware stack levels used: 1
  8059 ;; Hardware stack levels required when called: 4
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_Send_LED_Frame
  8064 ;;		_Send_LED_StartFrame
  8065 ;;		_Send_LED_EndFrame
  8066 ;;		_SPI1_WriteBlock
  8067 ;;		_SPI1_ReadBlock
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071     153D                     _SPI1_ExchangeByte:	
  8072                           ;psect for function _SPI1_ExchangeByte
  8073                           
  8074     153D                     l5227:	
  8075                           ;incstack = 0
  8076                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  8077                           
  8078                           
  8079                           ;mcc_generated_files/spi1.c: 98: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 99: {;mcc_generated_files/spi1.c: 100:     SSP1BUF = data;
  8080     153D  0874               	movf	SPI1_ExchangeByte@data,w
  8081     153E  0024               	movlb	4	; select bank4
  8082     153F  0091               	movwf	17	;volatile
  8083     1540                     l526:	
  8084                           ;mcc_generated_files/spi1.c: 101:     while(!PIR1bits.SSP1IF);
  8085                           
  8086     1540  0020               	movlb	0	; select bank0
  8087     1541  1D91               	btfss	17,3	;volatile
  8088     1542  2D44               	goto	u5011
  8089     1543  2D45               	goto	u5010
  8090     1544                     u5011:
  8091     1544  2D40               	goto	l526
  8092     1545                     u5010:
  8093     1545                     l528:
  8094                           
  8095                           ;mcc_generated_files/spi1.c: 102:     PIR1bits.SSP1IF = 0;
  8096     1545  1191               	bcf	17,3	;volatile
  8097     1546                     l5229:
  8098                           
  8099                           ;mcc_generated_files/spi1.c: 103:     return SSP1BUF;
  8100     1546  0024               	movlb	4	; select bank4
  8101     1547  0811               	movf	17,w	;volatile
  8102     1548                     l529:
  8103     1548  0008               	return
  8104     1549                     __end_of_SPI1_ExchangeByte:
  8105                           
  8106                           	psect	text6
  8107     0663                     __ptext6:	
  8108 ;; *************** function _uartHandler *****************
  8109 ;; Defined at:
  8110 ;;		line 156 in file "UART.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  str             1   78[BANK0 ] PTR unsigned char 
  8115 ;;		 -> line(20), 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;Total ram usage:        5 bytes
  8130 ;; Hardware stack levels used: 1
  8131 ;; Hardware stack levels required when called: 11
  8132 ;; This function calls:
  8133 ;;		_PI_GetKi
  8134 ;;		_PI_GetKp
  8135 ;;		_PI_GetSetPoint
  8136 ;;		_PI_SetKi
  8137 ;;		_PI_SetKp
  8138 ;;		_PI_SetSetpoint
  8139 ;;		_printFloat
  8140 ;;		_printNewLine
  8141 ;;		_printStr
  8142 ;;		_printUint32
  8143 ;;		_printf
  8144 ;;		_readLine
  8145 ;;		_str2float
  8146 ;;		_str2uint8
  8147 ;; This function is called by:
  8148 ;;		_main
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152     0663                     _uartHandler:	
  8153                           ;psect for function _uartHandler
  8154                           
  8155     0663                     l5845:	
  8156                           ;incstack = 0
  8157                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8158                           
  8159                           
  8160                           ;UART.c: 157:     char * str = readLine();
  8161     0663  3189  217C  3186   	fcall	_readLine
  8162     0666  0020               	movlb	0	; select bank0
  8163     0667  00EE               	movwf	uartHandler@str
  8164                           
  8165                           ;UART.c: 158:     switch (*str) {
  8166     0668  2F39               	goto	l5879
  8167     0669                     l5847:
  8168                           
  8169                           ;UART.c: 163:             PI_SetSetpoint(str2uint8(str + 1));
  8170     0669  0020               	movlb	0	; select bank0
  8171     066A  086E               	movf	uartHandler@str,w
  8172     066B  3E01               	addlw	1
  8173     066C  3188  2061  3186   	fcall	_str2uint8
  8174     066F  3194  2471  3186   	fcall	_PI_SetSetpoint
  8175     0672                     l5849:
  8176                           
  8177                           ;UART.c: 164:             printf("setpoint ");
  8178     0672  307F               	movlw	low (STR_12| (0+32768))
  8179     0673  0020               	movlb	0	; select bank0
  8180     0674  00BA               	movwf	printf@fmt
  8181     0675  3098               	movlw	high (STR_12| (0+32768))
  8182     0676  00BB               	movwf	printf@fmt+1
  8183     0677  3195  258B  3186   	fcall	_printf
  8184     067A                     l5851:
  8185                           
  8186                           ;UART.c: 165:             printUint32(PI_GetSetPoint(), 0);
  8187     067A  3194  2457  3186   	fcall	_PI_GetSetPoint
  8188     067D  0021               	movlb	1	; select bank1
  8189     067E  00E0               	movwf	??_uartHandler^(0+128)
  8190     067F  01E1               	clrf	(??_uartHandler^(0+128)+1)
  8191     0680  01E2               	clrf	(??_uartHandler^(0+128)+2)
  8192     0681  01E3               	clrf	(??_uartHandler^(0+128)+3)
  8193     0682  0863               	movf	(??_uartHandler+3)^(0+128),w
  8194     0683  0020               	movlb	0	; select bank0
  8195     0684  00B0               	movwf	printUint32@getal+3
  8196     0685  0021               	movlb	1	; select bank1
  8197     0686  0862               	movf	(??_uartHandler+2)^(0+128),w
  8198     0687  0020               	movlb	0	; select bank0
  8199     0688  00AF               	movwf	printUint32@getal+2
  8200     0689  0021               	movlb	1	; select bank1
  8201     068A  0861               	movf	(??_uartHandler+1)^(0+128),w
  8202     068B  0020               	movlb	0	; select bank0
  8203     068C  00AE               	movwf	printUint32@getal+1
  8204     068D  0021               	movlb	1	; select bank1
  8205     068E  0860               	movf	??_uartHandler^(0+128),w
  8206     068F  0020               	movlb	0	; select bank0
  8207     0690  00AD               	movwf	printUint32@getal
  8208     0691  01B1               	clrf	printUint32@leadingZeros
  8209     0692  318A  22ED  3186   	fcall	_printUint32
  8210     0695                     l5853:
  8211                           
  8212                           ;UART.c: 166:             printNewLine();
  8213     0695  3194  24C9  3186   	fcall	_printNewLine
  8214     0698                     l5855:
  8215                           
  8216                           ;UART.c: 167:             printf("Command not supported. ");
  8217     0698  3008               	movlw	low (STR_13| (0+32768))
  8218     0699  0020               	movlb	0	; select bank0
  8219     069A  00BA               	movwf	printf@fmt
  8220     069B  3098               	movlw	high (STR_13| (0+32768))
  8221     069C  00BB               	movwf	printf@fmt+1
  8222     069D  3195  258B  3186   	fcall	_printf
  8223                           
  8224                           ;UART.c: 168:             break;
  8225     06A0  2F63               	goto	l745
  8226     06A1                     l5857:
  8227                           
  8228                           ;UART.c: 171:             PI_SetKp(str2float(str + 1));
  8229     06A1  0020               	movlb	0	; select bank0
  8230     06A2  086E               	movf	uartHandler@str,w
  8231     06A3  3E01               	addlw	1
  8232     06A4  318F  2708  3186   	fcall	_str2float
  8233     06A7  0020               	movlb	0	; select bank0
  8234     06A8  0867               	movf	?_str2float+3,w
  8235     06A9  0021               	movlb	1	; select bank1
  8236     06AA  00DF               	movwf	(PI_SetKp@value+3)^(0+128)
  8237     06AB  0020               	movlb	0	; select bank0
  8238     06AC  0866               	movf	?_str2float+2,w
  8239     06AD  0021               	movlb	1	; select bank1
  8240     06AE  00DE               	movwf	(PI_SetKp@value+2)^(0+128)
  8241     06AF  0020               	movlb	0	; select bank0
  8242     06B0  0865               	movf	?_str2float+1,w
  8243     06B1  0021               	movlb	1	; select bank1
  8244     06B2  00DD               	movwf	(PI_SetKp@value+1)^(0+128)
  8245     06B3  0020               	movlb	0	; select bank0
  8246     06B4  0864               	movf	?_str2float,w
  8247     06B5  0021               	movlb	1	; select bank1
  8248     06B6  00DC               	movwf	PI_SetKp@value^(0+128)
  8249     06B7  3194  24F9  3186   	fcall	_PI_SetKp
  8250     06BA                     l5859:
  8251                           
  8252                           ;UART.c: 172:             printf("Kp ");
  8253     06BA  30A9               	movlw	low (STR_14| (0+32768))
  8254     06BB  0020               	movlb	0	; select bank0
  8255     06BC  00BA               	movwf	printf@fmt
  8256     06BD  3098               	movlw	high (STR_14| (0+32768))
  8257     06BE  00BB               	movwf	printf@fmt+1
  8258     06BF  3195  258B  3186   	fcall	_printf
  8259     06C2                     l5861:
  8260                           
  8261                           ;UART.c: 173:             printFloat(PI_GetKp());
  8262     06C2  3195  25BC  3186   	fcall	_PI_GetKp
  8263     06C5  0020               	movlb	0	; select bank0
  8264     06C6  0823               	movf	?_PI_GetKp+3,w
  8265     06C7  0021               	movlb	1	; select bank1
  8266     06C8  00D5               	movwf	(printFloat@value+3)^(0+128)
  8267     06C9  0020               	movlb	0	; select bank0
  8268     06CA  0822               	movf	?_PI_GetKp+2,w
  8269     06CB  0021               	movlb	1	; select bank1
  8270     06CC  00D4               	movwf	(printFloat@value+2)^(0+128)
  8271     06CD  0020               	movlb	0	; select bank0
  8272     06CE  0821               	movf	?_PI_GetKp+1,w
  8273     06CF  0021               	movlb	1	; select bank1
  8274     06D0  00D3               	movwf	(printFloat@value+1)^(0+128)
  8275     06D1  0020               	movlb	0	; select bank0
  8276     06D2  0820               	movf	?_PI_GetKp,w
  8277     06D3  0021               	movlb	1	; select bank1
  8278     06D4  00D2               	movwf	printFloat@value^(0+128)
  8279     06D5  318B  234F  3186   	fcall	_printFloat
  8280                           
  8281                           ;UART.c: 174:             printNewLine();
  8282     06D8  3194  24C9  3186   	fcall	_printNewLine
  8283                           
  8284                           ;UART.c: 175:             break;
  8285     06DB  2F63               	goto	l745
  8286     06DC                     l5863:
  8287                           
  8288                           ;UART.c: 178:             PI_SetKi(str2float(str + 1));
  8289     06DC  0020               	movlb	0	; select bank0
  8290     06DD  086E               	movf	uartHandler@str,w
  8291     06DE  3E01               	addlw	1
  8292     06DF  318F  2708  3186   	fcall	_str2float
  8293     06E2  0020               	movlb	0	; select bank0
  8294     06E3  0867               	movf	?_str2float+3,w
  8295     06E4  0021               	movlb	1	; select bank1
  8296     06E5  00DF               	movwf	(PI_SetKi@value+3)^(0+128)
  8297     06E6  0020               	movlb	0	; select bank0
  8298     06E7  0866               	movf	?_str2float+2,w
  8299     06E8  0021               	movlb	1	; select bank1
  8300     06E9  00DE               	movwf	(PI_SetKi@value+2)^(0+128)
  8301     06EA  0020               	movlb	0	; select bank0
  8302     06EB  0865               	movf	?_str2float+1,w
  8303     06EC  0021               	movlb	1	; select bank1
  8304     06ED  00DD               	movwf	(PI_SetKi@value+1)^(0+128)
  8305     06EE  0020               	movlb	0	; select bank0
  8306     06EF  0864               	movf	?_str2float,w
  8307     06F0  0021               	movlb	1	; select bank1
  8308     06F1  00DC               	movwf	PI_SetKi@value^(0+128)
  8309     06F2  3194  24EF  3186   	fcall	_PI_SetKi
  8310     06F5                     l5865:
  8311                           
  8312                           ;UART.c: 179:             printf("Ki ");
  8313     06F5  30A5               	movlw	low (STR_15| (0+32768))
  8314     06F6  0020               	movlb	0	; select bank0
  8315     06F7  00BA               	movwf	printf@fmt
  8316     06F8  3098               	movlw	high (STR_15| (0+32768))
  8317     06F9  00BB               	movwf	printf@fmt+1
  8318     06FA  3195  258B  3186   	fcall	_printf
  8319     06FD                     l5867:
  8320                           
  8321                           ;UART.c: 180:             printFloat(PI_GetKi());
  8322     06FD  3195  25AB  3186   	fcall	_PI_GetKi
  8323     0700  0020               	movlb	0	; select bank0
  8324     0701  0823               	movf	?_PI_GetKi+3,w
  8325     0702  0021               	movlb	1	; select bank1
  8326     0703  00D5               	movwf	(printFloat@value+3)^(0+128)
  8327     0704  0020               	movlb	0	; select bank0
  8328     0705  0822               	movf	?_PI_GetKi+2,w
  8329     0706  0021               	movlb	1	; select bank1
  8330     0707  00D4               	movwf	(printFloat@value+2)^(0+128)
  8331     0708  0020               	movlb	0	; select bank0
  8332     0709  0821               	movf	?_PI_GetKi+1,w
  8333     070A  0021               	movlb	1	; select bank1
  8334     070B  00D3               	movwf	(printFloat@value+1)^(0+128)
  8335     070C  0020               	movlb	0	; select bank0
  8336     070D  0820               	movf	?_PI_GetKi,w
  8337     070E  0021               	movlb	1	; select bank1
  8338     070F  00D2               	movwf	printFloat@value^(0+128)
  8339     0710  318B  234F  3186   	fcall	_printFloat
  8340                           
  8341                           ;UART.c: 181:             printNewLine();
  8342     0713  3194  24C9  3186   	fcall	_printNewLine
  8343                           
  8344                           ;UART.c: 182:             break;
  8345     0716  2F63               	goto	l745
  8346     0717                     l5869:
  8347                           
  8348                           ;UART.c: 185:             mustPrintLogs = !mustPrintLogs;
  8349     0717  086E               	movf	_mustPrintLogs^(0+128),w
  8350     0718  1903               	btfsc	3,2
  8351     0719  2F1B               	goto	u6051
  8352     071A  2F1D               	goto	u6050
  8353     071B                     u6051:
  8354     071B  3001               	movlw	1
  8355     071C  2F1E               	goto	u6060
  8356     071D                     u6050:
  8357     071D  3000               	movlw	0
  8358     071E                     u6060:
  8359     071E  00EE               	movwf	_mustPrintLogs^(0+128)
  8360     071F                     l5871:
  8361                           
  8362                           ;UART.c: 186:             printf("logs toggled");
  8363     071F  3066               	movlw	low (STR_16| (0+32768))
  8364     0720  0020               	movlb	0	; select bank0
  8365     0721  00BA               	movwf	printf@fmt
  8366     0722  3098               	movlw	high (STR_16| (0+32768))
  8367     0723  00BB               	movwf	printf@fmt+1
  8368     0724  3195  258B  3186   	fcall	_printf
  8369     0727                     l5873:
  8370                           
  8371                           ;UART.c: 187:             printNewLine();
  8372     0727  3194  24C9  3186   	fcall	_printNewLine
  8373                           
  8374                           ;UART.c: 188:             break;
  8375     072A  2F63               	goto	l745
  8376     072B                     l5875:
  8377                           
  8378                           ;UART.c: 190:             printf("Command not supported. ");
  8379     072B  3008               	movlw	low (STR_13| (0+32768))
  8380     072C  0020               	movlb	0	; select bank0
  8381     072D  00BA               	movwf	printf@fmt
  8382     072E  3098               	movlw	high (STR_13| (0+32768))
  8383     072F  00BB               	movwf	printf@fmt+1
  8384     0730  3195  258B  3186   	fcall	_printf
  8385     0733                     l5877:
  8386                           
  8387                           ;UART.c: 191:             printStr(str);
  8388     0733  0020               	movlb	0	; select bank0
  8389     0734  086E               	movf	uartHandler@str,w
  8390     0735  3196  2652  3186   	fcall	_printStr
  8391                           
  8392                           ;UART.c: 192:     };
  8393     0738  2F63               	goto	l745
  8394     0739                     l5879:
  8395     0739  086E               	movf	uartHandler@str,w
  8396     073A  0086               	movwf	6
  8397     073B  3001               	movlw	1	; select bank2/3
  8398     073C  0087               	movwf	7
  8399     073D  0801               	movf	1,w
  8400     073E  0021               	movlb	1	; select bank1
  8401     073F  00E0               	movwf	??_uartHandler^(0+128)
  8402     0740  01E1               	clrf	(??_uartHandler^(0+128)+1)
  8403                           
  8404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8405                           ; Switch size 1, requested type "simple"
  8406                           ; Number of cases is 1, Range of values is 0 to 0
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte            4     3 (average)
  8410                           ; direct_byte            8     6 (fixed)
  8411                           ; jumptable            260     6 (fixed)
  8412                           ;	Chosen strategy is simple_byte
  8413     0741  0861               	movf	(??_uartHandler+1)^(0+128),w
  8414     0742  3A00               	xorlw	0	; case 0
  8415     0743  1903               	skipnz
  8416     0744  2F46               	goto	l6155
  8417     0745  2F2B               	goto	l5875
  8418     0746                     l6155:
  8419                           
  8420                           ; Switch size 1, requested type "simple"
  8421                           ; Number of cases is 9, Range of values is 0 to 115
  8422                           ; switch strategies available:
  8423                           ; Name         Instructions Cycles
  8424                           ; simple_byte           28    15 (average)
  8425                           ; direct_byte          238     6 (fixed)
  8426                           ; jumptable            260     6 (fixed)
  8427                           ;	Chosen strategy is simple_byte
  8428     0746  0860               	movf	??_uartHandler^(0+128),w
  8429     0747  3A00               	xorlw	0	; case 0
  8430     0748  1903               	skipnz
  8431     0749  2F63               	goto	l745
  8432     074A  3A49               	xorlw	73	; case 73
  8433     074B  1903               	skipnz
  8434     074C  2EDC               	goto	l5863
  8435     074D  3A05               	xorlw	5	; case 76
  8436     074E  1903               	skipnz
  8437     074F  2F17               	goto	l5869
  8438     0750  3A1C               	xorlw	28	; case 80
  8439     0751  1903               	skipnz
  8440     0752  2EA1               	goto	l5857
  8441     0753  3A03               	xorlw	3	; case 83
  8442     0754  1903               	skipnz
  8443     0755  2E69               	goto	l5847
  8444     0756  3A3A               	xorlw	58	; case 105
  8445     0757  1903               	skipnz
  8446     0758  2EDC               	goto	l5863
  8447     0759  3A05               	xorlw	5	; case 108
  8448     075A  1903               	skipnz
  8449     075B  2F17               	goto	l5869
  8450     075C  3A1C               	xorlw	28	; case 112
  8451     075D  1903               	skipnz
  8452     075E  2EA1               	goto	l5857
  8453     075F  3A03               	xorlw	3	; case 115
  8454     0760  1903               	skipnz
  8455     0761  2E69               	goto	l5847
  8456     0762  2F2B               	goto	l5875
  8457     0763                     l745:
  8458     0763  0008               	return
  8459     0764                     __end_of_uartHandler:
  8460                           
  8461                           	psect	text7
  8462     0861                     __ptext7:	
  8463 ;; *************** function _str2uint8 *****************
  8464 ;; Defined at:
  8465 ;;		line 64 in file "UART.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  str             1    wreg     PTR unsigned char 
  8468 ;;		 -> line(20), 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  str             1    3[BANK0 ] PTR unsigned char 
  8471 ;;		 -> line(20), 
  8472 ;;  cijfer          1    6[BANK0 ] unsigned char 
  8473 ;;  i               2    4[BANK0 ] int 
  8474 ;;  getal           1    7[BANK0 ] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      unsigned char 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;Total ram usage:        6 bytes
  8489 ;; Hardware stack levels used: 1
  8490 ;; Hardware stack levels required when called: 5
  8491 ;; This function calls:
  8492 ;;		___bmul
  8493 ;; This function is called by:
  8494 ;;		_uartHandler
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498     0861                     _str2uint8:	
  8499                           ;psect for function _str2uint8
  8500                           
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in _str2uint8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8504                           ;str2uint8@str stored from wreg
  8505     0861  0020               	movlb	0	; select bank0
  8506     0862  00A3               	movwf	str2uint8@str
  8507     0863                     l5717:
  8508                           
  8509                           ;UART.c: 65:     uint8_t getal = 0;
  8510     0863  01A7               	clrf	str2uint8@getal
  8511                           
  8512                           ;UART.c: 66:     for (int i = 0; i < 3; i++) {
  8513     0864  01A4               	clrf	str2uint8@i
  8514     0865  01A5               	clrf	str2uint8@i+1
  8515     0866                     l5723:
  8516                           
  8517                           ;UART.c: 67:         char cijfer = *str++;
  8518     0866  0020               	movlb	0	; select bank0
  8519     0867  0823               	movf	str2uint8@str,w
  8520     0868  0086               	movwf	6
  8521     0869  3001               	movlw	1	; select bank2/3
  8522     086A  0087               	movwf	7
  8523     086B  0801               	movf	1,w
  8524     086C  00A6               	movwf	str2uint8@cijfer
  8525     086D                     l5725:
  8526     086D  3001               	movlw	1
  8527     086E  00A2               	movwf	??_str2uint8
  8528     086F  0822               	movf	??_str2uint8,w
  8529     0870  07A3               	addwf	str2uint8@str,f
  8530     0871                     l5727:
  8531                           
  8532                           ;UART.c: 68:         if ('0' <= cijfer && cijfer <= '9') {
  8533     0871  3030               	movlw	48
  8534     0872  0226               	subwf	str2uint8@cijfer,w
  8535     0873  1C03               	skipc
  8536     0874  2876               	goto	u5911
  8537     0875  2877               	goto	u5910
  8538     0876                     u5911:
  8539     0876  288B               	goto	l5735
  8540     0877                     u5910:
  8541     0877                     l5729:
  8542     0877  303A               	movlw	58
  8543     0878  0226               	subwf	str2uint8@cijfer,w
  8544     0879  1803               	skipnc
  8545     087A  287C               	goto	u5921
  8546     087B  287D               	goto	u5920
  8547     087C                     u5921:
  8548     087C  288B               	goto	l5735
  8549     087D                     u5920:
  8550     087D                     l5731:
  8551                           
  8552                           ;UART.c: 69:             getal *= 10;
  8553     087D  0827               	movf	str2uint8@getal,w
  8554     087E  00F4               	movwf	___bmul@multiplicand
  8555     087F  300A               	movlw	10
  8556     0880  3195  25F3  3188   	fcall	___bmul
  8557     0883  0020               	movlb	0	; select bank0
  8558     0884  00A7               	movwf	str2uint8@getal
  8559     0885                     l5733:
  8560                           
  8561                           ;UART.c: 71:             getal += cijfer - '0';
  8562     0885  0826               	movf	str2uint8@cijfer,w
  8563     0886  3ED0               	addlw	208
  8564     0887  00A2               	movwf	??_str2uint8
  8565     0888  0822               	movf	??_str2uint8,w
  8566     0889  07A7               	addwf	str2uint8@getal,f
  8567                           
  8568                           ;UART.c: 72:         } else {
  8569     088A  288E               	goto	l5739
  8570     088B                     l5735:
  8571                           
  8572                           ;UART.c: 73:             return getal;
  8573     088B  0020               	movlb	0	; select bank0
  8574     088C  0827               	movf	str2uint8@getal,w
  8575     088D  28A0               	goto	l694
  8576     088E                     l5739:
  8577                           
  8578                           ;UART.c: 75:     }
  8579     088E  3001               	movlw	1
  8580     088F  07A4               	addwf	str2uint8@i,f
  8581     0890  3000               	movlw	0
  8582     0891  3DA5               	addwfc	str2uint8@i+1,f
  8583     0892  0825               	movf	str2uint8@i+1,w
  8584     0893  3A80               	xorlw	128
  8585     0894  00A2               	movwf	??_str2uint8
  8586     0895  3080               	movlw	128
  8587     0896  0222               	subwf	??_str2uint8,w
  8588     0897  1D03               	skipz
  8589     0898  289B               	goto	u5935
  8590     0899  3003               	movlw	3
  8591     089A  0224               	subwf	str2uint8@i,w
  8592     089B                     u5935:
  8593     089B  1C03               	skipc
  8594     089C  289E               	goto	u5931
  8595     089D  289F               	goto	u5930
  8596     089E                     u5931:
  8597     089E  2866               	goto	l5723
  8598     089F                     u5930:
  8599     089F  288B               	goto	l5735
  8600     08A0                     l694:
  8601     08A0  0008               	return
  8602     08A1                     __end_of_str2uint8:
  8603                           
  8604                           	psect	text8
  8605     15F3                     __ptext8:	
  8606 ;; *************** function ___bmul *****************
  8607 ;; Defined at:
  8608 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  multiplier      1    wreg     unsigned char 
  8611 ;;  multiplicand    1    4[COMMON] unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  multiplier      1    1[BANK0 ] unsigned char 
  8614 ;;  product         1    0[BANK0 ] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      unsigned char 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;Total ram usage:        4 bytes
  8629 ;; Hardware stack levels used: 1
  8630 ;; Hardware stack levels required when called: 4
  8631 ;; This function calls:
  8632 ;;		Nothing
  8633 ;; This function is called by:
  8634 ;;		_str2uint8
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638     15F3                     ___bmul:	
  8639                           ;psect for function ___bmul
  8640                           
  8641                           
  8642                           ;incstack = 0
  8643                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8644                           ;___bmul@multiplier stored from wreg
  8645     15F3  0020               	movlb	0	; select bank0
  8646     15F4  00A1               	movwf	___bmul@multiplier
  8647     15F5                     l5265:
  8648     15F5  01A0               	clrf	___bmul@product
  8649     15F6                     l5267:
  8650     15F6  1C21               	btfss	___bmul@multiplier,0
  8651     15F7  2DF9               	goto	u5051
  8652     15F8  2DFA               	goto	u5050
  8653     15F9                     u5051:
  8654     15F9  2DFE               	goto	l5271
  8655     15FA                     u5050:
  8656     15FA                     l5269:
  8657     15FA  0874               	movf	___bmul@multiplicand,w
  8658     15FB  00F5               	movwf	??___bmul
  8659     15FC  0875               	movf	??___bmul,w
  8660     15FD  07A0               	addwf	___bmul@product,f
  8661     15FE                     l5271:
  8662     15FE  1003               	clrc
  8663     15FF  0DF4               	rlf	___bmul@multiplicand,f
  8664     1600                     l5273:
  8665     1600  1003               	clrc
  8666     1601  0CA1               	rrf	___bmul@multiplier,f
  8667     1602  0821               	movf	___bmul@multiplier,w
  8668     1603  1D03               	btfss	3,2
  8669     1604  2E06               	goto	u5061
  8670     1605  2E07               	goto	u5060
  8671     1606                     u5061:
  8672     1606  2DF6               	goto	l5267
  8673     1607                     u5060:
  8674     1607                     l5275:
  8675     1607  0820               	movf	___bmul@product,w
  8676     1608                     l1057:
  8677     1608  0008               	return
  8678     1609                     __end_of___bmul:
  8679                           
  8680                           	psect	text9
  8681     0F08                     __ptext9:	
  8682 ;; *************** function _str2float *****************
  8683 ;; Defined at:
  8684 ;;		line 81 in file "UART.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  str             1    wreg     PTR unsigned char 
  8687 ;;		 -> line(20), 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  str             1    4[BANK1 ] PTR unsigned char 
  8690 ;;		 -> line(20), 
  8691 ;;  i               2    0[BANK1 ] int 
  8692 ;;  cijfer          1    9[BANK1 ] unsigned char 
  8693 ;;  getal           4    5[BANK1 ] float 
  8694 ;;  kommaCounter    1    3[BANK1 ] unsigned char 
  8695 ;;  kommaPresent    1    2[BANK1 ] _Bool 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  4   68[BANK0 ] float 
  8698 ;; Registers used:
  8699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8706 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8708 ;;      Totals:         0       5      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8709 ;;Total ram usage:       15 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; Hardware stack levels required when called: 6
  8712 ;; This function calls:
  8713 ;;		___fladd
  8714 ;;		___fldiv
  8715 ;;		___flmul
  8716 ;;		___xxtofl
  8717 ;; This function is called by:
  8718 ;;		_uartHandler
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722     0F08                     _str2float:	
  8723                           ;psect for function _str2float
  8724                           
  8725                           
  8726                           ;incstack = 0
  8727                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8728                           ;str2float@str stored from wreg
  8729     0F08  0021               	movlb	1	; select bank1
  8730     0F09  00D6               	movwf	str2float@str^(0+128)
  8731     0F0A                     l5745:
  8732                           
  8733                           ;UART.c: 82:     float getal = 0;
  8734     0F0A  3000               	movlw	0
  8735     0F0B  00DA               	movwf	(str2float@getal+3)^(0+128)
  8736     0F0C  3000               	movlw	0
  8737     0F0D  00D9               	movwf	(str2float@getal+2)^(0+128)
  8738     0F0E  3000               	movlw	0
  8739     0F0F  00D8               	movwf	(str2float@getal+1)^(0+128)
  8740     0F10  3000               	movlw	0
  8741     0F11  00D7               	movwf	str2float@getal^(0+128)
  8742     0F12                     l5747:
  8743                           
  8744                           ;UART.c: 83:     _Bool kommaPresent = 0;
  8745     0F12  01D4               	clrf	str2float@kommaPresent^(0+128)
  8746     0F13                     l5749:
  8747                           
  8748                           ;UART.c: 86:         char cijfer = *str++;
  8749     0F13  0856               	movf	str2float@str^(0+128),w
  8750     0F14  0086               	movwf	6
  8751     0F15  3001               	movlw	1	; select bank2/3
  8752     0F16  0087               	movwf	7
  8753     0F17  0801               	movf	1,w
  8754     0F18  00DB               	movwf	str2float@cijfer^(0+128)
  8755     0F19                     l5751:
  8756     0F19  3001               	movlw	1
  8757     0F1A  0020               	movlb	0	; select bank0
  8758     0F1B  00E8               	movwf	??_str2float
  8759     0F1C  0868               	movf	??_str2float,w
  8760     0F1D  0021               	movlb	1	; select bank1
  8761     0F1E  07D6               	addwf	str2float@str^(0+128),f
  8762     0F1F                     l5753:
  8763                           
  8764                           ;UART.c: 87:         if ('0' <= cijfer && cijfer <= '9') {
  8765     0F1F  3030               	movlw	48
  8766     0F20  025B               	subwf	str2float@cijfer^(0+128),w
  8767     0F21  1C03               	skipc
  8768     0F22  2F24               	goto	u5941
  8769     0F23  2F25               	goto	u5940
  8770     0F24                     u5941:
  8771     0F24  2F98               	goto	l5761
  8772     0F25                     u5940:
  8773     0F25                     l5755:
  8774     0F25  303A               	movlw	58
  8775     0F26  025B               	subwf	str2float@cijfer^(0+128),w
  8776     0F27  1803               	skipnc
  8777     0F28  2F2A               	goto	u5951
  8778     0F29  2F2B               	goto	u5950
  8779     0F2A                     u5951:
  8780     0F2A  2F98               	goto	l5761
  8781     0F2B                     u5950:
  8782     0F2B                     l5757:
  8783                           
  8784                           ;UART.c: 88:             getal *= 10;
  8785     0F2B  3041               	movlw	65
  8786     0F2C  0020               	movlb	0	; select bank0
  8787     0F2D  00CD               	movwf	___flmul@b+3
  8788     0F2E  3020               	movlw	32
  8789     0F2F  00CC               	movwf	___flmul@b+2
  8790     0F30  3000               	movlw	0
  8791     0F31  00CB               	movwf	___flmul@b+1
  8792     0F32  3000               	movlw	0
  8793     0F33  00CA               	movwf	___flmul@b
  8794     0F34  0021               	movlb	1	; select bank1
  8795     0F35  085A               	movf	(str2float@getal+3)^(0+128),w
  8796     0F36  0020               	movlb	0	; select bank0
  8797     0F37  00D1               	movwf	___flmul@a+3
  8798     0F38  0021               	movlb	1	; select bank1
  8799     0F39  0859               	movf	(str2float@getal+2)^(0+128),w
  8800     0F3A  0020               	movlb	0	; select bank0
  8801     0F3B  00D0               	movwf	___flmul@a+2
  8802     0F3C  0021               	movlb	1	; select bank1
  8803     0F3D  0858               	movf	(str2float@getal+1)^(0+128),w
  8804     0F3E  0020               	movlb	0	; select bank0
  8805     0F3F  00CF               	movwf	___flmul@a+1
  8806     0F40  0021               	movlb	1	; select bank1
  8807     0F41  0857               	movf	str2float@getal^(0+128),w
  8808     0F42  0020               	movlb	0	; select bank0
  8809     0F43  00CE               	movwf	___flmul@a
  8810     0F44  3180  2076  318F   	fcall	___flmul
  8811     0F47  0020               	movlb	0	; select bank0
  8812     0F48  084D               	movf	?___flmul+3,w
  8813     0F49  0021               	movlb	1	; select bank1
  8814     0F4A  00DA               	movwf	(str2float@getal+3)^(0+128)
  8815     0F4B  0020               	movlb	0	; select bank0
  8816     0F4C  084C               	movf	?___flmul+2,w
  8817     0F4D  0021               	movlb	1	; select bank1
  8818     0F4E  00D9               	movwf	(str2float@getal+2)^(0+128)
  8819     0F4F  0020               	movlb	0	; select bank0
  8820     0F50  084B               	movf	?___flmul+1,w
  8821     0F51  0021               	movlb	1	; select bank1
  8822     0F52  00D8               	movwf	(str2float@getal+1)^(0+128)
  8823     0F53  0020               	movlb	0	; select bank0
  8824     0F54  084A               	movf	?___flmul,w
  8825     0F55  0021               	movlb	1	; select bank1
  8826     0F56  00D7               	movwf	str2float@getal^(0+128)
  8827                           
  8828                           ;UART.c: 89:             getal += cijfer - '0';
  8829     0F57  085B               	movf	str2float@cijfer^(0+128),w
  8830     0F58  3ED0               	addlw	208
  8831     0F59  0020               	movlb	0	; select bank0
  8832     0F5A  00A0               	movwf	___xxtofl@val
  8833     0F5B  30FF               	movlw	255
  8834     0F5C  1803               	skipnc
  8835     0F5D  3000               	movlw	0
  8836     0F5E  00A1               	movwf	___xxtofl@val+1
  8837     0F5F  01A2               	clrf	___xxtofl@val+2
  8838     0F60  01A3               	clrf	___xxtofl@val+3
  8839     0F61  3000               	movlw	0
  8840     0F62  318B  23EE  318F   	fcall	___xxtofl
  8841     0F65  0020               	movlb	0	; select bank0
  8842     0F66  0823               	movf	?___xxtofl+3,w
  8843     0F67  00B1               	movwf	___fladd@b+3
  8844     0F68  0822               	movf	?___xxtofl+2,w
  8845     0F69  00B0               	movwf	___fladd@b+2
  8846     0F6A  0821               	movf	?___xxtofl+1,w
  8847     0F6B  00AF               	movwf	___fladd@b+1
  8848     0F6C  0820               	movf	?___xxtofl,w
  8849     0F6D  00AE               	movwf	___fladd@b
  8850     0F6E  0021               	movlb	1	; select bank1
  8851     0F6F  085A               	movf	(str2float@getal+3)^(0+128),w
  8852     0F70  0020               	movlb	0	; select bank0
  8853     0F71  00B5               	movwf	___fladd@a+3
  8854     0F72  0021               	movlb	1	; select bank1
  8855     0F73  0859               	movf	(str2float@getal+2)^(0+128),w
  8856     0F74  0020               	movlb	0	; select bank0
  8857     0F75  00B4               	movwf	___fladd@a+2
  8858     0F76  0021               	movlb	1	; select bank1
  8859     0F77  0858               	movf	(str2float@getal+1)^(0+128),w
  8860     0F78  0020               	movlb	0	; select bank0
  8861     0F79  00B3               	movwf	___fladd@a+1
  8862     0F7A  0021               	movlb	1	; select bank1
  8863     0F7B  0857               	movf	str2float@getal^(0+128),w
  8864     0F7C  0020               	movlb	0	; select bank0
  8865     0F7D  00B2               	movwf	___fladd@a
  8866     0F7E  3182  22B1  318F   	fcall	___fladd
  8867     0F81  0020               	movlb	0	; select bank0
  8868     0F82  0831               	movf	?___fladd+3,w
  8869     0F83  0021               	movlb	1	; select bank1
  8870     0F84  00DA               	movwf	(str2float@getal+3)^(0+128)
  8871     0F85  0020               	movlb	0	; select bank0
  8872     0F86  0830               	movf	?___fladd+2,w
  8873     0F87  0021               	movlb	1	; select bank1
  8874     0F88  00D9               	movwf	(str2float@getal+2)^(0+128)
  8875     0F89  0020               	movlb	0	; select bank0
  8876     0F8A  082F               	movf	?___fladd+1,w
  8877     0F8B  0021               	movlb	1	; select bank1
  8878     0F8C  00D8               	movwf	(str2float@getal+1)^(0+128)
  8879     0F8D  0020               	movlb	0	; select bank0
  8880     0F8E  082E               	movf	?___fladd,w
  8881     0F8F  0021               	movlb	1	; select bank1
  8882     0F90  00D7               	movwf	str2float@getal^(0+128)
  8883     0F91                     l5759:
  8884                           
  8885                           ;UART.c: 90:             kommaCounter++;
  8886     0F91  3001               	movlw	1
  8887     0F92  0020               	movlb	0	; select bank0
  8888     0F93  00E8               	movwf	??_str2float
  8889     0F94  0868               	movf	??_str2float,w
  8890     0F95  0021               	movlb	1	; select bank1
  8891     0F96  07D5               	addwf	str2float@kommaCounter^(0+128),f
  8892                           
  8893                           ;UART.c: 91:         } else if (cijfer == ',' || cijfer == '.') {
  8894     0F97  2F13               	goto	l5749
  8895     0F98                     l5761:
  8896     0F98  302C               	movlw	44
  8897     0F99  065B               	xorwf	str2float@cijfer^(0+128),w
  8898     0F9A  1903               	btfsc	3,2
  8899     0F9B  2F9D               	goto	u5961
  8900     0F9C  2F9E               	goto	u5960
  8901     0F9D                     u5961:
  8902     0F9D  2FA4               	goto	l702
  8903     0F9E                     u5960:
  8904     0F9E                     l5763:
  8905     0F9E  302E               	movlw	46
  8906     0F9F  065B               	xorwf	str2float@cijfer^(0+128),w
  8907     0FA0  1D03               	btfss	3,2
  8908     0FA1  2FA3               	goto	u5971
  8909     0FA2  2FA4               	goto	u5970
  8910     0FA3                     u5971:
  8911     0FA3  2FA8               	goto	l5767
  8912     0FA4                     u5970:
  8913     0FA4                     l702:
  8914                           
  8915                           ;UART.c: 92:             kommaPresent = 1;
  8916     0FA4  01D4               	clrf	str2float@kommaPresent^(0+128)
  8917     0FA5  0AD4               	incf	str2float@kommaPresent^(0+128),f
  8918     0FA6                     l5765:
  8919                           
  8920                           ;UART.c: 93:             kommaCounter = 0;
  8921     0FA6  01D5               	clrf	str2float@kommaCounter^(0+128)
  8922                           
  8923                           ;UART.c: 94:         } else {
  8924     0FA7  2F13               	goto	l5749
  8925     0FA8                     l5767:
  8926                           
  8927                           ;UART.c: 99:     for (int i = 0; kommaPresent && i < kommaCounter; i++) {
  8928     0FA8  01D2               	clrf	str2float@i^(0+128)
  8929     0FA9  01D3               	clrf	(str2float@i+1)^(0+128)
  8930     0FAA  2FDB               	goto	l5773
  8931     0FAB                     l5769:
  8932                           
  8933                           ;UART.c: 100:         getal /= 10;
  8934     0FAB  3041               	movlw	65
  8935     0FAC  0020               	movlb	0	; select bank0
  8936     0FAD  00A3               	movwf	___fldiv@a+3
  8937     0FAE  3020               	movlw	32
  8938     0FAF  00A2               	movwf	___fldiv@a+2
  8939     0FB0  3000               	movlw	0
  8940     0FB1  00A1               	movwf	___fldiv@a+1
  8941     0FB2  3000               	movlw	0
  8942     0FB3  00A0               	movwf	___fldiv@a
  8943     0FB4  0021               	movlb	1	; select bank1
  8944     0FB5  085A               	movf	(str2float@getal+3)^(0+128),w
  8945     0FB6  0020               	movlb	0	; select bank0
  8946     0FB7  00A7               	movwf	___fldiv@b+3
  8947     0FB8  0021               	movlb	1	; select bank1
  8948     0FB9  0859               	movf	(str2float@getal+2)^(0+128),w
  8949     0FBA  0020               	movlb	0	; select bank0
  8950     0FBB  00A6               	movwf	___fldiv@b+2
  8951     0FBC  0021               	movlb	1	; select bank1
  8952     0FBD  0858               	movf	(str2float@getal+1)^(0+128),w
  8953     0FBE  0020               	movlb	0	; select bank0
  8954     0FBF  00A5               	movwf	___fldiv@b+1
  8955     0FC0  0021               	movlb	1	; select bank1
  8956     0FC1  0857               	movf	str2float@getal^(0+128),w
  8957     0FC2  0020               	movlb	0	; select bank0
  8958     0FC3  00A4               	movwf	___fldiv@b
  8959     0FC4  3184  24B9  318F   	fcall	___fldiv
  8960     0FC7  0020               	movlb	0	; select bank0
  8961     0FC8  0823               	movf	?___fldiv+3,w
  8962     0FC9  0021               	movlb	1	; select bank1
  8963     0FCA  00DA               	movwf	(str2float@getal+3)^(0+128)
  8964     0FCB  0020               	movlb	0	; select bank0
  8965     0FCC  0822               	movf	?___fldiv+2,w
  8966     0FCD  0021               	movlb	1	; select bank1
  8967     0FCE  00D9               	movwf	(str2float@getal+2)^(0+128)
  8968     0FCF  0020               	movlb	0	; select bank0
  8969     0FD0  0821               	movf	?___fldiv+1,w
  8970     0FD1  0021               	movlb	1	; select bank1
  8971     0FD2  00D8               	movwf	(str2float@getal+1)^(0+128)
  8972     0FD3  0020               	movlb	0	; select bank0
  8973     0FD4  0820               	movf	?___fldiv,w
  8974     0FD5  0021               	movlb	1	; select bank1
  8975     0FD6  00D7               	movwf	str2float@getal^(0+128)
  8976     0FD7                     l5771:
  8977                           
  8978                           ;UART.c: 101:     }
  8979     0FD7  3001               	movlw	1
  8980     0FD8  07D2               	addwf	str2float@i^(0+128),f
  8981     0FD9  3000               	movlw	0
  8982     0FDA  3DD3               	addwfc	(str2float@i+1)^(0+128),f
  8983     0FDB                     l5773:
  8984     0FDB  0854               	movf	str2float@kommaPresent^(0+128),w
  8985     0FDC  1903               	btfsc	3,2
  8986     0FDD  2FDF               	goto	u5981
  8987     0FDE  2FE0               	goto	u5980
  8988     0FDF                     u5981:
  8989     0FDF  2FEF               	goto	l5777
  8990     0FE0                     u5980:
  8991     0FE0                     l5775:
  8992     0FE0  0853               	movf	(str2float@i+1)^(0+128),w
  8993     0FE1  3A80               	xorlw	128
  8994     0FE2  0020               	movlb	0	; select bank0
  8995     0FE3  00E8               	movwf	??_str2float
  8996     0FE4  3080               	movlw	128
  8997     0FE5  0268               	subwf	??_str2float,w
  8998     0FE6  1D03               	skipz
  8999     0FE7  2FEB               	goto	u5995
  9000     0FE8  0021               	movlb	1	; select bank1
  9001     0FE9  0855               	movf	str2float@kommaCounter^(0+128),w
  9002     0FEA  0252               	subwf	str2float@i^(0+128),w
  9003     0FEB                     u5995:
  9004     0FEB  1C03               	skipc
  9005     0FEC  2FEE               	goto	u5991
  9006     0FED  2FEF               	goto	u5990
  9007     0FEE                     u5991:
  9008     0FEE  2FAB               	goto	l5769
  9009     0FEF                     u5990:
  9010     0FEF                     l5777:
  9011                           
  9012                           ;UART.c: 102:     return getal;
  9013     0FEF  0021               	movlb	1	; select bank1
  9014     0FF0  085A               	movf	(str2float@getal+3)^(0+128),w
  9015     0FF1  0020               	movlb	0	; select bank0
  9016     0FF2  00E7               	movwf	?_str2float+3
  9017     0FF3  0021               	movlb	1	; select bank1
  9018     0FF4  0859               	movf	(str2float@getal+2)^(0+128),w
  9019     0FF5  0020               	movlb	0	; select bank0
  9020     0FF6  00E6               	movwf	?_str2float+2
  9021     0FF7  0021               	movlb	1	; select bank1
  9022     0FF8  0858               	movf	(str2float@getal+1)^(0+128),w
  9023     0FF9  0020               	movlb	0	; select bank0
  9024     0FFA  00E5               	movwf	?_str2float+1
  9025     0FFB  0021               	movlb	1	; select bank1
  9026     0FFC  0857               	movf	str2float@getal^(0+128),w
  9027     0FFD  0020               	movlb	0	; select bank0
  9028     0FFE  00E4               	movwf	?_str2float
  9029     0FFF                     l711:
  9030     0FFF  0008               	return
  9031     1000                     __end_of_str2float:
  9032                           
  9033                           	psect	text10
  9034     04B9                     __ptext10:	
  9035 ;; *************** function ___fldiv *****************
  9036 ;; Defined at:
  9037 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  a               4    0[BANK0 ] float 
  9040 ;;  b               4    4[BANK0 ] float 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  grs             4   20[BANK0 ] unsigned long 
  9043 ;;  rem             4   13[BANK0 ] unsigned long 
  9044 ;;  new_exp         2   18[BANK0 ] int 
  9045 ;;  aexp            1   25[BANK0 ] unsigned char 
  9046 ;;  bexp            1   24[BANK0 ] unsigned char 
  9047 ;;  sign            1   17[BANK0 ] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  4    0[BANK0 ] unsigned char 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9057 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;Total ram usage:       26 bytes
  9062 ;; Hardware stack levels used: 1
  9063 ;; Hardware stack levels required when called: 4
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_str2float
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071     04B9                     ___fldiv:	
  9072                           ;psect for function ___fldiv
  9073                           
  9074     04B9                     l5321:	
  9075                           ;incstack = 0
  9076                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9077                           
  9078     04B9  0020               	movlb	0	; select bank0
  9079     04BA  0827               	movf	___fldiv@b+3,w
  9080     04BB  3980               	andlw	128
  9081     04BC  00B1               	movwf	___fldiv@sign
  9082     04BD                     l5323:
  9083     04BD  3527               	lslf	___fldiv@b+3,w
  9084     04BE  00B8               	movwf	___fldiv@bexp
  9085     04BF                     l5325:
  9086     04BF  1FA6               	btfss	___fldiv@b+2,7
  9087     04C0  2CC2               	goto	u5171
  9088     04C1  2CC3               	goto	u5170
  9089     04C2                     u5171:
  9090     04C2  2CC4               	goto	l5329
  9091     04C3                     u5170:
  9092     04C3                     l5327:
  9093     04C3  1438               	bsf	___fldiv@bexp,0
  9094     04C4                     l5329:
  9095     04C4  0838               	movf	___fldiv@bexp,w
  9096     04C5  1903               	btfsc	3,2
  9097     04C6  2CC8               	goto	u5181
  9098     04C7  2CC9               	goto	u5180
  9099     04C8                     u5181:
  9100     04C8  2CD9               	goto	l5339
  9101     04C9                     u5180:
  9102     04C9                     l5331:
  9103     04C9  0A38               	incf	___fldiv@bexp,w
  9104     04CA  1D03               	btfss	3,2
  9105     04CB  2CCD               	goto	u5191
  9106     04CC  2CCE               	goto	u5190
  9107     04CD                     u5191:
  9108     04CD  2CD6               	goto	l5335
  9109     04CE                     u5190:
  9110     04CE                     l5333:
  9111     04CE  3000               	movlw	0
  9112     04CF  00A7               	movwf	___fldiv@b+3
  9113     04D0  3000               	movlw	0
  9114     04D1  00A6               	movwf	___fldiv@b+2
  9115     04D2  3000               	movlw	0
  9116     04D3  00A5               	movwf	___fldiv@b+1
  9117     04D4  3000               	movlw	0
  9118     04D5  00A4               	movwf	___fldiv@b
  9119     04D6                     l5335:
  9120     04D6  17A6               	bsf	___fldiv@b+2,7
  9121     04D7                     l5337:
  9122     04D7  01A7               	clrf	___fldiv@b+3
  9123     04D8  2CE1               	goto	l5341
  9124     04D9                     l5339:
  9125     04D9  3000               	movlw	0
  9126     04DA  00A7               	movwf	___fldiv@b+3
  9127     04DB  3000               	movlw	0
  9128     04DC  00A6               	movwf	___fldiv@b+2
  9129     04DD  3000               	movlw	0
  9130     04DE  00A5               	movwf	___fldiv@b+1
  9131     04DF  3000               	movlw	0
  9132     04E0  00A4               	movwf	___fldiv@b
  9133     04E1                     l5341:
  9134     04E1  0823               	movf	___fldiv@a+3,w
  9135     04E2  3980               	andlw	128
  9136     04E3  00A8               	movwf	??___fldiv
  9137     04E4  0828               	movf	??___fldiv,w
  9138     04E5  06B1               	xorwf	___fldiv@sign,f
  9139     04E6                     l5343:
  9140     04E6  3523               	lslf	___fldiv@a+3,w
  9141     04E7  00B9               	movwf	___fldiv@aexp
  9142     04E8                     l5345:
  9143     04E8  1FA2               	btfss	___fldiv@a+2,7
  9144     04E9  2CEB               	goto	u5201
  9145     04EA  2CEC               	goto	u5200
  9146     04EB                     u5201:
  9147     04EB  2CED               	goto	l5349
  9148     04EC                     u5200:
  9149     04EC                     l5347:
  9150     04EC  1439               	bsf	___fldiv@aexp,0
  9151     04ED                     l5349:
  9152     04ED  0839               	movf	___fldiv@aexp,w
  9153     04EE  1903               	btfsc	3,2
  9154     04EF  2CF1               	goto	u5211
  9155     04F0  2CF2               	goto	u5210
  9156     04F1                     u5211:
  9157     04F1  2D02               	goto	l5359
  9158     04F2                     u5210:
  9159     04F2                     l5351:
  9160     04F2  0A39               	incf	___fldiv@aexp,w
  9161     04F3  1D03               	btfss	3,2
  9162     04F4  2CF6               	goto	u5221
  9163     04F5  2CF7               	goto	u5220
  9164     04F6                     u5221:
  9165     04F6  2CFF               	goto	l5355
  9166     04F7                     u5220:
  9167     04F7                     l5353:
  9168     04F7  3000               	movlw	0
  9169     04F8  00A3               	movwf	___fldiv@a+3
  9170     04F9  3000               	movlw	0
  9171     04FA  00A2               	movwf	___fldiv@a+2
  9172     04FB  3000               	movlw	0
  9173     04FC  00A1               	movwf	___fldiv@a+1
  9174     04FD  3000               	movlw	0
  9175     04FE  00A0               	movwf	___fldiv@a
  9176     04FF                     l5355:
  9177     04FF  17A2               	bsf	___fldiv@a+2,7
  9178     0500                     l5357:
  9179     0500  01A3               	clrf	___fldiv@a+3
  9180     0501  2D0A               	goto	l1388
  9181     0502                     l5359:
  9182     0502  3000               	movlw	0
  9183     0503  00A3               	movwf	___fldiv@a+3
  9184     0504  3000               	movlw	0
  9185     0505  00A2               	movwf	___fldiv@a+2
  9186     0506  3000               	movlw	0
  9187     0507  00A1               	movwf	___fldiv@a+1
  9188     0508  3000               	movlw	0
  9189     0509  00A0               	movwf	___fldiv@a
  9190     050A                     l1388:
  9191     050A  0823               	movf	___fldiv@a+3,w
  9192     050B  0422               	iorwf	___fldiv@a+2,w
  9193     050C  0421               	iorwf	___fldiv@a+1,w
  9194     050D  0420               	iorwf	___fldiv@a,w
  9195     050E  1D03               	skipz
  9196     050F  2D11               	goto	u5231
  9197     0510  2D12               	goto	u5230
  9198     0511                     u5231:
  9199     0511  2D2B               	goto	l5369
  9200     0512                     u5230:
  9201     0512                     l5361:
  9202     0512  3000               	movlw	0
  9203     0513  00A7               	movwf	___fldiv@b+3
  9204     0514  3000               	movlw	0
  9205     0515  00A6               	movwf	___fldiv@b+2
  9206     0516  3000               	movlw	0
  9207     0517  00A5               	movwf	___fldiv@b+1
  9208     0518  3000               	movlw	0
  9209     0519  00A4               	movwf	___fldiv@b
  9210     051A  3080               	movlw	128
  9211     051B  04A6               	iorwf	___fldiv@b+2,f
  9212     051C  307F               	movlw	127
  9213     051D  04A7               	iorwf	___fldiv@b+3,f
  9214     051E                     l5363:
  9215     051E  0831               	movf	___fldiv@sign,w
  9216     051F  00A8               	movwf	??___fldiv
  9217     0520  0828               	movf	??___fldiv,w
  9218     0521  04A7               	iorwf	___fldiv@b+3,f
  9219     0522                     l5365:
  9220     0522  0827               	movf	___fldiv@b+3,w
  9221     0523  00A3               	movwf	?___fldiv+3
  9222     0524  0826               	movf	___fldiv@b+2,w
  9223     0525  00A2               	movwf	?___fldiv+2
  9224     0526  0825               	movf	___fldiv@b+1,w
  9225     0527  00A1               	movwf	?___fldiv+1
  9226     0528  0824               	movf	___fldiv@b,w
  9227     0529  00A0               	movwf	?___fldiv
  9228     052A  2E62               	goto	l1390
  9229     052B                     l5369:
  9230     052B  0838               	movf	___fldiv@bexp,w
  9231     052C  1D03               	btfss	3,2
  9232     052D  2D2F               	goto	u5241
  9233     052E  2D30               	goto	u5240
  9234     052F                     u5241:
  9235     052F  2D39               	goto	l5375
  9236     0530                     u5240:
  9237     0530                     l5371:
  9238     0530  3000               	movlw	0
  9239     0531  00A3               	movwf	?___fldiv+3
  9240     0532  3000               	movlw	0
  9241     0533  00A2               	movwf	?___fldiv+2
  9242     0534  3000               	movlw	0
  9243     0535  00A1               	movwf	?___fldiv+1
  9244     0536  3000               	movlw	0
  9245     0537  00A0               	movwf	?___fldiv
  9246     0538  2E62               	goto	l1390
  9247     0539                     l5375:
  9248     0539  0838               	movf	___fldiv@bexp,w
  9249     053A  00A8               	movwf	??___fldiv
  9250     053B  01A9               	clrf	??___fldiv+1
  9251     053C  0829               	movf	??___fldiv+1,w
  9252     053D  00AB               	movwf	??___fldiv+3
  9253     053E  0839               	movf	___fldiv@aexp,w
  9254     053F  0228               	subwf	??___fldiv,w
  9255     0540  00AA               	movwf	??___fldiv+2
  9256     0541  1C03               	skipc
  9257     0542  03AB               	decf	??___fldiv+3,f
  9258     0543  082A               	movf	??___fldiv+2,w
  9259     0544  3E7F               	addlw	127
  9260     0545  00B2               	movwf	___fldiv@new_exp
  9261     0546  3000               	movlw	0
  9262     0547  3D2B               	addwfc	??___fldiv+3,w
  9263     0548  00B3               	movwf	___fldiv@new_exp+1
  9264     0549                     l5377:
  9265     0549  0827               	movf	___fldiv@b+3,w
  9266     054A  00B0               	movwf	___fldiv@rem+3
  9267     054B  0826               	movf	___fldiv@b+2,w
  9268     054C  00AF               	movwf	___fldiv@rem+2
  9269     054D  0825               	movf	___fldiv@b+1,w
  9270     054E  00AE               	movwf	___fldiv@rem+1
  9271     054F  0824               	movf	___fldiv@b,w
  9272     0550  00AD               	movwf	___fldiv@rem
  9273     0551                     l5379:
  9274     0551  3000               	movlw	0
  9275     0552  00A7               	movwf	___fldiv@b+3
  9276     0553  3000               	movlw	0
  9277     0554  00A6               	movwf	___fldiv@b+2
  9278     0555  3000               	movlw	0
  9279     0556  00A5               	movwf	___fldiv@b+1
  9280     0557  3000               	movlw	0
  9281     0558  00A4               	movwf	___fldiv@b
  9282     0559                     l5381:
  9283     0559  3000               	movlw	0
  9284     055A  00B7               	movwf	___fldiv@grs+3
  9285     055B  3000               	movlw	0
  9286     055C  00B6               	movwf	___fldiv@grs+2
  9287     055D  3000               	movlw	0
  9288     055E  00B5               	movwf	___fldiv@grs+1
  9289     055F  3000               	movlw	0
  9290     0560  00B4               	movwf	___fldiv@grs
  9291     0561                     l5383:
  9292     0561  01B9               	clrf	___fldiv@aexp
  9293     0562  2DA1               	goto	l5403
  9294     0563                     l5385:
  9295     0563  0839               	movf	___fldiv@aexp,w
  9296     0564  1903               	btfsc	3,2
  9297     0565  2D67               	goto	u5251
  9298     0566  2D68               	goto	u5250
  9299     0567                     u5251:
  9300     0567  2D82               	goto	l5395
  9301     0568                     u5250:
  9302     0568                     l5387:
  9303     0568  3001               	movlw	1
  9304     0569                     u5265:
  9305     0569  35AD               	lslf	___fldiv@rem,f
  9306     056A  0DAE               	rlf	___fldiv@rem+1,f
  9307     056B  0DAF               	rlf	___fldiv@rem+2,f
  9308     056C  0DB0               	rlf	___fldiv@rem+3,f
  9309     056D  0B89               	decfsz	9,f
  9310     056E  2D69               	goto	u5265
  9311     056F  3001               	movlw	1
  9312     0570                     u5275:
  9313     0570  35A4               	lslf	___fldiv@b,f
  9314     0571  0DA5               	rlf	___fldiv@b+1,f
  9315     0572  0DA6               	rlf	___fldiv@b+2,f
  9316     0573  0DA7               	rlf	___fldiv@b+3,f
  9317     0574  0B89               	decfsz	9,f
  9318     0575  2D70               	goto	u5275
  9319     0576                     l5389:
  9320     0576  1FB7               	btfss	___fldiv@grs+3,7
  9321     0577  2D79               	goto	u5281
  9322     0578  2D7A               	goto	u5280
  9323     0579                     u5281:
  9324     0579  2D7B               	goto	l5393
  9325     057A                     u5280:
  9326     057A                     l5391:
  9327     057A  1424               	bsf	___fldiv@b,0
  9328     057B                     l5393:
  9329     057B  3001               	movlw	1
  9330     057C                     u5295:
  9331     057C  35B4               	lslf	___fldiv@grs,f
  9332     057D  0DB5               	rlf	___fldiv@grs+1,f
  9333     057E  0DB6               	rlf	___fldiv@grs+2,f
  9334     057F  0DB7               	rlf	___fldiv@grs+3,f
  9335     0580  0B89               	decfsz	9,f
  9336     0581  2D7C               	goto	u5295
  9337     0582                     l5395:
  9338     0582  0823               	movf	___fldiv@a+3,w
  9339     0583  0230               	subwf	___fldiv@rem+3,w
  9340     0584  1D03               	skipz
  9341     0585  2D90               	goto	u5305
  9342     0586  0822               	movf	___fldiv@a+2,w
  9343     0587  022F               	subwf	___fldiv@rem+2,w
  9344     0588  1D03               	skipz
  9345     0589  2D90               	goto	u5305
  9346     058A  0821               	movf	___fldiv@a+1,w
  9347     058B  022E               	subwf	___fldiv@rem+1,w
  9348     058C  1D03               	skipz
  9349     058D  2D90               	goto	u5305
  9350     058E  0820               	movf	___fldiv@a,w
  9351     058F  022D               	subwf	___fldiv@rem,w
  9352     0590                     u5305:
  9353     0590  1C03               	skipc
  9354     0591  2D93               	goto	u5301
  9355     0592  2D94               	goto	u5300
  9356     0593                     u5301:
  9357     0593  2D9D               	goto	l5401
  9358     0594                     u5300:
  9359     0594                     l5397:
  9360     0594  1737               	bsf	___fldiv@grs+3,6
  9361     0595                     l5399:
  9362     0595  0820               	movf	___fldiv@a,w
  9363     0596  02AD               	subwf	___fldiv@rem,f
  9364     0597  0821               	movf	___fldiv@a+1,w
  9365     0598  3BAE               	subwfb	___fldiv@rem+1,f
  9366     0599  0822               	movf	___fldiv@a+2,w
  9367     059A  3BAF               	subwfb	___fldiv@rem+2,f
  9368     059B  0823               	movf	___fldiv@a+3,w
  9369     059C  3BB0               	subwfb	___fldiv@rem+3,f
  9370     059D                     l5401:
  9371     059D  3001               	movlw	1
  9372     059E  00A8               	movwf	??___fldiv
  9373     059F  0828               	movf	??___fldiv,w
  9374     05A0  07B9               	addwf	___fldiv@aexp,f
  9375     05A1                     l5403:
  9376     05A1  301A               	movlw	26
  9377     05A2  0239               	subwf	___fldiv@aexp,w
  9378     05A3  1C03               	skipc
  9379     05A4  2DA6               	goto	u5311
  9380     05A5  2DA7               	goto	u5310
  9381     05A6                     u5311:
  9382     05A6  2D63               	goto	l5385
  9383     05A7                     u5310:
  9384     05A7                     l5405:
  9385     05A7  0830               	movf	___fldiv@rem+3,w
  9386     05A8  042F               	iorwf	___fldiv@rem+2,w
  9387     05A9  042E               	iorwf	___fldiv@rem+1,w
  9388     05AA  042D               	iorwf	___fldiv@rem,w
  9389     05AB  1903               	skipnz
  9390     05AC  2DAE               	goto	u5321
  9391     05AD  2DAF               	goto	u5320
  9392     05AE                     u5321:
  9393     05AE  2DC8               	goto	l5419
  9394     05AF                     u5320:
  9395     05AF                     l5407:
  9396     05AF  1434               	bsf	___fldiv@grs,0
  9397     05B0  2DC8               	goto	l5419
  9398     05B1                     l5409:
  9399     05B1  3001               	movlw	1
  9400     05B2                     u5335:
  9401     05B2  35A4               	lslf	___fldiv@b,f
  9402     05B3  0DA5               	rlf	___fldiv@b+1,f
  9403     05B4  0DA6               	rlf	___fldiv@b+2,f
  9404     05B5  0DA7               	rlf	___fldiv@b+3,f
  9405     05B6  0B89               	decfsz	9,f
  9406     05B7  2DB2               	goto	u5335
  9407     05B8                     l5411:
  9408     05B8  1FB7               	btfss	___fldiv@grs+3,7
  9409     05B9  2DBB               	goto	u5341
  9410     05BA  2DBC               	goto	u5340
  9411     05BB                     u5341:
  9412     05BB  2DBD               	goto	l5415
  9413     05BC                     u5340:
  9414     05BC                     l5413:
  9415     05BC  1424               	bsf	___fldiv@b,0
  9416     05BD                     l5415:
  9417     05BD  3001               	movlw	1
  9418     05BE                     u5355:
  9419     05BE  35B4               	lslf	___fldiv@grs,f
  9420     05BF  0DB5               	rlf	___fldiv@grs+1,f
  9421     05C0  0DB6               	rlf	___fldiv@grs+2,f
  9422     05C1  0DB7               	rlf	___fldiv@grs+3,f
  9423     05C2  0B89               	decfsz	9,f
  9424     05C3  2DBE               	goto	u5355
  9425     05C4                     l5417:
  9426     05C4  30FF               	movlw	255
  9427     05C5  07B2               	addwf	___fldiv@new_exp,f
  9428     05C6  30FF               	movlw	255
  9429     05C7  3DB3               	addwfc	___fldiv@new_exp+1,f
  9430     05C8                     l5419:
  9431     05C8  1FA6               	btfss	___fldiv@b+2,7
  9432     05C9  2DCB               	goto	u5361
  9433     05CA  2DCC               	goto	u5360
  9434     05CB                     u5361:
  9435     05CB  2DB1               	goto	l5409
  9436     05CC                     u5360:
  9437     05CC                     l5421:
  9438     05CC  01B9               	clrf	___fldiv@aexp
  9439     05CD                     l5423:
  9440     05CD  1FB7               	btfss	___fldiv@grs+3,7
  9441     05CE  2DD0               	goto	u5371
  9442     05CF  2DD1               	goto	u5370
  9443     05D0                     u5371:
  9444     05D0  2DED               	goto	l5431
  9445     05D1                     u5370:
  9446     05D1                     l5425:
  9447     05D1  30FF               	movlw	255
  9448     05D2  0534               	andwf	___fldiv@grs,w
  9449     05D3  00A8               	movwf	??___fldiv
  9450     05D4  30FF               	movlw	255
  9451     05D5  0535               	andwf	___fldiv@grs+1,w
  9452     05D6  00A9               	movwf	??___fldiv+1
  9453     05D7  30FF               	movlw	255
  9454     05D8  0536               	andwf	___fldiv@grs+2,w
  9455     05D9  00AA               	movwf	??___fldiv+2
  9456     05DA  307F               	movlw	127
  9457     05DB  0537               	andwf	___fldiv@grs+3,w
  9458     05DC  00AB               	movwf	??___fldiv+3
  9459     05DD  082B               	movf	??___fldiv+3,w
  9460     05DE  042A               	iorwf	??___fldiv+2,w
  9461     05DF  0429               	iorwf	??___fldiv+1,w
  9462     05E0  0428               	iorwf	??___fldiv,w
  9463     05E1  1903               	skipnz
  9464     05E2  2DE4               	goto	u5381
  9465     05E3  2DE5               	goto	u5380
  9466     05E4                     u5381:
  9467     05E4  2DE8               	goto	l1404
  9468     05E5                     u5380:
  9469     05E5                     l5427:
  9470     05E5  01B9               	clrf	___fldiv@aexp
  9471     05E6  0AB9               	incf	___fldiv@aexp,f
  9472     05E7  2DED               	goto	l5431
  9473     05E8                     l1404:
  9474     05E8  1C24               	btfss	___fldiv@b,0
  9475     05E9  2DEB               	goto	u5391
  9476     05EA  2DEC               	goto	u5390
  9477     05EB                     u5391:
  9478     05EB  2DED               	goto	l5431
  9479     05EC                     u5390:
  9480     05EC  2DE5               	goto	l5427
  9481     05ED                     l5431:
  9482     05ED  0839               	movf	___fldiv@aexp,w
  9483     05EE  1903               	btfsc	3,2
  9484     05EF  2DF1               	goto	u5401
  9485     05F0  2DF2               	goto	u5400
  9486     05F1                     u5401:
  9487     05F1  2E1A               	goto	l5441
  9488     05F2                     u5400:
  9489     05F2                     l5433:
  9490     05F2  3001               	movlw	1
  9491     05F3  07A4               	addwf	___fldiv@b,f
  9492     05F4  3000               	movlw	0
  9493     05F5  3DA5               	addwfc	___fldiv@b+1,f
  9494     05F6  3000               	movlw	0
  9495     05F7  3DA6               	addwfc	___fldiv@b+2,f
  9496     05F8  3000               	movlw	0
  9497     05F9  3DA7               	addwfc	___fldiv@b+3,f
  9498     05FA                     l5435:
  9499     05FA  1C27               	btfss	___fldiv@b+3,0
  9500     05FB  2DFD               	goto	u5411
  9501     05FC  2DFE               	goto	u5410
  9502     05FD                     u5411:
  9503     05FD  2E1A               	goto	l5441
  9504     05FE                     u5410:
  9505     05FE                     l5437:
  9506     05FE  0824               	movf	___fldiv@b,w
  9507     05FF  00A8               	movwf	??___fldiv
  9508     0600  0825               	movf	___fldiv@b+1,w
  9509     0601  00A9               	movwf	??___fldiv+1
  9510     0602  0826               	movf	___fldiv@b+2,w
  9511     0603  00AA               	movwf	??___fldiv+2
  9512     0604  0827               	movf	___fldiv@b+3,w
  9513     0605  00AB               	movwf	??___fldiv+3
  9514     0606  3001               	movlw	1
  9515     0607  00AC               	movwf	??___fldiv+4
  9516     0608                     u5425:
  9517     0608  37AB               	asrf	??___fldiv+3,f
  9518     0609  0CAA               	rrf	??___fldiv+2,f
  9519     060A  0CA9               	rrf	??___fldiv+1,f
  9520     060B  0CA8               	rrf	??___fldiv,f
  9521     060C                     u5420:
  9522     060C  0BAC               	decfsz	??___fldiv+4,f
  9523     060D  2E08               	goto	u5425
  9524     060E  082B               	movf	??___fldiv+3,w
  9525     060F  00A7               	movwf	___fldiv@b+3
  9526     0610  082A               	movf	??___fldiv+2,w
  9527     0611  00A6               	movwf	___fldiv@b+2
  9528     0612  0829               	movf	??___fldiv+1,w
  9529     0613  00A5               	movwf	___fldiv@b+1
  9530     0614  0828               	movf	??___fldiv,w
  9531     0615  00A4               	movwf	___fldiv@b
  9532     0616                     l5439:
  9533     0616  3001               	movlw	1
  9534     0617  07B2               	addwf	___fldiv@new_exp,f
  9535     0618  3000               	movlw	0
  9536     0619  3DB3               	addwfc	___fldiv@new_exp+1,f
  9537     061A                     l5441:
  9538     061A  0833               	movf	___fldiv@new_exp+1,w
  9539     061B  3A80               	xorlw	128
  9540     061C  00A8               	movwf	??___fldiv
  9541     061D  3080               	movlw	128
  9542     061E  0228               	subwf	??___fldiv,w
  9543     061F  1D03               	skipz
  9544     0620  2E23               	goto	u5435
  9545     0621  30FF               	movlw	255
  9546     0622  0232               	subwf	___fldiv@new_exp,w
  9547     0623                     u5435:
  9548     0623  1C03               	skipc
  9549     0624  2E26               	goto	u5431
  9550     0625  2E27               	goto	u5430
  9551     0626                     u5431:
  9552     0626  2E34               	goto	l1409
  9553     0627                     u5430:
  9554     0627                     l5443:
  9555     0627  30FF               	movlw	255
  9556     0628  0020               	movlb	0	; select bank0
  9557     0629  00B2               	movwf	___fldiv@new_exp
  9558     062A  3000               	movlw	0
  9559     062B  00B3               	movwf	___fldiv@new_exp+1
  9560     062C  3000               	movlw	0
  9561     062D  00A7               	movwf	___fldiv@b+3
  9562     062E  3000               	movlw	0
  9563     062F  00A6               	movwf	___fldiv@b+2
  9564     0630  3000               	movlw	0
  9565     0631  00A5               	movwf	___fldiv@b+1
  9566     0632  3000               	movlw	0
  9567     0633  00A4               	movwf	___fldiv@b
  9568     0634                     l1409:
  9569     0634  0020               	movlb	0	; select bank0
  9570     0635  0833               	movf	___fldiv@new_exp+1,w
  9571     0636  3A80               	xorlw	128
  9572     0637  00A8               	movwf	??___fldiv
  9573     0638  3080               	movlw	128
  9574     0639  0228               	subwf	??___fldiv,w
  9575     063A  1D03               	skipz
  9576     063B  2E3E               	goto	u5445
  9577     063C  3001               	movlw	1
  9578     063D  0232               	subwf	___fldiv@new_exp,w
  9579     063E                     u5445:
  9580     063E  1803               	skipnc
  9581     063F  2E41               	goto	u5441
  9582     0640  2E42               	goto	u5440
  9583     0641                     u5441:
  9584     0641  2E4E               	goto	l1410
  9585     0642                     u5440:
  9586     0642                     l5445:
  9587     0642  0020               	movlb	0	; select bank0
  9588     0643  01B2               	clrf	___fldiv@new_exp
  9589     0644  01B3               	clrf	___fldiv@new_exp+1
  9590     0645                     l5447:
  9591     0645  3000               	movlw	0
  9592     0646  00A7               	movwf	___fldiv@b+3
  9593     0647  3000               	movlw	0
  9594     0648  00A6               	movwf	___fldiv@b+2
  9595     0649  3000               	movlw	0
  9596     064A  00A5               	movwf	___fldiv@b+1
  9597     064B  3000               	movlw	0
  9598     064C  00A4               	movwf	___fldiv@b
  9599     064D                     l5449:
  9600     064D  01B1               	clrf	___fldiv@sign
  9601     064E                     l1410:
  9602     064E  0020               	movlb	0	; select bank0
  9603     064F  0832               	movf	___fldiv@new_exp,w
  9604     0650  00B8               	movwf	___fldiv@bexp
  9605     0651                     l5451:
  9606     0651  1C38               	btfss	___fldiv@bexp,0
  9607     0652  2E54               	goto	u5451
  9608     0653  2E55               	goto	u5450
  9609     0654                     u5451:
  9610     0654  2E57               	goto	l5455
  9611     0655                     u5450:
  9612     0655                     l5453:
  9613     0655  17A6               	bsf	___fldiv@b+2,7
  9614     0656  2E5B               	goto	l1412
  9615     0657                     l5455:
  9616     0657  307F               	movlw	127
  9617     0658  00A8               	movwf	??___fldiv
  9618     0659  0828               	movf	??___fldiv,w
  9619     065A  05A6               	andwf	___fldiv@b+2,f
  9620     065B                     l1412:
  9621     065B  3638               	lsrf	___fldiv@bexp,w
  9622     065C  00A7               	movwf	___fldiv@b+3
  9623     065D  0831               	movf	___fldiv@sign,w
  9624     065E  00A8               	movwf	??___fldiv
  9625     065F  0828               	movf	??___fldiv,w
  9626     0660  04A7               	iorwf	___fldiv@b+3,f
  9627     0661  2D22               	goto	l5365
  9628     0662                     l1390:
  9629     0662  0008               	return
  9630     0663                     __end_of___fldiv:
  9631                           
  9632                           	psect	text11
  9633     097C                     __ptext11:	
  9634 ;; *************** function _readLine *****************
  9635 ;; Defined at:
  9636 ;;		line 35 in file "UART.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;		None
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;		None
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  1    wreg      PTR unsigned char 
  9643 ;; Registers used:
  9644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;Total ram usage:        3 bytes
  9655 ;; Hardware stack levels used: 1
  9656 ;; Hardware stack levels required when called: 10
  9657 ;; This function calls:
  9658 ;;		_EUSART_Read
  9659 ;;		_EUSART_is_rx_ready
  9660 ;;		_printNewLine
  9661 ;;		_printf
  9662 ;; This function is called by:
  9663 ;;		_uartHandler
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667     097C                     _readLine:	
  9668                           ;psect for function _readLine
  9669                           
  9670     097C                     l678:	
  9671                           ;incstack = 0
  9672                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9673                           ;UART.c: 36:     static uint8_t index = 0;;UART.c: 37:     while (1) {
  9674                           
  9675     097C                     l5675:
  9676                           
  9677                           ;UART.c: 38:         if (!EUSART_is_rx_ready()) {
  9678     097C  3194  24D2  3189   	fcall	_EUSART_is_rx_ready
  9679     097F  3A00               	xorlw	0
  9680     0980  1D03               	skipz
  9681     0981  2983               	goto	u5871
  9682     0982  2984               	goto	u5870
  9683     0983                     u5871:
  9684     0983  298D               	goto	l5683
  9685     0984                     u5870:
  9686     0984                     l5677:
  9687                           
  9688                           ;UART.c: 39:             line[index] = 0;
  9689     0984  0876               	movf	readLine@index,w
  9690     0985  3E30               	addlw	(low (_line| (0+256)))& (0+255)
  9691     0986  0086               	movwf	6
  9692     0987  3001               	movlw	1	; select bank2/3
  9693     0988  0087               	movwf	7
  9694     0989  0181               	clrf	1
  9695     098A                     l5679:
  9696                           
  9697                           ;UART.c: 40:             return line + index;
  9698     098A  0876               	movf	readLine@index,w
  9699     098B  3E30               	addlw	(low (_line| (0+256)))& (0+255)
  9700     098C  29D3               	goto	l680
  9701     098D                     l5683:
  9702                           
  9703                           ;UART.c: 42:         if (index >= 20 - 1) {
  9704     098D  3013               	movlw	19
  9705     098E  0276               	subwf	readLine@index,w
  9706     098F  1C03               	skipc
  9707     0990  2992               	goto	u5881
  9708     0991  2993               	goto	u5880
  9709     0992                     u5881:
  9710     0992  29AF               	goto	l5703
  9711     0993                     u5880:
  9712     0993  2997               	goto	l5689
  9713     0994                     l5687:
  9714                           
  9715                           ;UART.c: 44:                 EUSART_Read();
  9716     0994  3188  2000  3189   	fcall	_EUSART_Read
  9717     0997                     l5689:
  9718                           
  9719                           ;UART.c: 43:             while (EUSART_is_rx_ready()) {
  9720     0997  3194  24D2  3189   	fcall	_EUSART_is_rx_ready
  9721     099A  3A00               	xorlw	0
  9722     099B  1D03               	skipz
  9723     099C  299E               	goto	u5891
  9724     099D  299F               	goto	u5890
  9725     099E                     u5891:
  9726     099E  2994               	goto	l5687
  9727     099F                     u5890:
  9728     099F                     l5691:
  9729                           
  9730                           ;UART.c: 46:             printf("input buffer overflow");
  9731     099F  3020               	movlw	low (STR_5| (0+32768))
  9732     09A0  0020               	movlb	0	; select bank0
  9733     09A1  00BA               	movwf	printf@fmt
  9734     09A2  3098               	movlw	high (STR_5| (0+32768))
  9735     09A3  00BB               	movwf	printf@fmt+1
  9736     09A4  3195  258B  3189   	fcall	_printf
  9737     09A7                     l5693:
  9738                           
  9739                           ;UART.c: 47:             printNewLine();
  9740     09A7  3194  24C9  3189   	fcall	_printNewLine
  9741     09AA                     l5695:
  9742                           
  9743                           ;UART.c: 48:             index = 0;
  9744     09AA  01F6               	clrf	readLine@index
  9745     09AB                     l5697:
  9746                           
  9747                           ;UART.c: 49:             line[index ] = 0;
  9748     09AB  0022               	movlb	2	; select bank2
  9749     09AC  01B0               	clrf	_line^(0+256)
  9750     09AD                     l5699:
  9751                           
  9752                           ;UART.c: 50:             return line;
  9753     09AD  3030               	movlw	(low (_line| (0+256)))& (0+255)
  9754     09AE  29D3               	goto	l680
  9755     09AF                     l5703:
  9756                           
  9757                           ;UART.c: 53:         line[index] = EUSART_Read();
  9758     09AF  3188  2000  3189   	fcall	_EUSART_Read
  9759     09B2  0020               	movlb	0	; select bank0
  9760     09B3  00BF               	movwf	??_readLine
  9761     09B4  0876               	movf	readLine@index,w
  9762     09B5  3E30               	addlw	(low (_line| (0+256)))& (0+255)
  9763     09B6  0086               	movwf	6
  9764     09B7  3001               	movlw	1	; select bank2/3
  9765     09B8  0087               	movwf	7
  9766     09B9  083F               	movf	??_readLine,w
  9767     09BA  0081               	movwf	1
  9768     09BB                     l5705:
  9769                           
  9770                           ;UART.c: 54:         if (line[index] == '\n') {
  9771     09BB  0876               	movf	readLine@index,w
  9772     09BC  3E30               	addlw	(low (_line| (0+256)))& (0+255)
  9773     09BD  0086               	movwf	6
  9774     09BE  3001               	movlw	1	; select bank2/3
  9775     09BF  0087               	movwf	7
  9776     09C0  300A               	movlw	10
  9777     09C1  0601               	xorwf	1,w
  9778     09C2  1D03               	btfss	3,2
  9779     09C3  29C5               	goto	u5901
  9780     09C4  29C6               	goto	u5900
  9781     09C5                     u5901:
  9782     09C5  29CE               	goto	l5715
  9783     09C6                     u5900:
  9784     09C6                     l5707:
  9785                           
  9786                           ;UART.c: 55:             line[index + 1] = 0;
  9787     09C6  0876               	movf	readLine@index,w
  9788     09C7  3E31               	addlw	(low ((_line| (0+256)+1)))& (0+255)
  9789     09C8  0086               	movwf	6
  9790     09C9  3001               	movlw	1	; select bank2/3
  9791     09CA  0087               	movwf	7
  9792     09CB  0181               	clrf	1
  9793     09CC                     l5709:
  9794                           
  9795                           ;UART.c: 56:             index = 0;
  9796     09CC  01F6               	clrf	readLine@index
  9797     09CD  29AD               	goto	l5699
  9798     09CE                     l5715:
  9799                           
  9800                           ;UART.c: 59:         index++;
  9801     09CE  3001               	movlw	1
  9802     09CF  00BF               	movwf	??_readLine
  9803     09D0  083F               	movf	??_readLine,w
  9804     09D1  07F6               	addwf	readLine@index,f
  9805     09D2  297C               	goto	l678
  9806     09D3                     l680:
  9807     09D3  0008               	return
  9808     09D4                     __end_of_readLine:
  9809                           
  9810                           	psect	text12
  9811     14D2                     __ptext12:	
  9812 ;; *************** function _EUSART_is_rx_ready *****************
  9813 ;; Defined at:
  9814 ;;		line 137 in file "mcc_generated_files/eusart.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      _Bool 
  9821 ;; Registers used:
  9822 ;;		wreg, status,2, status,0
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;Total ram usage:        0 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 4
  9835 ;; This function calls:
  9836 ;;		Nothing
  9837 ;; This function is called by:
  9838 ;;		_readLine
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842     14D2                     _EUSART_is_rx_ready:	
  9843                           ;psect for function _EUSART_is_rx_ready
  9844                           
  9845     14D2                     l3601:	
  9846                           ;incstack = 0
  9847                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  9848                           
  9849                           
  9850                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  9851     14D2  0021               	movlb	1	; select bank1
  9852     14D3  084F               	movf	_eusartRxCount^(0+128),w	;volatile
  9853     14D4  1D03               	btfss	3,2
  9854     14D5  2CD7               	goto	u2871
  9855     14D6  2CD9               	goto	u2870
  9856     14D7                     u2871:
  9857     14D7  3001               	movlw	1
  9858     14D8  2CDA               	goto	u2880
  9859     14D9                     u2870:
  9860     14D9  3000               	movlw	0
  9861     14DA                     u2880:
  9862     14DA                     l338:
  9863     14DA  0008               	return
  9864     14DB                     __end_of_EUSART_is_rx_ready:
  9865                           
  9866                           	psect	text13
  9867     0800                     __ptext13:	
  9868 ;; *************** function _EUSART_Read *****************
  9869 ;; Defined at:
  9870 ;;		line 151 in file "mcc_generated_files/eusart.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;		None
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  readValue       1    5[COMMON] unsigned char 
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      unsigned char 
  9877 ;; Registers used:
  9878 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;Total ram usage:        2 bytes
  9889 ;; Hardware stack levels used: 1
  9890 ;; Hardware stack levels required when called: 4
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_readLine
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898     0800                     _EUSART_Read:	
  9899                           ;psect for function _EUSART_Read
  9900                           
  9901     0800                     l3605:	
  9902                           ;incstack = 0
  9903                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9904                           
  9905     0800                     l3607:	
  9906                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  9907                           
  9908                           
  9909                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  9910     0800  0021               	movlb	1	; select bank1
  9911     0801  084F               	movf	_eusartRxCount^(0+128),w	;volatile
  9912     0802  1903               	btfsc	3,2
  9913     0803  2805               	goto	u2891
  9914     0804  2806               	goto	u2890
  9915     0805                     u2891:
  9916     0805  2800               	goto	l3607
  9917     0806                     u2890:
  9918     0806                     l3609:
  9919                           
  9920                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  9921     0806  0877               	movf	_eusartRxTail,w	;volatile
  9922     0807  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  9923     0808  0086               	movwf	6
  9924     0809  0187               	clrf	7
  9925     080A  0801               	movf	1,w
  9926     080B  00CE               	movwf	_eusartRxLastError^(0+128)	;volatile
  9927                           
  9928                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  9929     080C  0877               	movf	_eusartRxTail,w
  9930     080D  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  9931     080E  0086               	movwf	6
  9932     080F  3001               	movlw	1	; select bank2/3
  9933     0810  0087               	movwf	7
  9934     0811  0801               	movf	1,w
  9935     0812  00F5               	movwf	EUSART_Read@readValue
  9936     0813                     l3611:
  9937     0813  3001               	movlw	1
  9938     0814  00F4               	movwf	??_EUSART_Read
  9939     0815  0874               	movf	??_EUSART_Read,w
  9940     0816  07F7               	addwf	_eusartRxTail,f	;volatile
  9941     0817                     l3613:
  9942                           
  9943                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  9944     0817  3008               	movlw	8
  9945     0818  0277               	subwf	_eusartRxTail,w	;volatile
  9946     0819  1C03               	skipc
  9947     081A  281C               	goto	u2901
  9948     081B  281D               	goto	u2900
  9949     081C                     u2901:
  9950     081C  281E               	goto	l3617
  9951     081D                     u2900:
  9952     081D                     l3615:
  9953                           
  9954                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  9955     081D  01F7               	clrf	_eusartRxTail	;volatile
  9956     081E                     l3617:
  9957                           
  9958                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  9959     081E  1291               	bcf	17,5	;volatile
  9960     081F                     l3619:
  9961                           
  9962                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  9963     081F  3001               	movlw	1
  9964     0820  02CF               	subwf	_eusartRxCount^(0+128),f	;volatile
  9965     0821                     l3621:
  9966                           
  9967                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  9968     0821  1691               	bsf	17,5	;volatile
  9969     0822                     l3623:
  9970                           
  9971                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  9972     0822  0875               	movf	EUSART_Read@readValue,w
  9973     0823                     l351:
  9974     0823  0008               	return
  9975     0824                     __end_of_EUSART_Read:
  9976                           
  9977                           	psect	text14
  9978     1471                     __ptext14:	
  9979 ;; *************** function _PI_SetSetpoint *****************
  9980 ;; Defined at:
  9981 ;;		line 27 in file "PI.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  value           1    wreg     unsigned char 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  value           1    4[COMMON] unsigned char 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      void 
  9988 ;; Registers used:
  9989 ;;		wreg
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;Total ram usage:        1 bytes
 10000 ;; Hardware stack levels used: 1
 10001 ;; Hardware stack levels required when called: 4
 10002 ;; This function calls:
 10003 ;;		Nothing
 10004 ;; This function is called by:
 10005 ;;		_uartHandler
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009     1471                     _PI_SetSetpoint:	
 10010                           ;psect for function _PI_SetSetpoint
 10011                           
 10012                           
 10013                           ;incstack = 0
 10014                           ; Regs used in _PI_SetSetpoint: [wreg]
 10015                           ;PI_SetSetpoint@value stored from wreg
 10016     1471  00F4               	movwf	PI_SetSetpoint@value
 10017     1472                     l4233:
 10018                           
 10019                           ;PI.c: 28:     setpoint = value;
 10020     1472  0874               	movf	PI_SetSetpoint@value,w
 10021     1473  0021               	movlb	1	; select bank1
 10022     1474  00EF               	movwf	_setpoint^(0+128)
 10023     1475                     l616:
 10024     1475  0008               	return
 10025     1476                     __end_of_PI_SetSetpoint:
 10026                           
 10027                           	psect	text15
 10028     14F9                     __ptext15:	
 10029 ;; *************** function _PI_SetKp *****************
 10030 ;; Defined at:
 10031 ;;		line 38 in file "PI.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;  value           4   10[BANK1 ] float 
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;		None
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  1    wreg      void 
 10038 ;; Registers used:
 10039 ;;		wreg
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10045 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;Total ram usage:        4 bytes
 10050 ;; Hardware stack levels used: 1
 10051 ;; Hardware stack levels required when called: 4
 10052 ;; This function calls:
 10053 ;;		Nothing
 10054 ;; This function is called by:
 10055 ;;		_uartHandler
 10056 ;; This function uses a non-reentrant model
 10057 ;;
 10058                           
 10059     14F9                     _PI_SetKp:	
 10060                           ;psect for function _PI_SetKp
 10061                           
 10062     14F9                     l4243:	
 10063                           ;incstack = 0
 10064                           ; Regs used in _PI_SetKp: [wreg]
 10065                           
 10066                           
 10067                           ;PI.c: 39:     kp = value;
 10068     14F9  0021               	movlb	1	; select bank1
 10069     14FA  085F               	movf	(PI_SetKp@value+3)^(0+128),w
 10070     14FB  00E7               	movwf	(_kp+3)^(0+128)
 10071     14FC  085E               	movf	(PI_SetKp@value+2)^(0+128),w
 10072     14FD  00E6               	movwf	(_kp+2)^(0+128)
 10073     14FE  085D               	movf	(PI_SetKp@value+1)^(0+128),w
 10074     14FF  00E5               	movwf	(_kp+1)^(0+128)
 10075     1500  085C               	movf	PI_SetKp@value^(0+128),w
 10076     1501  00E4               	movwf	_kp^(0+128)
 10077     1502                     l625:
 10078     1502  0008               	return
 10079     1503                     __end_of_PI_SetKp:
 10080                           
 10081                           	psect	text16
 10082     14EF                     __ptext16:	
 10083 ;; *************** function _PI_SetKi *****************
 10084 ;; Defined at:
 10085 ;;		line 45 in file "PI.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;  value           4   10[BANK1 ] float 
 10088 ;; Auto vars:     Size  Location     Type
 10089 ;;		None
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  1    wreg      void 
 10092 ;; Registers used:
 10093 ;;		wreg
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10099 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10102 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10103 ;;Total ram usage:        4 bytes
 10104 ;; Hardware stack levels used: 1
 10105 ;; Hardware stack levels required when called: 4
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_uartHandler
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113     14EF                     _PI_SetKi:	
 10114                           ;psect for function _PI_SetKi
 10115                           
 10116     14EF                     l4249:	
 10117                           ;incstack = 0
 10118                           ; Regs used in _PI_SetKi: [wreg]
 10119                           
 10120                           
 10121                           ;PI.c: 46:     ki = value;
 10122     14EF  0021               	movlb	1	; select bank1
 10123     14F0  085F               	movf	(PI_SetKi@value+3)^(0+128),w
 10124     14F1  00EB               	movwf	(_ki+3)^(0+128)
 10125     14F2  085E               	movf	(PI_SetKi@value+2)^(0+128),w
 10126     14F3  00EA               	movwf	(_ki+2)^(0+128)
 10127     14F4  085D               	movf	(PI_SetKi@value+1)^(0+128),w
 10128     14F5  00E9               	movwf	(_ki+1)^(0+128)
 10129     14F6  085C               	movf	PI_SetKi@value^(0+128),w
 10130     14F7  00E8               	movwf	_ki^(0+128)
 10131     14F8                     l631:
 10132     14F8  0008               	return
 10133     14F9                     __end_of_PI_SetKi:
 10134                           
 10135                           	psect	text17
 10136     0C99                     __ptext17:	
 10137 ;; *************** function _printLogs *****************
 10138 ;; Defined at:
 10139 ;;		line 139 in file "UART.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;		None
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;		None
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      void 
 10146 ;; Registers used:
 10147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;Total ram usage:        4 bytes
 10158 ;; Hardware stack levels used: 1
 10159 ;; Hardware stack levels required when called: 11
 10160 ;; This function calls:
 10161 ;;		_PI_GetDutycycle
 10162 ;;		_PI_GetKi
 10163 ;;		_PI_GetKp
 10164 ;;		_PI_GetSensorHeight
 10165 ;;		_PI_GetSetPoint
 10166 ;;		_printFloat
 10167 ;;		_printNewLine
 10168 ;;		_printUint32
 10169 ;;		_printf
 10170 ;; This function is called by:
 10171 ;;		_main
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175     0C99                     _printLogs:	
 10176                           ;psect for function _printLogs
 10177                           
 10178     0C99                     l5831:	
 10179                           ;incstack = 0
 10180                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10181                           
 10182                           
 10183                           ;UART.c: 141:     if (mustPrintLogs) {
 10184     0C99  0021               	movlb	1	; select bank1
 10185     0C9A  086E               	movf	_mustPrintLogs^(0+128),w
 10186     0C9B  1903               	btfsc	3,2
 10187     0C9C  2C9E               	goto	u6041
 10188     0C9D  2C9F               	goto	u6040
 10189     0C9E                     u6041:
 10190     0C9E  2D4C               	goto	l730
 10191     0C9F                     u6040:
 10192     0C9F                     l5833:
 10193                           
 10194                           ;UART.c: 142:         printf("hoogte: ");
 10195     0C9F  3089               	movlw	low (STR_7| (0+32768))
 10196     0CA0  0020               	movlb	0	; select bank0
 10197     0CA1  00BA               	movwf	printf@fmt
 10198     0CA2  3098               	movlw	high (STR_7| (0+32768))
 10199     0CA3  00BB               	movwf	printf@fmt+1
 10200     0CA4  3195  258B  318C   	fcall	_printf
 10201     0CA7                     l5835:
 10202                           
 10203                           ;UART.c: 143:         printUint32(PI_GetSensorHeight(), 3);
 10204     0CA7  3194  2454  318C   	fcall	_PI_GetSensorHeight
 10205     0CAA  0021               	movlb	1	; select bank1
 10206     0CAB  00DC               	movwf	??_printLogs^(0+128)
 10207     0CAC  01DD               	clrf	(??_printLogs^(0+128)+1)
 10208     0CAD  01DE               	clrf	(??_printLogs^(0+128)+2)
 10209     0CAE  01DF               	clrf	(??_printLogs^(0+128)+3)
 10210     0CAF  085F               	movf	(??_printLogs+3)^(0+128),w
 10211     0CB0  0020               	movlb	0	; select bank0
 10212     0CB1  00B0               	movwf	printUint32@getal+3
 10213     0CB2  0021               	movlb	1	; select bank1
 10214     0CB3  085E               	movf	(??_printLogs+2)^(0+128),w
 10215     0CB4  0020               	movlb	0	; select bank0
 10216     0CB5  00AF               	movwf	printUint32@getal+2
 10217     0CB6  0021               	movlb	1	; select bank1
 10218     0CB7  085D               	movf	(??_printLogs+1)^(0+128),w
 10219     0CB8  0020               	movlb	0	; select bank0
 10220     0CB9  00AE               	movwf	printUint32@getal+1
 10221     0CBA  0021               	movlb	1	; select bank1
 10222     0CBB  085C               	movf	??_printLogs^(0+128),w
 10223     0CBC  0020               	movlb	0	; select bank0
 10224     0CBD  00AD               	movwf	printUint32@getal
 10225     0CBE  3003               	movlw	3
 10226     0CBF  00B1               	movwf	printUint32@leadingZeros
 10227     0CC0  318A  22ED  318C   	fcall	_printUint32
 10228     0CC3                     l5837:
 10229                           
 10230                           ;UART.c: 144:         printf(", setPoint: ");
 10231     0CC3  3059               	movlw	low (STR_8| (0+32768))
 10232     0CC4  0020               	movlb	0	; select bank0
 10233     0CC5  00BA               	movwf	printf@fmt
 10234     0CC6  3098               	movlw	high (STR_8| (0+32768))
 10235     0CC7  00BB               	movwf	printf@fmt+1
 10236     0CC8  3195  258B  318C   	fcall	_printf
 10237                           
 10238                           ;UART.c: 145:         printUint32(PI_GetSetPoint(), 3);
 10239     0CCB  3194  2457  318C   	fcall	_PI_GetSetPoint
 10240     0CCE  0021               	movlb	1	; select bank1
 10241     0CCF  00DC               	movwf	??_printLogs^(0+128)
 10242     0CD0  01DD               	clrf	(??_printLogs^(0+128)+1)
 10243     0CD1  01DE               	clrf	(??_printLogs^(0+128)+2)
 10244     0CD2  01DF               	clrf	(??_printLogs^(0+128)+3)
 10245     0CD3  085F               	movf	(??_printLogs+3)^(0+128),w
 10246     0CD4  0020               	movlb	0	; select bank0
 10247     0CD5  00B0               	movwf	printUint32@getal+3
 10248     0CD6  0021               	movlb	1	; select bank1
 10249     0CD7  085E               	movf	(??_printLogs+2)^(0+128),w
 10250     0CD8  0020               	movlb	0	; select bank0
 10251     0CD9  00AF               	movwf	printUint32@getal+2
 10252     0CDA  0021               	movlb	1	; select bank1
 10253     0CDB  085D               	movf	(??_printLogs+1)^(0+128),w
 10254     0CDC  0020               	movlb	0	; select bank0
 10255     0CDD  00AE               	movwf	printUint32@getal+1
 10256     0CDE  0021               	movlb	1	; select bank1
 10257     0CDF  085C               	movf	??_printLogs^(0+128),w
 10258     0CE0  0020               	movlb	0	; select bank0
 10259     0CE1  00AD               	movwf	printUint32@getal
 10260     0CE2  3003               	movlw	3
 10261     0CE3  00B1               	movwf	printUint32@leadingZeros
 10262     0CE4  318A  22ED  318C   	fcall	_printUint32
 10263     0CE7                     l5839:
 10264                           
 10265                           ;UART.c: 146:         printf(", duty cycle: ");
 10266     0CE7  304A               	movlw	low (STR_9| (0+32768))
 10267     0CE8  0020               	movlb	0	; select bank0
 10268     0CE9  00BA               	movwf	printf@fmt
 10269     0CEA  3098               	movlw	high (STR_9| (0+32768))
 10270     0CEB  00BB               	movwf	printf@fmt+1
 10271     0CEC  3195  258B  318C   	fcall	_printf
 10272     0CEF                     l5841:
 10273                           
 10274                           ;UART.c: 147:         printUint32((uint16_t) PI_GetDutycycle(), 3);
 10275     0CEF  3194  24A0  318C   	fcall	_PI_GetDutycycle
 10276     0CF2  0874               	movf	?_PI_GetDutycycle,w
 10277     0CF3  0021               	movlb	1	; select bank1
 10278     0CF4  00DC               	movwf	??_printLogs^(0+128)
 10279     0CF5  0875               	movf	?_PI_GetDutycycle+1,w
 10280     0CF6  00DD               	movwf	(??_printLogs^(0+128)+1)
 10281     0CF7  01DE               	clrf	(??_printLogs^(0+128)+2)
 10282     0CF8  01DF               	clrf	(??_printLogs^(0+128)+3)
 10283     0CF9  085F               	movf	(??_printLogs+3)^(0+128),w
 10284     0CFA  0020               	movlb	0	; select bank0
 10285     0CFB  00B0               	movwf	printUint32@getal+3
 10286     0CFC  0021               	movlb	1	; select bank1
 10287     0CFD  085E               	movf	(??_printLogs+2)^(0+128),w
 10288     0CFE  0020               	movlb	0	; select bank0
 10289     0CFF  00AF               	movwf	printUint32@getal+2
 10290     0D00  0021               	movlb	1	; select bank1
 10291     0D01  085D               	movf	(??_printLogs+1)^(0+128),w
 10292     0D02  0020               	movlb	0	; select bank0
 10293     0D03  00AE               	movwf	printUint32@getal+1
 10294     0D04  0021               	movlb	1	; select bank1
 10295     0D05  085C               	movf	??_printLogs^(0+128),w
 10296     0D06  0020               	movlb	0	; select bank0
 10297     0D07  00AD               	movwf	printUint32@getal
 10298     0D08  3003               	movlw	3
 10299     0D09  00B1               	movwf	printUint32@leadingZeros
 10300     0D0A  318A  22ED  318C   	fcall	_printUint32
 10301                           
 10302                           ;UART.c: 148:         printf(", ki: ");
 10303     0D0D  3092               	movlw	low (STR_10| (0+32768))
 10304     0D0E  0020               	movlb	0	; select bank0
 10305     0D0F  00BA               	movwf	printf@fmt
 10306     0D10  3098               	movlw	high (STR_10| (0+32768))
 10307     0D11  00BB               	movwf	printf@fmt+1
 10308     0D12  3195  258B  318C   	fcall	_printf
 10309                           
 10310                           ;UART.c: 149:         printFloat(PI_GetKi());
 10311     0D15  3195  25AB  318C   	fcall	_PI_GetKi
 10312     0D18  0020               	movlb	0	; select bank0
 10313     0D19  0823               	movf	?_PI_GetKi+3,w
 10314     0D1A  0021               	movlb	1	; select bank1
 10315     0D1B  00D5               	movwf	(printFloat@value+3)^(0+128)
 10316     0D1C  0020               	movlb	0	; select bank0
 10317     0D1D  0822               	movf	?_PI_GetKi+2,w
 10318     0D1E  0021               	movlb	1	; select bank1
 10319     0D1F  00D4               	movwf	(printFloat@value+2)^(0+128)
 10320     0D20  0020               	movlb	0	; select bank0
 10321     0D21  0821               	movf	?_PI_GetKi+1,w
 10322     0D22  0021               	movlb	1	; select bank1
 10323     0D23  00D3               	movwf	(printFloat@value+1)^(0+128)
 10324     0D24  0020               	movlb	0	; select bank0
 10325     0D25  0820               	movf	?_PI_GetKi,w
 10326     0D26  0021               	movlb	1	; select bank1
 10327     0D27  00D2               	movwf	printFloat@value^(0+128)
 10328     0D28  318B  234F  318C   	fcall	_printFloat
 10329                           
 10330                           ;UART.c: 150:         printf(", kp: ");
 10331     0D2B  3099               	movlw	low (STR_11| (0+32768))
 10332     0D2C  0020               	movlb	0	; select bank0
 10333     0D2D  00BA               	movwf	printf@fmt
 10334     0D2E  3098               	movlw	high (STR_11| (0+32768))
 10335     0D2F  00BB               	movwf	printf@fmt+1
 10336     0D30  3195  258B  318C   	fcall	_printf
 10337                           
 10338                           ;UART.c: 151:         printFloat(PI_GetKp());
 10339     0D33  3195  25BC  318C   	fcall	_PI_GetKp
 10340     0D36  0020               	movlb	0	; select bank0
 10341     0D37  0823               	movf	?_PI_GetKp+3,w
 10342     0D38  0021               	movlb	1	; select bank1
 10343     0D39  00D5               	movwf	(printFloat@value+3)^(0+128)
 10344     0D3A  0020               	movlb	0	; select bank0
 10345     0D3B  0822               	movf	?_PI_GetKp+2,w
 10346     0D3C  0021               	movlb	1	; select bank1
 10347     0D3D  00D4               	movwf	(printFloat@value+2)^(0+128)
 10348     0D3E  0020               	movlb	0	; select bank0
 10349     0D3F  0821               	movf	?_PI_GetKp+1,w
 10350     0D40  0021               	movlb	1	; select bank1
 10351     0D41  00D3               	movwf	(printFloat@value+1)^(0+128)
 10352     0D42  0020               	movlb	0	; select bank0
 10353     0D43  0820               	movf	?_PI_GetKp,w
 10354     0D44  0021               	movlb	1	; select bank1
 10355     0D45  00D2               	movwf	printFloat@value^(0+128)
 10356     0D46  318B  234F  318C   	fcall	_printFloat
 10357     0D49                     l5843:
 10358                           
 10359                           ;UART.c: 152:         printNewLine();
 10360     0D49  3194  24C9  318C   	fcall	_printNewLine
 10361     0D4C                     l730:
 10362     0D4C  0008               	return
 10363     0D4D                     __end_of_printLogs:
 10364                           
 10365                           	psect	text18
 10366     14C9                     __ptext18:	
 10367 ;; *************** function _printNewLine *****************
 10368 ;; Defined at:
 10369 ;;		line 25 in file "UART.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1    wreg      void 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;Total ram usage:        0 bytes
 10388 ;; Hardware stack levels used: 1
 10389 ;; Hardware stack levels required when called: 5
 10390 ;; This function calls:
 10391 ;;		_EUSART_Write
 10392 ;; This function is called by:
 10393 ;;		_readLine
 10394 ;;		_printLogs
 10395 ;;		_uartHandler
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399     14C9                     _printNewLine:	
 10400                           ;psect for function _printNewLine
 10401                           
 10402     14C9                     l5233:	
 10403                           ;incstack = 0
 10404                           ; Regs used in _printNewLine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10405                           
 10406                           
 10407                           ;UART.c: 26:     EUSART_Write('\r');
 10408     14C9  300D               	movlw	13
 10409     14CA  3187  27D5  3194   	fcall	_EUSART_Write
 10410                           
 10411                           ;UART.c: 27:     EUSART_Write('\n');
 10412     14CD  300A               	movlw	10
 10413     14CE  3187  27D5  3194   	fcall	_EUSART_Write
 10414     14D1                     l673:
 10415     14D1  0008               	return
 10416     14D2                     __end_of_printNewLine:
 10417                           
 10418                           	psect	text19
 10419     0B4F                     __ptext19:	
 10420 ;; *************** function _printFloat *****************
 10421 ;; Defined at:
 10422 ;;		line 131 in file "UART.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;  value           4    0[BANK1 ] float 
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;  naComma         4    4[BANK1 ] unsigned long 
 10427 ;;  voorComma       2    8[BANK1 ] unsigned short 
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      void 
 10430 ;; Registers used:
 10431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10437 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;Total ram usage:       10 bytes
 10442 ;; Hardware stack levels used: 1
 10443 ;; Hardware stack levels required when called: 10
 10444 ;; This function calls:
 10445 ;;		___flmul
 10446 ;;		___flsub
 10447 ;;		___fltol
 10448 ;;		___xxtofl
 10449 ;;		_printUint32
 10450 ;;		_printf
 10451 ;; This function is called by:
 10452 ;;		_printLogs
 10453 ;;		_uartHandler
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457     0B4F                     _printFloat:	
 10458                           ;psect for function _printFloat
 10459                           
 10460     0B4F                     l5781:	
 10461                           ;incstack = 0
 10462                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10463                           
 10464                           
 10465                           ;UART.c: 132:     uint16_t voorComma = (uint16_t) value;
 10466     0B4F  0021               	movlb	1	; select bank1
 10467     0B50  0855               	movf	(printFloat@value+3)^(0+128),w
 10468     0B51  0020               	movlb	0	; select bank0
 10469     0B52  00E7               	movwf	___fltol@f1+3
 10470     0B53  0021               	movlb	1	; select bank1
 10471     0B54  0854               	movf	(printFloat@value+2)^(0+128),w
 10472     0B55  0020               	movlb	0	; select bank0
 10473     0B56  00E6               	movwf	___fltol@f1+2
 10474     0B57  0021               	movlb	1	; select bank1
 10475     0B58  0853               	movf	(printFloat@value+1)^(0+128),w
 10476     0B59  0020               	movlb	0	; select bank0
 10477     0B5A  00E5               	movwf	___fltol@f1+1
 10478     0B5B  0021               	movlb	1	; select bank1
 10479     0B5C  0852               	movf	printFloat@value^(0+128),w
 10480     0B5D  0020               	movlb	0	; select bank0
 10481     0B5E  00E4               	movwf	___fltol@f1
 10482     0B5F  3187  2764  318B   	fcall	___fltol
 10483     0B62  0020               	movlb	0	; select bank0
 10484     0B63  0865               	movf	?___fltol+1,w
 10485     0B64  0021               	movlb	1	; select bank1
 10486     0B65  00DB               	movwf	(printFloat@voorComma+1)^(0+128)
 10487     0B66  0020               	movlb	0	; select bank0
 10488     0B67  0864               	movf	?___fltol,w
 10489     0B68  0021               	movlb	1	; select bank1
 10490     0B69  00DA               	movwf	printFloat@voorComma^(0+128)
 10491                           
 10492                           ;UART.c: 133:     uint32_t naComma = (uint32_t) ((value - voorComma)*100000);
 10493     0B6A  0855               	movf	(printFloat@value+3)^(0+128),w
 10494     0B6B  0020               	movlb	0	; select bank0
 10495     0B6C  00C9               	movwf	___flsub@b+3
 10496     0B6D  0021               	movlb	1	; select bank1
 10497     0B6E  0854               	movf	(printFloat@value+2)^(0+128),w
 10498     0B6F  0020               	movlb	0	; select bank0
 10499     0B70  00C8               	movwf	___flsub@b+2
 10500     0B71  0021               	movlb	1	; select bank1
 10501     0B72  0853               	movf	(printFloat@value+1)^(0+128),w
 10502     0B73  0020               	movlb	0	; select bank0
 10503     0B74  00C7               	movwf	___flsub@b+1
 10504     0B75  0021               	movlb	1	; select bank1
 10505     0B76  0852               	movf	printFloat@value^(0+128),w
 10506     0B77  0020               	movlb	0	; select bank0
 10507     0B78  00C6               	movwf	___flsub@b
 10508     0B79  0021               	movlb	1	; select bank1
 10509     0B7A  085A               	movf	printFloat@voorComma^(0+128),w
 10510     0B7B  0020               	movlb	0	; select bank0
 10511     0B7C  00A0               	movwf	___xxtofl@val
 10512     0B7D  0021               	movlb	1	; select bank1
 10513     0B7E  085B               	movf	(printFloat@voorComma+1)^(0+128),w
 10514     0B7F  0020               	movlb	0	; select bank0
 10515     0B80  00A1               	movwf	___xxtofl@val+1
 10516     0B81  01A2               	clrf	___xxtofl@val+2
 10517     0B82  01A3               	clrf	___xxtofl@val+3
 10518     0B83  3000               	movlw	0
 10519     0B84  318B  23EE  318B   	fcall	___xxtofl
 10520     0B87  0020               	movlb	0	; select bank0
 10521     0B88  0823               	movf	?___xxtofl+3,w
 10522     0B89  00C5               	movwf	___flsub@a+3
 10523     0B8A  0822               	movf	?___xxtofl+2,w
 10524     0B8B  00C4               	movwf	___flsub@a+2
 10525     0B8C  0821               	movf	?___xxtofl+1,w
 10526     0B8D  00C3               	movwf	___flsub@a+1
 10527     0B8E  0820               	movf	?___xxtofl,w
 10528     0B8F  00C2               	movwf	___flsub@a
 10529     0B90  3196  26D9  318B   	fcall	___flsub
 10530     0B93  0020               	movlb	0	; select bank0
 10531     0B94  0845               	movf	?___flsub+3,w
 10532     0B95  00D1               	movwf	___flmul@a+3
 10533     0B96  0844               	movf	?___flsub+2,w
 10534     0B97  00D0               	movwf	___flmul@a+2
 10535     0B98  0843               	movf	?___flsub+1,w
 10536     0B99  00CF               	movwf	___flmul@a+1
 10537     0B9A  0842               	movf	?___flsub,w
 10538     0B9B  00CE               	movwf	___flmul@a
 10539     0B9C  3047               	movlw	71
 10540     0B9D  00CD               	movwf	___flmul@b+3
 10541     0B9E  30C3               	movlw	195
 10542     0B9F  00CC               	movwf	___flmul@b+2
 10543     0BA0  3050               	movlw	80
 10544     0BA1  00CB               	movwf	___flmul@b+1
 10545     0BA2  3000               	movlw	0
 10546     0BA3  00CA               	movwf	___flmul@b
 10547     0BA4  3180  2076  318B   	fcall	___flmul
 10548     0BA7  0020               	movlb	0	; select bank0
 10549     0BA8  084D               	movf	?___flmul+3,w
 10550     0BA9  00E7               	movwf	___fltol@f1+3
 10551     0BAA  084C               	movf	?___flmul+2,w
 10552     0BAB  00E6               	movwf	___fltol@f1+2
 10553     0BAC  084B               	movf	?___flmul+1,w
 10554     0BAD  00E5               	movwf	___fltol@f1+1
 10555     0BAE  084A               	movf	?___flmul,w
 10556     0BAF  00E4               	movwf	___fltol@f1
 10557     0BB0  3187  2764  318B   	fcall	___fltol
 10558     0BB3  0020               	movlb	0	; select bank0
 10559     0BB4  0867               	movf	?___fltol+3,w
 10560     0BB5  0021               	movlb	1	; select bank1
 10561     0BB6  00D9               	movwf	(printFloat@naComma+3)^(0+128)
 10562     0BB7  0020               	movlb	0	; select bank0
 10563     0BB8  0866               	movf	?___fltol+2,w
 10564     0BB9  0021               	movlb	1	; select bank1
 10565     0BBA  00D8               	movwf	(printFloat@naComma+2)^(0+128)
 10566     0BBB  0020               	movlb	0	; select bank0
 10567     0BBC  0865               	movf	?___fltol+1,w
 10568     0BBD  0021               	movlb	1	; select bank1
 10569     0BBE  00D7               	movwf	(printFloat@naComma+1)^(0+128)
 10570     0BBF  0020               	movlb	0	; select bank0
 10571     0BC0  0864               	movf	?___fltol,w
 10572     0BC1  0021               	movlb	1	; select bank1
 10573     0BC2  00D6               	movwf	printFloat@naComma^(0+128)
 10574     0BC3                     l5783:
 10575                           
 10576                           ;UART.c: 134:     printUint32(voorComma, 0);
 10577     0BC3  085A               	movf	printFloat@voorComma^(0+128),w
 10578     0BC4  0020               	movlb	0	; select bank0
 10579     0BC5  00AD               	movwf	printUint32@getal
 10580     0BC6  0021               	movlb	1	; select bank1
 10581     0BC7  085B               	movf	(printFloat@voorComma+1)^(0+128),w
 10582     0BC8  0020               	movlb	0	; select bank0
 10583     0BC9  00AE               	movwf	printUint32@getal+1
 10584     0BCA  01AF               	clrf	printUint32@getal+2
 10585     0BCB  01B0               	clrf	printUint32@getal+3
 10586     0BCC  01B1               	clrf	printUint32@leadingZeros
 10587     0BCD  318A  22ED  318B   	fcall	_printUint32
 10588     0BD0                     l5785:
 10589                           
 10590                           ;UART.c: 135:     printf(",");
 10591     0BD0  30AD               	movlw	low (STR_6| (0+32768))
 10592     0BD1  0020               	movlb	0	; select bank0
 10593     0BD2  00BA               	movwf	printf@fmt
 10594     0BD3  3098               	movlw	high (STR_6| (0+32768))
 10595     0BD4  00BB               	movwf	printf@fmt+1
 10596     0BD5  3195  258B  318B   	fcall	_printf
 10597     0BD8                     l5787:
 10598                           
 10599                           ;UART.c: 136:     printUint32(naComma, 5);
 10600     0BD8  0021               	movlb	1	; select bank1
 10601     0BD9  0859               	movf	(printFloat@naComma+3)^(0+128),w
 10602     0BDA  0020               	movlb	0	; select bank0
 10603     0BDB  00B0               	movwf	printUint32@getal+3
 10604     0BDC  0021               	movlb	1	; select bank1
 10605     0BDD  0858               	movf	(printFloat@naComma+2)^(0+128),w
 10606     0BDE  0020               	movlb	0	; select bank0
 10607     0BDF  00AF               	movwf	printUint32@getal+2
 10608     0BE0  0021               	movlb	1	; select bank1
 10609     0BE1  0857               	movf	(printFloat@naComma+1)^(0+128),w
 10610     0BE2  0020               	movlb	0	; select bank0
 10611     0BE3  00AE               	movwf	printUint32@getal+1
 10612     0BE4  0021               	movlb	1	; select bank1
 10613     0BE5  0856               	movf	printFloat@naComma^(0+128),w
 10614     0BE6  0020               	movlb	0	; select bank0
 10615     0BE7  00AD               	movwf	printUint32@getal
 10616     0BE8  3005               	movlw	5
 10617     0BE9  00B1               	movwf	printUint32@leadingZeros
 10618     0BEA  318A  22ED  318B   	fcall	_printUint32
 10619     0BED                     l726:
 10620     0BED  0008               	return
 10621     0BEE                     __end_of_printFloat:
 10622                           
 10623                           	psect	text20
 10624     158B                     __ptext20:	
 10625 ;; *************** function _printf *****************
 10626 ;; Defined at:
 10627 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
 10630 ;;		 -> STR_18(12), STR_17(24), STR_16(13), STR_15(4), 
 10631 ;;		 -> STR_14(4), STR_13(24), STR_12(10), STR_11(7), 
 10632 ;;		 -> STR_10(7), STR_9(15), STR_8(13), STR_7(9), 
 10633 ;;		 -> STR_6(2), STR_5(22), 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  ret             2    0        int 
 10636 ;;  ap              1   28[BANK0 ] PTR void [1]
 10637 ;;		 -> ?_printf(2), 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  2   26[BANK0 ] int 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;Total ram usage:        3 bytes
 10652 ;; Hardware stack levels used: 1
 10653 ;; Hardware stack levels required when called: 9
 10654 ;; This function calls:
 10655 ;;		_vfprintf
 10656 ;; This function is called by:
 10657 ;;		_readLine
 10658 ;;		_printFloat
 10659 ;;		_printLogs
 10660 ;;		_uartHandler
 10661 ;;		_main
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665     158B                     _printf:	
 10666                           ;psect for function _printf
 10667                           
 10668     158B                     l5235:	
 10669                           ;incstack = 0
 10670                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10671                           
 10672     158B  303C               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10673     158C  0020               	movlb	0	; select bank0
 10674     158D  00BC               	movwf	printf@ap
 10675     158E                     l5237:
 10676     158E  3000               	movlw	0
 10677     158F  00B2               	movwf	vfprintf@fp
 10678     1590  00B3               	movwf	vfprintf@fp+1
 10679     1591  083B               	movf	printf@fmt+1,w
 10680     1592  00B5               	movwf	vfprintf@fmt+1
 10681     1593  083A               	movf	printf@fmt,w
 10682     1594  00B4               	movwf	vfprintf@fmt
 10683     1595  303C               	movlw	(low (printf@ap| 0))& (0+255)
 10684     1596  00B6               	movwf	vfprintf@ap
 10685     1597  3196  26BB  3195   	fcall	_vfprintf
 10686     159A                     l1494:
 10687     159A  0008               	return
 10688     159B                     __end_of_printf:
 10689                           
 10690                           	psect	text21
 10691     16BB                     __ptext21:	
 10692 ;; *************** function _vfprintf *****************
 10693 ;; Defined at:
 10694 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
 10697 ;;		 -> NULL(0), 
 10698 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
 10699 ;;		 -> STR_18(12), STR_17(24), STR_16(13), STR_15(4), 
 10700 ;;		 -> STR_14(4), STR_13(24), STR_12(10), STR_11(7), 
 10701 ;;		 -> STR_10(7), STR_9(15), STR_8(13), STR_7(9), 
 10702 ;;		 -> STR_6(2), STR_5(22), 
 10703 ;;  ap              1   22[BANK0 ] PTR PTR void 
 10704 ;;		 -> printf@ap(1), 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  cfmt            2   24[BANK0 ] PTR unsigned char 
 10707 ;;		 -> STR_18(12), STR_17(24), STR_16(13), STR_15(4), 
 10708 ;;		 -> STR_14(4), STR_13(24), STR_12(10), STR_11(7), 
 10709 ;;		 -> STR_10(7), STR_9(15), STR_8(13), STR_7(9), 
 10710 ;;		 -> STR_6(2), STR_5(22), 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  2   18[BANK0 ] int 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        8 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; Hardware stack levels required when called: 8
 10727 ;; This function calls:
 10728 ;;		_vfpfcnvrt
 10729 ;; This function is called by:
 10730 ;;		_printf
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734     16BB                     _vfprintf:	
 10735                           ;psect for function _vfprintf
 10736                           
 10737     16BB                     l5213:	
 10738                           ;incstack = 0
 10739                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10740                           
 10741                           
 10742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
 10743     16BB  0020               	movlb	0	; select bank0
 10744     16BC  0835               	movf	vfprintf@fmt+1,w
 10745     16BD  00B9               	movwf	vfprintf@cfmt+1
 10746     16BE  0834               	movf	vfprintf@fmt,w
 10747     16BF  00B8               	movwf	vfprintf@cfmt
 10748                           
 10749                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
 10750     16C0  2ECC               	goto	l5217
 10751     16C1                     l5215:
 10752                           
 10753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10754     16C1  0833               	movf	vfprintf@fp+1,w
 10755     16C2  00AB               	movwf	vfpfcnvrt@fp+1
 10756     16C3  0832               	movf	vfprintf@fp,w
 10757     16C4  00AA               	movwf	vfpfcnvrt@fp
 10758     16C5  3038               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10759     16C6  00AC               	movwf	vfpfcnvrt@fmt
 10760     16C7  0836               	movf	vfprintf@ap,w
 10761     16C8  00AD               	movwf	vfpfcnvrt@ap
 10762     16C9  3189  2131  3196   	fcall	_vfpfcnvrt
 10763     16CC                     l5217:
 10764                           
 10765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
 10766     16CC  0020               	movlb	0	; select bank0
 10767     16CD  0838               	movf	vfprintf@cfmt,w
 10768     16CE  0084               	movwf	4
 10769     16CF  0839               	movf	vfprintf@cfmt+1,w
 10770     16D0  0085               	movwf	5
 10771     16D1  0012               	moviw fsr0++
 10772     16D2  1D03               	btfss	3,2
 10773     16D3  2ED5               	goto	u5001
 10774     16D4  2ED6               	goto	u5000
 10775     16D5                     u5001:
 10776     16D5  2EC1               	goto	l5215
 10777     16D6                     u5000:
 10778     16D6                     l5219:
 10779                           
 10780                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
 10781     16D6  01B2               	clrf	?_vfprintf
 10782     16D7  01B3               	clrf	?_vfprintf+1
 10783     16D8                     l1526:
 10784     16D8  0008               	return
 10785     16D9                     __end_of_vfprintf:
 10786                           
 10787                           	psect	text22
 10788     0931                     __ptext22:	
 10789 ;; *************** function _vfpfcnvrt *****************
 10790 ;; Defined at:
 10791 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
 10794 ;;		 -> NULL(0), 
 10795 ;;  fmt             1   12[BANK0 ] PTR PTR unsigned char 
 10796 ;;		 -> vfprintf@cfmt(2), 
 10797 ;;  ap              1   13[BANK0 ] PTR PTR void 
 10798 ;;		 -> printf@ap(1), 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;  convarg         4    0        struct .
 10801 ;;  i               2    0        int 
 10802 ;;  done            2    0        int 
 10803 ;;  cp              2    0        PTR unsigned char 
 10804 ;;  c               1    0        unsigned char 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;Total ram usage:        8 bytes
 10819 ;; Hardware stack levels used: 1
 10820 ;; Hardware stack levels required when called: 7
 10821 ;; This function calls:
 10822 ;;		_fputc
 10823 ;; This function is called by:
 10824 ;;		_vfprintf
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828     0931                     _vfpfcnvrt:	
 10829                           ;psect for function _vfpfcnvrt
 10830                           
 10831     0931                     l4935:	
 10832                           ;incstack = 0
 10833                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10834                           
 10835                           
 10836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
 10837     0931  0020               	movlb	0	; select bank0
 10838     0932  082C               	movf	vfpfcnvrt@fmt,w
 10839     0933  0086               	movwf	6
 10840     0934  0187               	clrf	7
 10841     0935  3F40               	moviw [0]fsr1
 10842     0936  00AE               	movwf	??_vfpfcnvrt
 10843     0937  3F41               	moviw [1]fsr1
 10844     0938  00AF               	movwf	??_vfpfcnvrt+1
 10845     0939  082E               	movf	??_vfpfcnvrt,w
 10846     093A  0084               	movwf	4
 10847     093B  082F               	movf	??_vfpfcnvrt+1,w
 10848     093C  0085               	movwf	5
 10849     093D  0012               	moviw fsr0++
 10850     093E  3A25               	xorlw	37
 10851     093F  1D03               	btfss	3,2
 10852     0940  2942               	goto	u4441
 10853     0941  2943               	goto	u4440
 10854     0942                     u4441:
 10855     0942  2961               	goto	l4947
 10856     0943                     u4440:
 10857     0943                     l4937:
 10858                           
 10859                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
 10860     0943  082C               	movf	vfpfcnvrt@fmt,w
 10861     0944  0086               	movwf	6
 10862     0945  0187               	clrf	7
 10863     0946  3001               	movlw	1
 10864     0947  0781               	addwf	1,f
 10865     0948  3141               	addfsr 1,1
 10866     0949  1803               	skipnc
 10867     094A  0A81               	incf	1,f
 10868     094B                     l4939:
 10869                           
 10870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
 10871     094B  0021               	movlb	1	; select bank1
 10872     094C  01AC               	clrf	_width^(0+128)
 10873     094D  01AD               	clrf	(_width+1)^(0+128)
 10874     094E  1003               	clrc
 10875     094F  3000               	movlw	0
 10876     0950  1803               	btfsc	3,0
 10877     0951  3001               	movlw	1
 10878     0952  00C6               	movwf	_flags^(0+128)
 10879     0953                     l4941:
 10880                           
 10881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
 10882     0953  30FF               	movlw	255
 10883     0954  00AE               	movwf	_prec^(0+128)
 10884     0955  30FF               	movlw	255
 10885     0956  00AF               	movwf	(_prec^(0+128)+1)
 10886     0957                     l4943:
 10887                           
 10888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
 10889     0957  0020               	movlb	0	; select bank0
 10890     0958  082C               	movf	vfpfcnvrt@fmt,w
 10891     0959  0086               	movwf	6
 10892     095A  0187               	clrf	7
 10893     095B  3001               	movlw	1
 10894     095C  0781               	addwf	1,f
 10895     095D  3141               	addfsr 1,1
 10896     095E  1803               	skipnc
 10897     095F  0A81               	incf	1,f
 10898     0960  297B               	goto	l1520
 10899     0961                     l4947:
 10900                           
 10901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
 10902     0961  082C               	movf	vfpfcnvrt@fmt,w
 10903     0962  0086               	movwf	6
 10904     0963  0187               	clrf	7
 10905     0964  3F40               	moviw [0]fsr1
 10906     0965  00AE               	movwf	??_vfpfcnvrt
 10907     0966  3F41               	moviw [1]fsr1
 10908     0967  00AF               	movwf	??_vfpfcnvrt+1
 10909     0968  082E               	movf	??_vfpfcnvrt,w
 10910     0969  0084               	movwf	4
 10911     096A  082F               	movf	??_vfpfcnvrt+1,w
 10912     096B  0085               	movwf	5
 10913     096C  0800               	movf	0,w	;code access
 10914     096D  00B0               	movwf	??_vfpfcnvrt+2
 10915     096E  01B1               	clrf	??_vfpfcnvrt+3
 10916     096F  0830               	movf	??_vfpfcnvrt+2,w
 10917     0970  00A1               	movwf	fputc@c
 10918     0971  0831               	movf	??_vfpfcnvrt+3,w
 10919     0972  00A2               	movwf	fputc@c+1
 10920     0973  082B               	movf	vfpfcnvrt@fp+1,w
 10921     0974  00A4               	movwf	fputc@fp+1
 10922     0975  082A               	movf	vfpfcnvrt@fp,w
 10923     0976  00A3               	movwf	fputc@fp
 10924     0977  318A  228E  3189   	fcall	_fputc
 10925     097A  2957               	goto	l4943
 10926     097B                     l1520:
 10927     097B  0008               	return
 10928     097C                     __end_of_vfpfcnvrt:
 10929                           
 10930                           	psect	text23
 10931     0A8E                     __ptext23:	
 10932 ;; *************** function _fputc *****************
 10933 ;; Defined at:
 10934 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  c               2    1[BANK0 ] int 
 10937 ;;  fp              2    3[BANK0 ] PTR struct _IO_FILE
 10938 ;;		 -> NULL(0), 
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;		None
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  2    1[BANK0 ] int 
 10943 ;; Registers used:
 10944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;Total ram usage:        9 bytes
 10955 ;; Hardware stack levels used: 1
 10956 ;; Hardware stack levels required when called: 6
 10957 ;; This function calls:
 10958 ;;		_putch
 10959 ;; This function is called by:
 10960 ;;		_vfpfcnvrt
 10961 ;; This function uses a non-reentrant model
 10962 ;;
 10963                           
 10964     0A8E                     _fputc:	
 10965                           ;psect for function _fputc
 10966                           
 10967     0A8E                     l4919:	
 10968                           ;incstack = 0
 10969                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10970                           
 10971     0A8E  0020               	movlb	0	; select bank0
 10972     0A8F  0823               	movf	fputc@fp,w
 10973     0A90  0424               	iorwf	fputc@fp+1,w
 10974     0A91  1903               	btfsc	3,2
 10975     0A92  2A94               	goto	u4401
 10976     0A93  2A95               	goto	u4400
 10977     0A94                     u4401:
 10978     0A94  2A9B               	goto	l4923
 10979     0A95                     u4400:
 10980     0A95                     l4921:
 10981     0A95  0823               	movf	fputc@fp,w
 10982     0A96  0424               	iorwf	fputc@fp+1,w
 10983     0A97  1D03               	btfss	3,2
 10984     0A98  2A9A               	goto	u4411
 10985     0A99  2A9B               	goto	u4410
 10986     0A9A                     u4411:
 10987     0A9A  2AA0               	goto	l4925
 10988     0A9B                     u4410:
 10989     0A9B                     l4923:
 10990     0A9B  0821               	movf	fputc@c,w
 10991     0A9C  3194  24B2  318A   	fcall	_putch
 10992     0A9F  2AEC               	goto	l1538
 10993     0AA0                     l4925:
 10994     0AA0  0823               	movf	fputc@fp,w
 10995     0AA1  0086               	movwf	6
 10996     0AA2  0824               	movf	fputc@fp+1,w
 10997     0AA3  0087               	movwf	7
 10998     0AA4  3149               	addfsr 1,9
 10999     0AA5  0016               	moviw fsr1++
 11000     0AA6  0401               	iorwf	1,w
 11001     0AA7  1903               	btfsc	3,2
 11002     0AA8  2AAA               	goto	u4421
 11003     0AA9  2AAB               	goto	u4420
 11004     0AAA                     u4421:
 11005     0AAA  2ACB               	goto	l4929
 11006     0AAB                     u4420:
 11007     0AAB                     l4927:
 11008     0AAB  0823               	movf	fputc@fp,w
 11009     0AAC  0086               	movwf	6
 11010     0AAD  0824               	movf	fputc@fp+1,w
 11011     0AAE  0087               	movwf	7
 11012     0AAF  3149               	addfsr 1,9
 11013     0AB0  3F40               	moviw [0]fsr1
 11014     0AB1  00A5               	movwf	??_fputc
 11015     0AB2  3F41               	moviw [1]fsr1
 11016     0AB3  00A6               	movwf	??_fputc+1
 11017     0AB4  0823               	movf	fputc@fp,w
 11018     0AB5  0086               	movwf	6
 11019     0AB6  0824               	movf	fputc@fp+1,w
 11020     0AB7  0087               	movwf	7
 11021     0AB8  3142               	addfsr 1,2
 11022     0AB9  3F40               	moviw [0]fsr1
 11023     0ABA  00A7               	movwf	??_fputc+2
 11024     0ABB  3F41               	moviw [1]fsr1
 11025     0ABC  00A8               	movwf	??_fputc+3
 11026     0ABD  0828               	movf	??_fputc+3,w
 11027     0ABE  3A80               	xorlw	128
 11028     0ABF  00A9               	movwf	??_fputc+4
 11029     0AC0  0826               	movf	??_fputc+1,w
 11030     0AC1  3A80               	xorlw	128
 11031     0AC2  0229               	subwf	??_fputc+4,w
 11032     0AC3  1D03               	skipz
 11033     0AC4  2AC7               	goto	u4435
 11034     0AC5  0825               	movf	??_fputc,w
 11035     0AC6  0227               	subwf	??_fputc+2,w
 11036     0AC7                     u4435:
 11037     0AC7  1803               	skipnc
 11038     0AC8  2ACA               	goto	u4431
 11039     0AC9  2ACB               	goto	u4430
 11040     0ACA                     u4431:
 11041     0ACA  2AEC               	goto	l1538
 11042     0ACB                     u4430:
 11043     0ACB                     l4929:
 11044     0ACB  0020               	movlb	0	; select bank0
 11045     0ACC  0823               	movf	fputc@fp,w
 11046     0ACD  0086               	movwf	6
 11047     0ACE  0824               	movf	fputc@fp+1,w
 11048     0ACF  0087               	movwf	7
 11049     0AD0  3142               	addfsr 1,2
 11050     0AD1  0823               	movf	fputc@fp,w
 11051     0AD2  0084               	movwf	4
 11052     0AD3  0824               	movf	fputc@fp+1,w
 11053     0AD4  0085               	movwf	5
 11054     0AD5  3F40               	moviw [0]fsr1
 11055     0AD6  0700               	addwf	0,w
 11056     0AD7  00A5               	movwf	??_fputc
 11057     0AD8  3101               	addfsr 0,1
 11058     0AD9  3F41               	moviw [1]fsr1
 11059     0ADA  3D00               	addwfc	0,w
 11060     0ADB  00A6               	movwf	??_fputc+1
 11061     0ADC  0825               	movf	??_fputc,w
 11062     0ADD  0086               	movwf	6
 11063     0ADE  0826               	movf	??_fputc+1,w
 11064     0ADF  0087               	movwf	7
 11065     0AE0  0821               	movf	fputc@c,w
 11066     0AE1  0081               	movwf	1
 11067     0AE2                     l4931:
 11068     0AE2  0823               	movf	fputc@fp,w
 11069     0AE3  0086               	movwf	6
 11070     0AE4  0824               	movf	fputc@fp+1,w
 11071     0AE5  0087               	movwf	7
 11072     0AE6  3142               	addfsr 1,2
 11073     0AE7  3001               	movlw	1
 11074     0AE8  0781               	addwf	1,f
 11075     0AE9  3141               	addfsr 1,1
 11076     0AEA  1803               	skipnc
 11077     0AEB  0A81               	incf	1,f
 11078     0AEC                     l1538:
 11079     0AEC  0008               	return
 11080     0AED                     __end_of_fputc:
 11081                           
 11082                           	psect	text24
 11083     14B2                     __ptext24:	
 11084 ;; *************** function _putch *****************
 11085 ;; Defined at:
 11086 ;;		line 197 in file "mcc_generated_files/eusart.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  txData          1    wreg     unsigned char 
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  txData          1    0[BANK0 ] unsigned char 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;Total ram usage:        1 bytes
 11105 ;; Hardware stack levels used: 1
 11106 ;; Hardware stack levels required when called: 5
 11107 ;; This function calls:
 11108 ;;		_EUSART_Write
 11109 ;; This function is called by:
 11110 ;;		_fputc
 11111 ;; This function uses a non-reentrant model
 11112 ;;
 11113                           
 11114     14B2                     _putch:	
 11115                           ;psect for function _putch
 11116                           
 11117                           
 11118                           ;incstack = 0
 11119                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11120                           ;putch@txData stored from wreg
 11121     14B2  0020               	movlb	0	; select bank0
 11122     14B3  00A0               	movwf	putch@txData
 11123     14B4                     l4917:
 11124                           
 11125                           ;mcc_generated_files/eusart.c: 197: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 198: {;mcc_generated_files/eusart.c: 199:     EUSART_Write(txData);
 11126     14B4  0820               	movf	putch@txData,w
 11127     14B5  3187  27D5  3194   	fcall	_EUSART_Write
 11128     14B8                     l363:
 11129     14B8  0008               	return
 11130     14B9                     __end_of_putch:
 11131                           
 11132                           	psect	text25
 11133     0AED                     __ptext25:	
 11134 ;; *************** function _printUint32 *****************
 11135 ;; Defined at:
 11136 ;;		line 116 in file "UART.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  getal           4   13[BANK0 ] unsigned long 
 11139 ;;  leadingZeros    1   17[BANK0 ] unsigned char 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  i               1   19[BANK0 ] unsigned char 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  1    wreg      void 
 11144 ;; Registers used:
 11145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11151 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11154 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11155 ;;Total ram usage:        7 bytes
 11156 ;; Hardware stack levels used: 1
 11157 ;; Hardware stack levels required when called: 6
 11158 ;; This function calls:
 11159 ;;		___lldiv
 11160 ;;		___llmod
 11161 ;;		_printStr
 11162 ;; This function is called by:
 11163 ;;		_printFloat
 11164 ;;		_printLogs
 11165 ;;		_uartHandler
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169     0AED                     _printUint32:	
 11170                           ;psect for function _printUint32
 11171                           
 11172     0AED                     l5241:	
 11173                           ;incstack = 0
 11174                           ; Regs used in _printUint32: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11175                           
 11176                           
 11177                           ;UART.c: 117:     uint8_t i;;UART.c: 118:     for (i = 1; i <= 11 - 1; i++) {
 11178     0AED  0020               	movlb	0	; select bank0
 11179     0AEE  01B3               	clrf	printUint32@i
 11180     0AEF  0AB3               	incf	printUint32@i,f
 11181     0AF0                     l5247:
 11182                           
 11183                           ;UART.c: 119:         printBuffer[11 - 1 - i] = getal % 10 + '0';
 11184     0AF0  304E               	movlw	(low ((_printBuffer| (0+256)+10)))& (0+255)
 11185     0AF1  00B2               	movwf	??_printUint32
 11186     0AF2  0833               	movf	printUint32@i,w
 11187     0AF3  02B2               	subwf	??_printUint32,f
 11188     0AF4  0832               	movf	??_printUint32,w
 11189     0AF5  0086               	movwf	6
 11190     0AF6  3001               	movlw	1	; select bank2/3
 11191     0AF7  0087               	movwf	7
 11192     0AF8  3000               	movlw	0
 11193     0AF9  00A3               	movwf	___llmod@divisor+3
 11194     0AFA  3000               	movlw	0
 11195     0AFB  00A2               	movwf	___llmod@divisor+2
 11196     0AFC  3000               	movlw	0
 11197     0AFD  00A1               	movwf	___llmod@divisor+1
 11198     0AFE  300A               	movlw	10
 11199     0AFF  00A0               	movwf	___llmod@divisor
 11200     0B00  0830               	movf	printUint32@getal+3,w
 11201     0B01  00A7               	movwf	___llmod@dividend+3
 11202     0B02  082F               	movf	printUint32@getal+2,w
 11203     0B03  00A6               	movwf	___llmod@dividend+2
 11204     0B04  082E               	movf	printUint32@getal+1,w
 11205     0B05  00A5               	movwf	___llmod@dividend+1
 11206     0B06  082D               	movf	printUint32@getal,w
 11207     0B07  00A4               	movwf	___llmod@dividend
 11208     0B08  3188  20E6  318A   	fcall	___llmod
 11209     0B0B  0020               	movlb	0	; select bank0
 11210     0B0C  0820               	movf	?___llmod,w
 11211     0B0D  3E30               	addlw	48
 11212     0B0E  0081               	movwf	1
 11213     0B0F                     l5249:
 11214                           
 11215                           ;UART.c: 120:         getal /= 10;
 11216     0B0F  3000               	movlw	0
 11217     0B10  00A3               	movwf	___lldiv@divisor+3
 11218     0B11  3000               	movlw	0
 11219     0B12  00A2               	movwf	___lldiv@divisor+2
 11220     0B13  3000               	movlw	0
 11221     0B14  00A1               	movwf	___lldiv@divisor+1
 11222     0B15  300A               	movlw	10
 11223     0B16  00A0               	movwf	___lldiv@divisor
 11224     0B17  0830               	movf	printUint32@getal+3,w
 11225     0B18  00A7               	movwf	___lldiv@dividend+3
 11226     0B19  082F               	movf	printUint32@getal+2,w
 11227     0B1A  00A6               	movwf	___lldiv@dividend+2
 11228     0B1B  082E               	movf	printUint32@getal+1,w
 11229     0B1C  00A5               	movwf	___lldiv@dividend+1
 11230     0B1D  082D               	movf	printUint32@getal,w
 11231     0B1E  00A4               	movwf	___lldiv@dividend
 11232     0B1F  3189  21D4  318A   	fcall	___lldiv
 11233     0B22  0020               	movlb	0	; select bank0
 11234     0B23  0823               	movf	?___lldiv+3,w
 11235     0B24  00B0               	movwf	printUint32@getal+3
 11236     0B25  0822               	movf	?___lldiv+2,w
 11237     0B26  00AF               	movwf	printUint32@getal+2
 11238     0B27  0821               	movf	?___lldiv+1,w
 11239     0B28  00AE               	movwf	printUint32@getal+1
 11240     0B29  0820               	movf	?___lldiv,w
 11241     0B2A  00AD               	movwf	printUint32@getal
 11242     0B2B                     l5251:
 11243                           
 11244                           ;UART.c: 121:         if (getal == 0 && i >= leadingZeros) {
 11245     0B2B  0830               	movf	printUint32@getal+3,w
 11246     0B2C  042F               	iorwf	printUint32@getal+2,w
 11247     0B2D  042E               	iorwf	printUint32@getal+1,w
 11248     0B2E  042D               	iorwf	printUint32@getal,w
 11249     0B2F  1D03               	skipz
 11250     0B30  2B32               	goto	u5021
 11251     0B31  2B33               	goto	u5020
 11252     0B32                     u5021:
 11253     0B32  2B3A               	goto	l5257
 11254     0B33                     u5020:
 11255     0B33                     l5253:
 11256     0B33  0831               	movf	printUint32@leadingZeros,w
 11257     0B34  0233               	subwf	printUint32@i,w
 11258     0B35  1C03               	skipc
 11259     0B36  2B38               	goto	u5031
 11260     0B37  2B39               	goto	u5030
 11261     0B38                     u5031:
 11262     0B38  2B3A               	goto	l5257
 11263     0B39                     u5030:
 11264     0B39  2B44               	goto	l5261
 11265     0B3A                     l5257:
 11266                           
 11267                           ;UART.c: 124:     }
 11268     0B3A  3001               	movlw	1
 11269     0B3B  00B2               	movwf	??_printUint32
 11270     0B3C  0832               	movf	??_printUint32,w
 11271     0B3D  07B3               	addwf	printUint32@i,f
 11272     0B3E                     l5259:
 11273     0B3E  300B               	movlw	11
 11274     0B3F  0233               	subwf	printUint32@i,w
 11275     0B40  1C03               	skipc
 11276     0B41  2B43               	goto	u5041
 11277     0B42  2B44               	goto	u5040
 11278     0B43                     u5041:
 11279     0B43  2AF0               	goto	l5247
 11280     0B44                     u5040:
 11281     0B44                     l5261:
 11282                           
 11283                           ;UART.c: 125:     printBuffer[11 - 1] = 0;
 11284     0B44  0022               	movlb	2	; select bank2
 11285     0B45  01CE               	clrf	(_printBuffer^(0+256)+10)
 11286     0B46                     l5263:
 11287                           
 11288                           ;UART.c: 126:     printStr(printBuffer + 11 - 1 - i);
 11289     0B46  304E               	movlw	(low ((_printBuffer| (0+256)+10)))& (0+255)
 11290     0B47  0020               	movlb	0	; select bank0
 11291     0B48  00B2               	movwf	??_printUint32
 11292     0B49  0833               	movf	printUint32@i,w
 11293     0B4A  0232               	subwf	??_printUint32,w
 11294     0B4B  3196  2652  318A   	fcall	_printStr
 11295     0B4E                     l723:
 11296     0B4E  0008               	return
 11297     0B4F                     __end_of_printUint32:
 11298                           
 11299                           	psect	text26
 11300     1652                     __ptext26:	
 11301 ;; *************** function _printStr *****************
 11302 ;; Defined at:
 11303 ;;		line 108 in file "UART.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  str             1    wreg     PTR unsigned char 
 11306 ;;		 -> printBuffer(11), line(20), 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;  str             1    1[BANK0 ] PTR unsigned char 
 11309 ;;		 -> printBuffer(11), line(20), 
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      void 
 11312 ;; Registers used:
 11313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11323 ;;Total ram usage:        2 bytes
 11324 ;; Hardware stack levels used: 1
 11325 ;; Hardware stack levels required when called: 5
 11326 ;; This function calls:
 11327 ;;		_EUSART_Write
 11328 ;; This function is called by:
 11329 ;;		_printUint32
 11330 ;;		_uartHandler
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334     1652                     _printStr:	
 11335                           ;psect for function _printStr
 11336                           
 11337                           
 11338                           ;incstack = 0
 11339                           ; Regs used in _printStr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11340                           ;printStr@str stored from wreg
 11341     1652  0020               	movlb	0	; select bank0
 11342     1653  00A1               	movwf	printStr@str
 11343     1654                     l4973:
 11344                           
 11345                           ;UART.c: 109:     while (*str != 0) {
 11346     1654  2E62               	goto	l4979
 11347     1655                     l4975:
 11348                           
 11349                           ;UART.c: 110:         EUSART_Write(*str++);
 11350     1655  0821               	movf	printStr@str,w
 11351     1656  0086               	movwf	6
 11352     1657  3001               	movlw	1	; select bank2/3
 11353     1658  0087               	movwf	7
 11354     1659  0801               	movf	1,w
 11355     165A  3187  27D5  3196   	fcall	_EUSART_Write
 11356     165D                     l4977:
 11357     165D  3001               	movlw	1
 11358     165E  0020               	movlb	0	; select bank0
 11359     165F  00A0               	movwf	??_printStr
 11360     1660  0820               	movf	??_printStr,w
 11361     1661  07A1               	addwf	printStr@str,f
 11362     1662                     l4979:
 11363                           
 11364                           ;UART.c: 109:     while (*str != 0) {
 11365     1662  0821               	movf	printStr@str,w
 11366     1663  0086               	movwf	6
 11367     1664  3001               	movlw	1	; select bank2/3
 11368     1665  0087               	movwf	7
 11369     1666  0801               	movf	1,w
 11370     1667  1D03               	btfss	3,2
 11371     1668  2E6A               	goto	u4461
 11372     1669  2E6B               	goto	u4460
 11373     166A                     u4461:
 11374     166A  2E55               	goto	l4975
 11375     166B                     u4460:
 11376     166B                     l717:
 11377     166B  0008               	return
 11378     166C                     __end_of_printStr:
 11379                           
 11380                           	psect	text27
 11381     07D5                     __ptext27:	
 11382 ;; *************** function _EUSART_Write *****************
 11383 ;; Defined at:
 11384 ;;		line 173 in file "mcc_generated_files/eusart.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  txData          1    wreg     unsigned char 
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;  txData          1    5[COMMON] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;Total ram usage:        2 bytes
 11403 ;; Hardware stack levels used: 1
 11404 ;; Hardware stack levels required when called: 4
 11405 ;; This function calls:
 11406 ;;		Nothing
 11407 ;; This function is called by:
 11408 ;;		_putch
 11409 ;;		_printNewLine
 11410 ;;		_printStr
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414     07D5                     _EUSART_Write:	
 11415                           ;psect for function _EUSART_Write
 11416                           
 11417                           
 11418                           ;incstack = 0
 11419                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11420                           ;EUSART_Write@txData stored from wreg
 11421     07D5  00F5               	movwf	EUSART_Write@txData
 11422     07D6                     l4899:
 11423     07D6                     l4901:	
 11424                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 11425                           
 11426                           
 11427                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 11428     07D6  0021               	movlb	1	; select bank1
 11429     07D7  0850               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 11430     07D8  1903               	btfsc	3,2
 11431     07D9  2FDB               	goto	u4371
 11432     07DA  2FDC               	goto	u4370
 11433     07DB                     u4371:
 11434     07DB  2FD6               	goto	l4901
 11435     07DC                     u4370:
 11436     07DC                     l356:
 11437                           
 11438                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
 11439     07DC  1A11               	btfsc	17,4	;volatile
 11440     07DD  2FDF               	goto	u4381
 11441     07DE  2FE0               	goto	u4380
 11442     07DF                     u4381:
 11443     07DF  2FE4               	goto	l357
 11444     07E0                     u4380:
 11445     07E0                     l4903:
 11446                           
 11447                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 11448     07E0  0875               	movf	EUSART_Write@txData,w
 11449     07E1  0023               	movlb	3	; select bank3
 11450     07E2  009A               	movwf	26	;volatile
 11451                           
 11452                           ;mcc_generated_files/eusart.c: 182:     }
 11453     07E3  2FF9               	goto	l4915
 11454     07E4                     l357:	
 11455                           ;mcc_generated_files/eusart.c: 183:     else
 11456                           
 11457                           
 11458                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
 11459     07E4  1211               	bcf	17,4	;volatile
 11460     07E5                     l4905:
 11461                           
 11462                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 11463     07E5  0879               	movf	_eusartTxHead,w
 11464     07E6  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11465     07E7  0086               	movwf	6
 11466     07E8  3001               	movlw	1	; select bank2/3
 11467     07E9  0087               	movwf	7
 11468     07EA  0875               	movf	EUSART_Write@txData,w
 11469     07EB  0081               	movwf	1
 11470     07EC                     l4907:
 11471     07EC  3001               	movlw	1
 11472     07ED  00F4               	movwf	??_EUSART_Write
 11473     07EE  0874               	movf	??_EUSART_Write,w
 11474     07EF  07F9               	addwf	_eusartTxHead,f	;volatile
 11475     07F0                     l4909:
 11476                           
 11477                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11478     07F0  3008               	movlw	8
 11479     07F1  0279               	subwf	_eusartTxHead,w	;volatile
 11480     07F2  1C03               	skipc
 11481     07F3  2FF5               	goto	u4391
 11482     07F4  2FF6               	goto	u4390
 11483     07F5                     u4391:
 11484     07F5  2FF7               	goto	l4913
 11485     07F6                     u4390:
 11486     07F6                     l4911:
 11487                           
 11488                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 11489     07F6  01F9               	clrf	_eusartTxHead	;volatile
 11490     07F7                     l4913:
 11491                           
 11492                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 11493     07F7  3001               	movlw	1
 11494     07F8  02D0               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 11495     07F9                     l4915:
 11496                           
 11497                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
 11498     07F9  0021               	movlb	1	; select bank1
 11499     07FA  1611               	bsf	17,4	;volatile
 11500     07FB                     l360:
 11501     07FB  0008               	return
 11502     07FC                     __end_of_EUSART_Write:
 11503                           
 11504                           	psect	text28
 11505     08E6                     __ptext28:	
 11506 ;; *************** function ___llmod *****************
 11507 ;; Defined at:
 11508 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llmod.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;  divisor         4    0[BANK0 ] unsigned long 
 11511 ;;  dividend        4    4[BANK0 ] unsigned long 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  counter         1    5[COMMON] unsigned char 
 11514 ;; Return value:  Size  Location     Type
 11515 ;;                  4    0[BANK0 ] unsigned long 
 11516 ;; Registers used:
 11517 ;;		wreg, status,2, status,0
 11518 ;; Tracked objects:
 11519 ;;		On entry : 0/0
 11520 ;;		On exit  : 0/0
 11521 ;;		Unchanged: 0/0
 11522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11523 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11526 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11527 ;;Total ram usage:       10 bytes
 11528 ;; Hardware stack levels used: 1
 11529 ;; Hardware stack levels required when called: 4
 11530 ;; This function calls:
 11531 ;;		Nothing
 11532 ;; This function is called by:
 11533 ;;		_printUint32
 11534 ;; This function uses a non-reentrant model
 11535 ;;
 11536                           
 11537     08E6                     ___llmod:	
 11538                           ;psect for function ___llmod
 11539                           
 11540     08E6                     l3349:	
 11541                           ;incstack = 0
 11542                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 11543                           
 11544     08E6  0020               	movlb	0	; select bank0
 11545     08E7  0823               	movf	___llmod@divisor+3,w
 11546     08E8  0422               	iorwf	___llmod@divisor+2,w
 11547     08E9  0421               	iorwf	___llmod@divisor+1,w
 11548     08EA  0420               	iorwf	___llmod@divisor,w
 11549     08EB  1903               	skipnz
 11550     08EC  28EE               	goto	u2341
 11551     08ED  28EF               	goto	u2340
 11552     08EE                     u2341:
 11553     08EE  2928               	goto	l3365
 11554     08EF                     u2340:
 11555     08EF                     l3351:
 11556     08EF  01F5               	clrf	___llmod@counter
 11557     08F0  0AF5               	incf	___llmod@counter,f
 11558     08F1  28FD               	goto	l3355
 11559     08F2                     l3353:
 11560     08F2  3001               	movlw	1
 11561     08F3                     u2355:
 11562     08F3  35A0               	lslf	___llmod@divisor,f
 11563     08F4  0DA1               	rlf	___llmod@divisor+1,f
 11564     08F5  0DA2               	rlf	___llmod@divisor+2,f
 11565     08F6  0DA3               	rlf	___llmod@divisor+3,f
 11566     08F7  0B89               	decfsz	9,f
 11567     08F8  28F3               	goto	u2355
 11568     08F9  3001               	movlw	1
 11569     08FA  00F4               	movwf	??___llmod
 11570     08FB  0874               	movf	??___llmod,w
 11571     08FC  07F5               	addwf	___llmod@counter,f
 11572     08FD                     l3355:
 11573     08FD  1FA3               	btfss	___llmod@divisor+3,7
 11574     08FE  2900               	goto	u2361
 11575     08FF  2901               	goto	u2360
 11576     0900                     u2361:
 11577     0900  28F2               	goto	l3353
 11578     0901                     u2360:
 11579     0901                     l3357:
 11580     0901  0823               	movf	___llmod@divisor+3,w
 11581     0902  0227               	subwf	___llmod@dividend+3,w
 11582     0903  1D03               	skipz
 11583     0904  290F               	goto	u2375
 11584     0905  0822               	movf	___llmod@divisor+2,w
 11585     0906  0226               	subwf	___llmod@dividend+2,w
 11586     0907  1D03               	skipz
 11587     0908  290F               	goto	u2375
 11588     0909  0821               	movf	___llmod@divisor+1,w
 11589     090A  0225               	subwf	___llmod@dividend+1,w
 11590     090B  1D03               	skipz
 11591     090C  290F               	goto	u2375
 11592     090D  0820               	movf	___llmod@divisor,w
 11593     090E  0224               	subwf	___llmod@dividend,w
 11594     090F                     u2375:
 11595     090F  1C03               	skipc
 11596     0910  2912               	goto	u2371
 11597     0911  2913               	goto	u2370
 11598     0912                     u2371:
 11599     0912  291B               	goto	l3361
 11600     0913                     u2370:
 11601     0913                     l3359:
 11602     0913  0820               	movf	___llmod@divisor,w
 11603     0914  02A4               	subwf	___llmod@dividend,f
 11604     0915  0821               	movf	___llmod@divisor+1,w
 11605     0916  3BA5               	subwfb	___llmod@dividend+1,f
 11606     0917  0822               	movf	___llmod@divisor+2,w
 11607     0918  3BA6               	subwfb	___llmod@dividend+2,f
 11608     0919  0823               	movf	___llmod@divisor+3,w
 11609     091A  3BA7               	subwfb	___llmod@dividend+3,f
 11610     091B                     l3361:
 11611     091B  3001               	movlw	1
 11612     091C                     u2385:
 11613     091C  36A3               	lsrf	___llmod@divisor+3,f
 11614     091D  0CA2               	rrf	___llmod@divisor+2,f
 11615     091E  0CA1               	rrf	___llmod@divisor+1,f
 11616     091F  0CA0               	rrf	___llmod@divisor,f
 11617     0920  0B89               	decfsz	9,f
 11618     0921  291C               	goto	u2385
 11619     0922                     l3363:
 11620     0922  3001               	movlw	1
 11621     0923  02F5               	subwf	___llmod@counter,f
 11622     0924  1D03               	btfss	3,2
 11623     0925  2927               	goto	u2391
 11624     0926  2928               	goto	u2390
 11625     0927                     u2391:
 11626     0927  2901               	goto	l3357
 11627     0928                     u2390:
 11628     0928                     l3365:
 11629     0928  0827               	movf	___llmod@dividend+3,w
 11630     0929  00A3               	movwf	?___llmod+3
 11631     092A  0826               	movf	___llmod@dividend+2,w
 11632     092B  00A2               	movwf	?___llmod+2
 11633     092C  0825               	movf	___llmod@dividend+1,w
 11634     092D  00A1               	movwf	?___llmod+1
 11635     092E  0824               	movf	___llmod@dividend,w
 11636     092F  00A0               	movwf	?___llmod
 11637     0930                     l1261:
 11638     0930  0008               	return
 11639     0931                     __end_of___llmod:
 11640                           
 11641                           	psect	text29
 11642     09D4                     __ptext29:	
 11643 ;; *************** function ___lldiv *****************
 11644 ;; Defined at:
 11645 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  divisor         4    0[BANK0 ] unsigned long 
 11648 ;;  dividend        4    4[BANK0 ] unsigned long 
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;  quotient        4    8[BANK0 ] unsigned long 
 11651 ;;  counter         1   12[BANK0 ] unsigned char 
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  4    0[BANK0 ] unsigned long 
 11654 ;; Registers used:
 11655 ;;		wreg, status,2, status,0
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11661 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;Total ram usage:       14 bytes
 11666 ;; Hardware stack levels used: 1
 11667 ;; Hardware stack levels required when called: 4
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_printUint32
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675     09D4                     ___lldiv:	
 11676                           ;psect for function ___lldiv
 11677                           
 11678     09D4                     l4981:	
 11679                           ;incstack = 0
 11680                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11681                           
 11682     09D4  3000               	movlw	0
 11683     09D5  0020               	movlb	0	; select bank0
 11684     09D6  00AB               	movwf	___lldiv@quotient+3
 11685     09D7  3000               	movlw	0
 11686     09D8  00AA               	movwf	___lldiv@quotient+2
 11687     09D9  3000               	movlw	0
 11688     09DA  00A9               	movwf	___lldiv@quotient+1
 11689     09DB  3000               	movlw	0
 11690     09DC  00A8               	movwf	___lldiv@quotient
 11691     09DD  0823               	movf	___lldiv@divisor+3,w
 11692     09DE  0422               	iorwf	___lldiv@divisor+2,w
 11693     09DF  0421               	iorwf	___lldiv@divisor+1,w
 11694     09E0  0420               	iorwf	___lldiv@divisor,w
 11695     09E1  1903               	skipnz
 11696     09E2  29E4               	goto	u4471
 11697     09E3  29E5               	goto	u4470
 11698     09E4                     u4471:
 11699     09E4  2A26               	goto	l5001
 11700     09E5                     u4470:
 11701     09E5                     l4983:
 11702     09E5  01AC               	clrf	___lldiv@counter
 11703     09E6  0AAC               	incf	___lldiv@counter,f
 11704     09E7  29F3               	goto	l4987
 11705     09E8                     l4985:
 11706     09E8  3001               	movlw	1
 11707     09E9                     u4485:
 11708     09E9  35A0               	lslf	___lldiv@divisor,f
 11709     09EA  0DA1               	rlf	___lldiv@divisor+1,f
 11710     09EB  0DA2               	rlf	___lldiv@divisor+2,f
 11711     09EC  0DA3               	rlf	___lldiv@divisor+3,f
 11712     09ED  0B89               	decfsz	9,f
 11713     09EE  29E9               	goto	u4485
 11714     09EF  3001               	movlw	1
 11715     09F0  00F4               	movwf	??___lldiv
 11716     09F1  0874               	movf	??___lldiv,w
 11717     09F2  07AC               	addwf	___lldiv@counter,f
 11718     09F3                     l4987:
 11719     09F3  1FA3               	btfss	___lldiv@divisor+3,7
 11720     09F4  29F6               	goto	u4491
 11721     09F5  29F7               	goto	u4490
 11722     09F6                     u4491:
 11723     09F6  29E8               	goto	l4985
 11724     09F7                     u4490:
 11725     09F7                     l4989:
 11726     09F7  3001               	movlw	1
 11727     09F8                     u4505:
 11728     09F8  35A8               	lslf	___lldiv@quotient,f
 11729     09F9  0DA9               	rlf	___lldiv@quotient+1,f
 11730     09FA  0DAA               	rlf	___lldiv@quotient+2,f
 11731     09FB  0DAB               	rlf	___lldiv@quotient+3,f
 11732     09FC  0B89               	decfsz	9,f
 11733     09FD  29F8               	goto	u4505
 11734     09FE                     l4991:
 11735     09FE  0823               	movf	___lldiv@divisor+3,w
 11736     09FF  0227               	subwf	___lldiv@dividend+3,w
 11737     0A00  1D03               	skipz
 11738     0A01  2A0C               	goto	u4515
 11739     0A02  0822               	movf	___lldiv@divisor+2,w
 11740     0A03  0226               	subwf	___lldiv@dividend+2,w
 11741     0A04  1D03               	skipz
 11742     0A05  2A0C               	goto	u4515
 11743     0A06  0821               	movf	___lldiv@divisor+1,w
 11744     0A07  0225               	subwf	___lldiv@dividend+1,w
 11745     0A08  1D03               	skipz
 11746     0A09  2A0C               	goto	u4515
 11747     0A0A  0820               	movf	___lldiv@divisor,w
 11748     0A0B  0224               	subwf	___lldiv@dividend,w
 11749     0A0C                     u4515:
 11750     0A0C  1C03               	skipc
 11751     0A0D  2A0F               	goto	u4511
 11752     0A0E  2A10               	goto	u4510
 11753     0A0F                     u4511:
 11754     0A0F  2A19               	goto	l4997
 11755     0A10                     u4510:
 11756     0A10                     l4993:
 11757     0A10  0820               	movf	___lldiv@divisor,w
 11758     0A11  02A4               	subwf	___lldiv@dividend,f
 11759     0A12  0821               	movf	___lldiv@divisor+1,w
 11760     0A13  3BA5               	subwfb	___lldiv@dividend+1,f
 11761     0A14  0822               	movf	___lldiv@divisor+2,w
 11762     0A15  3BA6               	subwfb	___lldiv@dividend+2,f
 11763     0A16  0823               	movf	___lldiv@divisor+3,w
 11764     0A17  3BA7               	subwfb	___lldiv@dividend+3,f
 11765     0A18                     l4995:
 11766     0A18  1428               	bsf	___lldiv@quotient,0
 11767     0A19                     l4997:
 11768     0A19  3001               	movlw	1
 11769     0A1A                     u4525:
 11770     0A1A  36A3               	lsrf	___lldiv@divisor+3,f
 11771     0A1B  0CA2               	rrf	___lldiv@divisor+2,f
 11772     0A1C  0CA1               	rrf	___lldiv@divisor+1,f
 11773     0A1D  0CA0               	rrf	___lldiv@divisor,f
 11774     0A1E  0B89               	decfsz	9,f
 11775     0A1F  2A1A               	goto	u4525
 11776     0A20                     l4999:
 11777     0A20  3001               	movlw	1
 11778     0A21  02AC               	subwf	___lldiv@counter,f
 11779     0A22  1D03               	btfss	3,2
 11780     0A23  2A25               	goto	u4531
 11781     0A24  2A26               	goto	u4530
 11782     0A25                     u4531:
 11783     0A25  29F7               	goto	l4989
 11784     0A26                     u4530:
 11785     0A26                     l5001:
 11786     0A26  082B               	movf	___lldiv@quotient+3,w
 11787     0A27  00A3               	movwf	?___lldiv+3
 11788     0A28  082A               	movf	___lldiv@quotient+2,w
 11789     0A29  00A2               	movwf	?___lldiv+2
 11790     0A2A  0829               	movf	___lldiv@quotient+1,w
 11791     0A2B  00A1               	movwf	?___lldiv+1
 11792     0A2C  0828               	movf	___lldiv@quotient,w
 11793     0A2D  00A0               	movwf	?___lldiv
 11794     0A2E                     l1067:
 11795     0A2E  0008               	return
 11796     0A2F                     __end_of___lldiv:
 11797                           
 11798                           	psect	text30
 11799     16D9                     __ptext30:	
 11800 ;; *************** function ___flsub *****************
 11801 ;; Defined at:
 11802 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 11803 ;; Parameters:    Size  Location     Type
 11804 ;;  a               4   34[BANK0 ] unsigned long 
 11805 ;;  b               4   38[BANK0 ] unsigned long 
 11806 ;; Auto vars:     Size  Location     Type
 11807 ;;		None
 11808 ;; Return value:  Size  Location     Type
 11809 ;;                  4   34[BANK0 ] unsigned long 
 11810 ;; Registers used:
 11811 ;;		wreg, status,2, status,0, pclath, cstack
 11812 ;; Tracked objects:
 11813 ;;		On entry : 0/0
 11814 ;;		On exit  : 0/0
 11815 ;;		Unchanged: 0/0
 11816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11817 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;Total ram usage:        8 bytes
 11822 ;; Hardware stack levels used: 1
 11823 ;; Hardware stack levels required when called: 5
 11824 ;; This function calls:
 11825 ;;		___fladd
 11826 ;; This function is called by:
 11827 ;;		_printFloat
 11828 ;; This function uses a non-reentrant model
 11829 ;;
 11830                           
 11831     16D9                     ___flsub:	
 11832                           ;psect for function ___flsub
 11833                           
 11834     16D9                     l5315:	
 11835                           ;incstack = 0
 11836                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11837                           
 11838     16D9  3080               	movlw	128
 11839     16DA  0020               	movlb	0	; select bank0
 11840     16DB  06C5               	xorwf	___flsub@a+3,f
 11841     16DC                     l5317:
 11842     16DC  0849               	movf	___flsub@b+3,w
 11843     16DD  00B1               	movwf	___fladd@b+3
 11844     16DE  0848               	movf	___flsub@b+2,w
 11845     16DF  00B0               	movwf	___fladd@b+2
 11846     16E0  0847               	movf	___flsub@b+1,w
 11847     16E1  00AF               	movwf	___fladd@b+1
 11848     16E2  0846               	movf	___flsub@b,w
 11849     16E3  00AE               	movwf	___fladd@b
 11850     16E4  0845               	movf	___flsub@a+3,w
 11851     16E5  00B5               	movwf	___fladd@a+3
 11852     16E6  0844               	movf	___flsub@a+2,w
 11853     16E7  00B4               	movwf	___fladd@a+2
 11854     16E8  0843               	movf	___flsub@a+1,w
 11855     16E9  00B3               	movwf	___fladd@a+1
 11856     16EA  0842               	movf	___flsub@a,w
 11857     16EB  00B2               	movwf	___fladd@a
 11858     16EC  3182  22B1  3196   	fcall	___fladd
 11859     16EF  0020               	movlb	0	; select bank0
 11860     16F0  0831               	movf	?___fladd+3,w
 11861     16F1  00C5               	movwf	?___flsub+3
 11862     16F2  0830               	movf	?___fladd+2,w
 11863     16F3  00C4               	movwf	?___flsub+2
 11864     16F4  082F               	movf	?___fladd+1,w
 11865     16F5  00C3               	movwf	?___flsub+1
 11866     16F6  082E               	movf	?___fladd,w
 11867     16F7  00C2               	movwf	?___flsub
 11868     16F8                     l1378:
 11869     16F8  0008               	return
 11870     16F9                     __end_of___flsub:
 11871                           
 11872                           	psect	text31
 11873     1457                     __ptext31:	
 11874 ;; *************** function _PI_GetSetPoint *****************
 11875 ;; Defined at:
 11876 ;;		line 30 in file "PI.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;		None
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      unsigned char 
 11883 ;; Registers used:
 11884 ;;		wreg
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;Total ram usage:        0 bytes
 11895 ;; Hardware stack levels used: 1
 11896 ;; Hardware stack levels required when called: 4
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_printLogs
 11901 ;;		_uartHandler
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905     1457                     _PI_GetSetPoint:	
 11906                           ;psect for function _PI_GetSetPoint
 11907                           
 11908     1457                     l4235:	
 11909                           ;incstack = 0
 11910                           ; Regs used in _PI_GetSetPoint: [wreg]
 11911                           
 11912                           
 11913                           ;PI.c: 31:     return setpoint;
 11914     1457  0021               	movlb	1	; select bank1
 11915     1458  086F               	movf	_setpoint^(0+128),w
 11916     1459                     l619:
 11917     1459  0008               	return
 11918     145A                     __end_of_PI_GetSetPoint:
 11919                           
 11920                           	psect	text32
 11921     1454                     __ptext32:	
 11922 ;; *************** function _PI_GetSensorHeight *****************
 11923 ;; Defined at:
 11924 ;;		line 23 in file "PI.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;		None
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;		None
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      unsigned char 
 11931 ;; Registers used:
 11932 ;;		wreg
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/0
 11935 ;;		On exit  : 0/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;Total ram usage:        0 bytes
 11943 ;; Hardware stack levels used: 1
 11944 ;; Hardware stack levels required when called: 4
 11945 ;; This function calls:
 11946 ;;		Nothing
 11947 ;; This function is called by:
 11948 ;;		_printLogs
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952     1454                     _PI_GetSensorHeight:	
 11953                           ;psect for function _PI_GetSensorHeight
 11954                           
 11955     1454                     l4229:	
 11956                           ;incstack = 0
 11957                           ; Regs used in _PI_GetSensorHeight: [wreg]
 11958                           
 11959                           
 11960                           ;PI.c: 24:     return sensorHeight;
 11961     1454  0021               	movlb	1	; select bank1
 11962     1455  084D               	movf	_sensorHeight^(0+128),w
 11963     1456                     l613:
 11964     1456  0008               	return
 11965     1457                     __end_of_PI_GetSensorHeight:
 11966                           
 11967                           	psect	text33
 11968     15BC                     __ptext33:	
 11969 ;; *************** function _PI_GetKp *****************
 11970 ;; Defined at:
 11971 ;;		line 41 in file "PI.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;		None
 11976 ;; Return value:  Size  Location     Type
 11977 ;;                  4    0[BANK0 ] float 
 11978 ;; Registers used:
 11979 ;;		wreg
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;Total ram usage:        4 bytes
 11990 ;; Hardware stack levels used: 1
 11991 ;; Hardware stack levels required when called: 4
 11992 ;; This function calls:
 11993 ;;		Nothing
 11994 ;; This function is called by:
 11995 ;;		_printLogs
 11996 ;;		_uartHandler
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000     15BC                     _PI_GetKp:	
 12001                           ;psect for function _PI_GetKp
 12002                           
 12003     15BC                     l5667:	
 12004                           ;incstack = 0
 12005                           ; Regs used in _PI_GetKp: [wreg]
 12006                           
 12007                           
 12008                           ;PI.c: 42:     return kp;
 12009     15BC  0021               	movlb	1	; select bank1
 12010     15BD  0867               	movf	(_kp+3)^(0+128),w
 12011     15BE  0020               	movlb	0	; select bank0
 12012     15BF  00A3               	movwf	?_PI_GetKp+3
 12013     15C0  0021               	movlb	1	; select bank1
 12014     15C1  0866               	movf	(_kp+2)^(0+128),w
 12015     15C2  0020               	movlb	0	; select bank0
 12016     15C3  00A2               	movwf	?_PI_GetKp+2
 12017     15C4  0021               	movlb	1	; select bank1
 12018     15C5  0865               	movf	(_kp+1)^(0+128),w
 12019     15C6  0020               	movlb	0	; select bank0
 12020     15C7  00A1               	movwf	?_PI_GetKp+1
 12021     15C8  0021               	movlb	1	; select bank1
 12022     15C9  0864               	movf	_kp^(0+128),w
 12023     15CA  0020               	movlb	0	; select bank0
 12024     15CB  00A0               	movwf	?_PI_GetKp
 12025     15CC                     l628:
 12026     15CC  0008               	return
 12027     15CD                     __end_of_PI_GetKp:
 12028                           
 12029                           	psect	text34
 12030     15AB                     __ptext34:	
 12031 ;; *************** function _PI_GetKi *****************
 12032 ;; Defined at:
 12033 ;;		line 48 in file "PI.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;		None
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;		None
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  4    0[BANK0 ] float 
 12040 ;; Registers used:
 12041 ;;		wreg
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12047 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;Total ram usage:        4 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 4
 12054 ;; This function calls:
 12055 ;;		Nothing
 12056 ;; This function is called by:
 12057 ;;		_printLogs
 12058 ;;		_uartHandler
 12059 ;; This function uses a non-reentrant model
 12060 ;;
 12061                           
 12062     15AB                     _PI_GetKi:	
 12063                           ;psect for function _PI_GetKi
 12064                           
 12065     15AB                     l5671:	
 12066                           ;incstack = 0
 12067                           ; Regs used in _PI_GetKi: [wreg]
 12068                           
 12069                           
 12070                           ;PI.c: 49:     return ki;
 12071     15AB  0021               	movlb	1	; select bank1
 12072     15AC  086B               	movf	(_ki+3)^(0+128),w
 12073     15AD  0020               	movlb	0	; select bank0
 12074     15AE  00A3               	movwf	?_PI_GetKi+3
 12075     15AF  0021               	movlb	1	; select bank1
 12076     15B0  086A               	movf	(_ki+2)^(0+128),w
 12077     15B1  0020               	movlb	0	; select bank0
 12078     15B2  00A2               	movwf	?_PI_GetKi+2
 12079     15B3  0021               	movlb	1	; select bank1
 12080     15B4  0869               	movf	(_ki+1)^(0+128),w
 12081     15B5  0020               	movlb	0	; select bank0
 12082     15B6  00A1               	movwf	?_PI_GetKi+1
 12083     15B7  0021               	movlb	1	; select bank1
 12084     15B8  0868               	movf	_ki^(0+128),w
 12085     15B9  0020               	movlb	0	; select bank0
 12086     15BA  00A0               	movwf	?_PI_GetKi
 12087     15BB                     l634:
 12088     15BB  0008               	return
 12089     15BC                     __end_of_PI_GetKi:
 12090                           
 12091                           	psect	text35
 12092     14A0                     __ptext35:	
 12093 ;; *************** function _PI_GetDutycycle *****************
 12094 ;; Defined at:
 12095 ;;		line 34 in file "PI.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;		None
 12098 ;; Auto vars:     Size  Location     Type
 12099 ;;		None
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  2    4[COMMON] int 
 12102 ;; Registers used:
 12103 ;;		wreg
 12104 ;; Tracked objects:
 12105 ;;		On entry : 0/0
 12106 ;;		On exit  : 0/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;Total ram usage:        2 bytes
 12114 ;; Hardware stack levels used: 1
 12115 ;; Hardware stack levels required when called: 4
 12116 ;; This function calls:
 12117 ;;		Nothing
 12118 ;; This function is called by:
 12119 ;;		_printLogs
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123     14A0                     _PI_GetDutycycle:	
 12124                           ;psect for function _PI_GetDutycycle
 12125                           
 12126     14A0                     l4239:	
 12127                           ;incstack = 0
 12128                           ; Regs used in _PI_GetDutycycle: [wreg]
 12129                           
 12130                           
 12131                           ;PI.c: 35:     return dutycycle;
 12132     14A0  0021               	movlb	1	; select bank1
 12133     14A1  0835               	movf	(_dutycycle+1)^(0+128),w
 12134     14A2  00F5               	movwf	?_PI_GetDutycycle+1
 12135     14A3  0834               	movf	_dutycycle^(0+128),w
 12136     14A4  00F4               	movwf	?_PI_GetDutycycle
 12137     14A5                     l622:
 12138     14A5  0008               	return
 12139     14A6                     __end_of_PI_GetDutycycle:
 12140                           
 12141                           	psect	text36
 12142     146C                     __ptext36:	
 12143 ;; *************** function _initLedStrip *****************
 12144 ;; Defined at:
 12145 ;;		line 47 in file "ledstrip.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;		None
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;		None
 12150 ;; Return value:  Size  Location     Type
 12151 ;;                  1    wreg      void 
 12152 ;; Registers used:
 12153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12154 ;; Tracked objects:
 12155 ;;		On entry : 0/0
 12156 ;;		On exit  : 0/0
 12157 ;;		Unchanged: 0/0
 12158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12163 ;;Total ram usage:        0 bytes
 12164 ;; Hardware stack levels used: 1
 12165 ;; Hardware stack levels required when called: 7
 12166 ;; This function calls:
 12167 ;;		_spi_master_open
 12168 ;; This function is called by:
 12169 ;;		_main
 12170 ;; This function uses a non-reentrant model
 12171 ;;
 12172                           
 12173     146C                     _initLedStrip:	
 12174                           ;psect for function _initLedStrip
 12175                           
 12176     146C                     l5887:	
 12177                           ;incstack = 0
 12178                           ; Regs used in _initLedStrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12179                           
 12180                           
 12181                           ;ledstrip.c: 48:     spi_master_open(MASTER0);
 12182     146C  3000               	movlw	0
 12183     146D  3196  2609  3194   	fcall	_spi_master_open
 12184     1470                     l804:
 12185     1470  0008               	return
 12186     1471                     __end_of_initLedStrip:
 12187                           
 12188                           	psect	text37
 12189     1609                     __ptext37:	
 12190 ;; *************** function _spi_master_open *****************
 12191 ;; Defined at:
 12192 ;;		line 56 in file "mcc_generated_files/drivers/spi_master.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  config          1    wreg     enum E380
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;  config          1    5[COMMON] enum E380
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      _Bool 
 12199 ;; Registers used:
 12200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12210 ;;Total ram usage:        3 bytes
 12211 ;; Hardware stack levels used: 1
 12212 ;; Hardware stack levels required when called: 6
 12213 ;; This function calls:
 12214 ;;		_MASTER0_open
 12215 ;; This function is called by:
 12216 ;;		_initLedStrip
 12217 ;;		_SPI_Master_test
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221     1609                     _spi_master_open:	
 12222                           ;psect for function _spi_master_open
 12223                           
 12224                           
 12225                           ;incstack = 0
 12226                           ; Regs used in _spi_master_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12227                           ;spi_master_open@config stored from wreg
 12228     1609  00F5               	movwf	spi_master_open@config
 12229     160A                     l5645:
 12230                           
 12231                           ;mcc_generated_files/drivers/spi_master.c: 57:     switch(config){
 12232     160A  2E11               	goto	l5657
 12233     160B                     l5647:
 12234                           
 12235                           ;mcc_generated_files/drivers/spi_master.c: 59:             return MASTER0_open();
 12236     160B  3194  2467  3196   	fcall	_MASTER0_open
 12237     160E  2E1F               	goto	l28
 12238     160F                     l5651:
 12239                           
 12240                           ;mcc_generated_files/drivers/spi_master.c: 61:             return 0;
 12241     160F  3000               	movlw	0
 12242     1610  2E1F               	goto	l28
 12243     1611                     l5657:
 12244     1611  0875               	movf	spi_master_open@config,w
 12245     1612  0020               	movlb	0	; select bank0
 12246     1613  00A3               	movwf	??_spi_master_open
 12247     1614  01A4               	clrf	??_spi_master_open+1
 12248                           
 12249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12250                           ; Switch size 1, requested type "simple"
 12251                           ; Number of cases is 1, Range of values is 0 to 0
 12252                           ; switch strategies available:
 12253                           ; Name         Instructions Cycles
 12254                           ; simple_byte            4     3 (average)
 12255                           ; direct_byte            8     6 (fixed)
 12256                           ; jumptable            260     6 (fixed)
 12257                           ;	Chosen strategy is simple_byte
 12258     1615  0824               	movf	??_spi_master_open+1,w
 12259     1616  3A00               	xorlw	0	; case 0
 12260     1617  1903               	skipnz
 12261     1618  2E1A               	goto	l6157
 12262     1619  2E0F               	goto	l5651
 12263     161A                     l6157:
 12264                           
 12265                           ; Switch size 1, requested type "simple"
 12266                           ; Number of cases is 1, Range of values is 0 to 0
 12267                           ; switch strategies available:
 12268                           ; Name         Instructions Cycles
 12269                           ; simple_byte            4     3 (average)
 12270                           ; direct_byte            8     6 (fixed)
 12271                           ; jumptable            260     6 (fixed)
 12272                           ;	Chosen strategy is simple_byte
 12273     161A  0823               	movf	??_spi_master_open,w
 12274     161B  3A00               	xorlw	0	; case 0
 12275     161C  1903               	skipnz
 12276     161D  2E0B               	goto	l5647
 12277     161E  2E0F               	goto	l5651
 12278     161F                     l28:
 12279     161F  0008               	return
 12280     1620                     __end_of_spi_master_open:
 12281                           
 12282                           	psect	text38
 12283     1467                     __ptext38:	
 12284 ;; *************** function _MASTER0_open *****************
 12285 ;; Defined at:
 12286 ;;		line 41 in file "mcc_generated_files/drivers/spi_master.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      _Bool 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12304 ;;Total ram usage:        0 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; Hardware stack levels required when called: 5
 12307 ;; This function calls:
 12308 ;;		_SPI1_Open
 12309 ;; This function is called by:
 12310 ;;		_spi_master_open
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314     1467                     _MASTER0_open:	
 12315                           ;psect for function _MASTER0_open
 12316                           
 12317     1467                     l5223:	
 12318                           ;incstack = 0
 12319                           ; Regs used in _MASTER0_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12320                           
 12321                           
 12322                           ;mcc_generated_files/drivers/spi_master.c: 42:     return SPI1_Open(MASTER0_CONFIG);
 12323     1467  3000               	movlw	0
 12324     1468  318A  222F  3194   	fcall	_SPI1_Open
 12325     146B                     l23:
 12326     146B  0008               	return
 12327     146C                     __end_of_MASTER0_open:
 12328                           
 12329                           	psect	text39
 12330     0A2F                     __ptext39:	
 12331 ;; *************** function _SPI1_Open *****************
 12332 ;; Defined at:
 12333 ;;		line 78 in file "mcc_generated_files/spi1.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  spi1UniqueCo    1    wreg     enum E358
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;  spi1UniqueCo    1    4[COMMON] enum E358
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      _Bool 
 12340 ;; Registers used:
 12341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12351 ;;Total ram usage:        4 bytes
 12352 ;; Hardware stack levels used: 1
 12353 ;; Hardware stack levels required when called: 4
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_MASTER0_open
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361     0A2F                     _SPI1_Open:	
 12362                           ;psect for function _SPI1_Open
 12363                           
 12364                           
 12365                           ;incstack = 0
 12366                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 12367                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 12368     0A2F  00F4               	movwf	SPI1_Open@spi1UniqueConfiguration
 12369     0A30                     l4953:
 12370                           
 12371                           ;mcc_generated_files/spi1.c: 78: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 79: {;mcc_generated_files/spi1.c: 80:     if(!SSP1CON1bits.SS
      +                          PEN)
 12372     0A30  0024               	movlb	4	; select bank4
 12373     0A31  1A95               	btfsc	21,5	;volatile
 12374     0A32  2A34               	goto	u4451
 12375     0A33  2A35               	goto	u4450
 12376     0A34                     u4451:
 12377     0A34  2A8C               	goto	l4969
 12378     0A35                     u4450:
 12379     0A35                     l4955:
 12380                           
 12381                           ;mcc_generated_files/spi1.c: 81:     {;mcc_generated_files/spi1.c: 82:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 12382     0A35  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 12383     0A36  0020               	movlb	0	; select bank0
 12384     0A37  00A0               	movwf	??_SPI1_Open
 12385     0A38  01A1               	clrf	??_SPI1_Open+1
 12386     0A39  35A0               	lslf	??_SPI1_Open,f
 12387     0A3A  0DA1               	rlf	??_SPI1_Open+1,f
 12388     0A3B  35A0               	lslf	??_SPI1_Open,f
 12389     0A3C  0DA1               	rlf	??_SPI1_Open+1,f
 12390     0A3D  3001               	movlw	low (_spi1_configuration+1)
 12391     0A3E  0720               	addwf	??_SPI1_Open,w
 12392     0A3F  0084               	movwf	4
 12393     0A40  3018               	movlw	high (_spi1_configuration+1)
 12394     0A41  3D21               	addwfc	??_SPI1_Open+1,w
 12395     0A42  3880               	iorlw	128
 12396     0A43  0085               	movwf	5
 12397     0A44  0800               	movf	0,w	;code access
 12398     0A45  0024               	movlb	4	; select bank4
 12399     0A46  0094               	movwf	20	;volatile
 12400                           
 12401                           ;mcc_generated_files/spi1.c: 83:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 12402     0A47  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 12403     0A48  0020               	movlb	0	; select bank0
 12404     0A49  00A0               	movwf	??_SPI1_Open
 12405     0A4A  01A1               	clrf	??_SPI1_Open+1
 12406     0A4B  35A0               	lslf	??_SPI1_Open,f
 12407     0A4C  0DA1               	rlf	??_SPI1_Open+1,f
 12408     0A4D  35A0               	lslf	??_SPI1_Open,f
 12409     0A4E  0DA1               	rlf	??_SPI1_Open+1,f
 12410     0A4F  3000               	movlw	low _spi1_configuration
 12411     0A50  0720               	addwf	??_SPI1_Open,w
 12412     0A51  0084               	movwf	4
 12413     0A52  3018               	movlw	high _spi1_configuration
 12414     0A53  3D21               	addwfc	??_SPI1_Open+1,w
 12415     0A54  3880               	iorlw	128
 12416     0A55  0085               	movwf	5
 12417     0A56  0800               	movf	0,w	;code access
 12418     0A57  0024               	movlb	4	; select bank4
 12419     0A58  0095               	movwf	21	;volatile
 12420     0A59                     l4957:
 12421                           
 12422                           ;mcc_generated_files/spi1.c: 84:         SSP1CON2 = 0x00;
 12423     0A59  0196               	clrf	22	;volatile
 12424     0A5A                     l4959:
 12425                           
 12426                           ;mcc_generated_files/spi1.c: 85:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 12427     0A5A  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 12428     0A5B  0020               	movlb	0	; select bank0
 12429     0A5C  00A0               	movwf	??_SPI1_Open
 12430     0A5D  01A1               	clrf	??_SPI1_Open+1
 12431     0A5E  35A0               	lslf	??_SPI1_Open,f
 12432     0A5F  0DA1               	rlf	??_SPI1_Open+1,f
 12433     0A60  35A0               	lslf	??_SPI1_Open,f
 12434     0A61  0DA1               	rlf	??_SPI1_Open+1,f
 12435     0A62  3002               	movlw	low (_spi1_configuration+2)
 12436     0A63  0720               	addwf	??_SPI1_Open,w
 12437     0A64  0084               	movwf	4
 12438     0A65  3018               	movlw	high (_spi1_configuration+2)
 12439     0A66  3D21               	addwfc	??_SPI1_Open+1,w
 12440     0A67  3880               	iorlw	128
 12441     0A68  0085               	movwf	5
 12442     0A69  0800               	movf	0,w	;code access
 12443     0A6A  0024               	movlb	4	; select bank4
 12444     0A6B  0092               	movwf	18	;volatile
 12445     0A6C                     l4961:
 12446                           
 12447                           ;mcc_generated_files/spi1.c: 86:         TRISBbits.TRISB6 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 12448     0A6C  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 12449     0A6D  0020               	movlb	0	; select bank0
 12450     0A6E  00A0               	movwf	??_SPI1_Open
 12451     0A6F  01A1               	clrf	??_SPI1_Open+1
 12452     0A70  35A0               	lslf	??_SPI1_Open,f
 12453     0A71  0DA1               	rlf	??_SPI1_Open+1,f
 12454     0A72  35A0               	lslf	??_SPI1_Open,f
 12455     0A73  0DA1               	rlf	??_SPI1_Open+1,f
 12456     0A74  3003               	movlw	low (_spi1_configuration+3)
 12457     0A75  0720               	addwf	??_SPI1_Open,w
 12458     0A76  0084               	movwf	4
 12459     0A77  3018               	movlw	high (_spi1_configuration+3)
 12460     0A78  3D21               	addwfc	??_SPI1_Open+1,w
 12461     0A79  3880               	iorlw	128
 12462     0A7A  0085               	movwf	5
 12463     0A7B  0800               	movf	0,w	;code access
 12464     0A7C  00A2               	movwf	??_SPI1_Open+2
 12465     0A7D  0EA2               	swapf	??_SPI1_Open+2,f
 12466     0A7E  0DA2               	rlf	??_SPI1_Open+2,f
 12467     0A7F  0DA2               	rlf	??_SPI1_Open+2,f
 12468     0A80  0021               	movlb	1	; select bank1
 12469     0A81  080D               	movf	13,w	;volatile
 12470     0A82  0020               	movlb	0	; select bank0
 12471     0A83  0622               	xorwf	??_SPI1_Open+2,w
 12472     0A84  39BF               	andlw	-65
 12473     0A85  0622               	xorwf	??_SPI1_Open+2,w
 12474     0A86  0021               	movlb	1	; select bank1
 12475     0A87  008D               	movwf	13	;volatile
 12476     0A88                     l4963:
 12477                           
 12478                           ;mcc_generated_files/spi1.c: 87:         SSP1CON1bits.SSPEN = 1;
 12479     0A88  0024               	movlb	4	; select bank4
 12480     0A89  1695               	bsf	21,5	;volatile
 12481     0A8A                     l4965:
 12482                           
 12483                           ;mcc_generated_files/spi1.c: 88:         return 1;
 12484     0A8A  3001               	movlw	1
 12485     0A8B  2A8D               	goto	l520
 12486     0A8C                     l4969:
 12487                           
 12488                           ;mcc_generated_files/spi1.c: 90:     return 0;
 12489     0A8C  3000               	movlw	0
 12490     0A8D                     l520:
 12491     0A8D  0008               	return
 12492     0A8E                     __end_of_SPI1_Open:
 12493                           
 12494                           	psect	text40
 12495     1531                     __ptext40:	
 12496 ;; *************** function _initAdcMultiplexer *****************
 12497 ;; Defined at:
 12498 ;;		line 35 in file "adcMultiplexer.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;		None
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;		None
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  1    wreg      void 
 12505 ;; Registers used:
 12506 ;;		wreg, status,2, status,0, pclath, cstack
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/0
 12509 ;;		On exit  : 0/0
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;Total ram usage:        0 bytes
 12517 ;; Hardware stack levels used: 1
 12518 ;; Hardware stack levels required when called: 5
 12519 ;; This function calls:
 12520 ;;		_ADC_SelectChannel
 12521 ;;		_ADC_SetInterruptHandler
 12522 ;; This function is called by:
 12523 ;;		_main
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527     1531                     _initAdcMultiplexer:	
 12528                           ;psect for function _initAdcMultiplexer
 12529                           
 12530     1531                     l4569:	
 12531                           ;incstack = 0
 12532                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 12533                           
 12534                           
 12535                           ;adcMultiplexer.c: 36:     ADC_SelectChannel(Potentiometer);
 12536     1531  3010               	movlw	16
 12537     1532  3195  256F  3195   	fcall	_ADC_SelectChannel
 12538                           
 12539                           ;adcMultiplexer.c: 42:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 12540     1535  3061               	movlw	low _adcConversionDoneHandler
 12541     1536  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
 12542     1537  3017               	movlw	high _adcConversionDoneHandler
 12543     1538  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 12544     1539  3194  247C  3195   	fcall	_ADC_SetInterruptHandler
 12545     153C                     l873:
 12546     153C  0008               	return
 12547     153D                     __end_of_initAdcMultiplexer:
 12548                           
 12549                           	psect	text41
 12550     156F                     __ptext41:	
 12551 ;; *************** function _ADC_SelectChannel *****************
 12552 ;; Defined at:
 12553 ;;		line 93 in file "mcc_generated_files/adc.c"
 12554 ;; Parameters:    Size  Location     Type
 12555 ;;  channel         1    wreg     enum E6659
 12556 ;; Auto vars:     Size  Location     Type
 12557 ;;  channel         1    5[COMMON] enum E6659
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  1    wreg      void 
 12560 ;; Registers used:
 12561 ;;		wreg, status,2, status,0
 12562 ;; Tracked objects:
 12563 ;;		On entry : 0/0
 12564 ;;		On exit  : 0/0
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12571 ;;Total ram usage:        2 bytes
 12572 ;; Hardware stack levels used: 1
 12573 ;; Hardware stack levels required when called: 4
 12574 ;; This function calls:
 12575 ;;		Nothing
 12576 ;; This function is called by:
 12577 ;;		_initAdcMultiplexer
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581     156F                     _ADC_SelectChannel:	
 12582                           ;psect for function _ADC_SelectChannel
 12583                           
 12584                           
 12585                           ;incstack = 0
 12586                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 12587                           ;ADC_SelectChannel@channel stored from wreg
 12588     156F  00F5               	movwf	ADC_SelectChannel@channel
 12589     1570                     l4225:
 12590                           
 12591                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
 12592     1570  0875               	movf	ADC_SelectChannel@channel,w
 12593     1571  00F4               	movwf	??_ADC_SelectChannel
 12594     1572  0DF4               	rlf	??_ADC_SelectChannel,f
 12595     1573  0DF4               	rlf	??_ADC_SelectChannel,f
 12596     1574  0021               	movlb	1	; select bank1
 12597     1575  081D               	movf	29,w	;volatile
 12598     1576  0674               	xorwf	??_ADC_SelectChannel,w
 12599     1577  3903               	andlw	-253
 12600     1578  0674               	xorwf	??_ADC_SelectChannel,w
 12601     1579  009D               	movwf	29	;volatile
 12602     157A                     l4227:
 12603                           
 12604                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
 12605     157A  141D               	bsf	29,0	;volatile
 12606     157B                     l459:
 12607     157B  0008               	return
 12608     157C                     __end_of_ADC_SelectChannel:
 12609                           
 12610                           	psect	text42
 12611     1562                     __ptext42:	
 12612 ;; *************** function _TMR4_HasOverflowOccured *****************
 12613 ;; Defined at:
 12614 ;;		line 111 in file "mcc_generated_files/tmr4.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;		None
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;  status          1    4[COMMON] _Bool 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      _Bool 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;Total ram usage:        1 bytes
 12633 ;; Hardware stack levels used: 1
 12634 ;; Hardware stack levels required when called: 4
 12635 ;; This function calls:
 12636 ;;		Nothing
 12637 ;; This function is called by:
 12638 ;;		_main
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642     1562                     _TMR4_HasOverflowOccured:	
 12643                           ;psect for function _TMR4_HasOverflowOccured
 12644                           
 12645     1562                     l4487:	
 12646                           ;incstack = 0
 12647                           ; Regs used in _TMR4_HasOverflowOccured: [wreg+status,2+status,0]
 12648                           
 12649                           
 12650                           ;mcc_generated_files/tmr4.c: 114:     _Bool status = PIR2bits.TMR4IF;
 12651     1562  3000               	movlw	0
 12652     1563  0020               	movlb	0	; select bank0
 12653     1564  1892               	btfsc	18,1	;volatile
 12654     1565  3001               	movlw	1
 12655     1566  00F4               	movwf	TMR4_HasOverflowOccured@status
 12656     1567                     l4489:
 12657                           
 12658                           ;mcc_generated_files/tmr4.c: 115:     if(status)
 12659     1567  0874               	movf	TMR4_HasOverflowOccured@status,w
 12660     1568  1903               	btfsc	3,2
 12661     1569  2D6B               	goto	u4001
 12662     156A  2D6C               	goto	u4000
 12663     156B                     u4001:
 12664     156B  2D6D               	goto	l4493
 12665     156C                     u4000:
 12666     156C                     l4491:
 12667                           
 12668                           ;mcc_generated_files/tmr4.c: 116:     {;mcc_generated_files/tmr4.c: 118:         PIR2bit
      +                          s.TMR4IF = 0;
 12669     156C  1092               	bcf	18,1	;volatile
 12670     156D                     l4493:
 12671                           
 12672                           ;mcc_generated_files/tmr4.c: 120:     return status;
 12673     156D  0874               	movf	TMR4_HasOverflowOccured@status,w
 12674     156E                     l588:
 12675     156E  0008               	return
 12676     156F                     __end_of_TMR4_HasOverflowOccured:
 12677                           
 12678                           	psect	text43
 12679     1462                     __ptext43:	
 12680 ;; *************** function _TMR0_HasOverflowOccured *****************
 12681 ;; Defined at:
 12682 ;;		line 114 in file "mcc_generated_files/tmr0.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;		None
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;		None
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1    wreg      _Bool 
 12689 ;; Registers used:
 12690 ;;		wreg, status,2, status,0
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;Total ram usage:        0 bytes
 12701 ;; Hardware stack levels used: 1
 12702 ;; Hardware stack levels required when called: 4
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_main
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710     1462                     _TMR0_HasOverflowOccured:	
 12711                           ;psect for function _TMR0_HasOverflowOccured
 12712                           
 12713     1462                     l4423:	
 12714                           ;incstack = 0
 12715                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 12716                           
 12717                           
 12718                           ;mcc_generated_files/tmr0.c: 117:     return(PIR0bits.TMR0IF);
 12719     1462  0020               	movlb	0	; select bank0
 12720     1463  0E10               	swapf	16,w	;volatile
 12721     1464  0C89               	rrf	9,f
 12722     1465  3901               	andlw	1
 12723     1466                     l86:
 12724     1466  0008               	return
 12725     1467                     __end_of_TMR0_HasOverflowOccured:
 12726                           
 12727                           	psect	text44
 12728     171B                     __ptext44:	
 12729 ;; *************** function _SYSTEM_Initialize *****************
 12730 ;; Defined at:
 12731 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;		None
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		wreg, status,2, status,0, pclath, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;Total ram usage:        0 bytes
 12750 ;; Hardware stack levels used: 1
 12751 ;; Hardware stack levels required when called: 6
 12752 ;; This function calls:
 12753 ;;		_ADC_Initialize
 12754 ;;		_EUSART_Initialize
 12755 ;;		_OSCILLATOR_Initialize
 12756 ;;		_PIN_MANAGER_Initialize
 12757 ;;		_PMD_Initialize
 12758 ;;		_PWM5_Initialize
 12759 ;;		_SPI1_Initialize
 12760 ;;		_TMR0_Initialize
 12761 ;;		_TMR2_Initialize
 12762 ;;		_TMR4_Initialize
 12763 ;;		_WDT_Initialize
 12764 ;; This function is called by:
 12765 ;;		_main
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769     171B                     _SYSTEM_Initialize:	
 12770                           ;psect for function _SYSTEM_Initialize
 12771                           
 12772     171B                     l4427:	
 12773                           ;incstack = 0
 12774                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12775                           
 12776                           
 12777                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12778     171B  3194  24B9  3197   	fcall	_PMD_Initialize
 12779     171E                     l4429:
 12780                           
 12781                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
 12782     171E  3195  25DF  3197   	fcall	_SPI1_Initialize
 12783     1721                     l4431:
 12784                           
 12785                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 12786     1721  3197  27C7  3197   	fcall	_PIN_MANAGER_Initialize
 12787     1724                     l4433:
 12788                           
 12789                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 12790     1724  3195  2519  3197   	fcall	_OSCILLATOR_Initialize
 12791     1727                     l4435:
 12792                           
 12793                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 12794     1727  3187  27FC  3197   	fcall	_WDT_Initialize
 12795     172A                     l4437:
 12796                           
 12797                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 12798     172A  3195  25CD  3197   	fcall	_ADC_Initialize
 12799     172D                     l4439:
 12800                           
 12801                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
 12802     172D  3194  24E5  3197   	fcall	_TMR4_Initialize
 12803     1730                     l4441:
 12804                           
 12805                           ;mcc_generated_files/mcc.c: 60:     PWM5_Initialize();
 12806     1730  3195  2525  3197   	fcall	_PWM5_Initialize
 12807     1733                     l4443:
 12808                           
 12809                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 12810     1733  3194  24C1  3197   	fcall	_TMR2_Initialize
 12811     1736                     l4445:
 12812                           
 12813                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 12814     1736  3194  24DB  3197   	fcall	_TMR0_Initialize
 12815     1739                     l4447:
 12816                           
 12817                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
 12818     1739  3188  2024  3197   	fcall	_EUSART_Initialize
 12819     173C                     l245:
 12820     173C  0008               	return
 12821     173D                     __end_of_SYSTEM_Initialize:
 12822                           
 12823                           	psect	text45
 12824     07FC                     __ptext45:	
 12825 ;; *************** function _WDT_Initialize *****************
 12826 ;; Defined at:
 12827 ;;		line 84 in file "mcc_generated_files/mcc.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;		None
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;		None
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  1    wreg      void 
 12834 ;; Registers used:
 12835 ;;		wreg
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12845 ;;Total ram usage:        0 bytes
 12846 ;; Hardware stack levels used: 1
 12847 ;; Hardware stack levels required when called: 4
 12848 ;; This function calls:
 12849 ;;		Nothing
 12850 ;; This function is called by:
 12851 ;;		_SYSTEM_Initialize
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855     07FC                     _WDT_Initialize:	
 12856                           ;psect for function _WDT_Initialize
 12857                           
 12858     07FC                     l4169:	
 12859                           ;incstack = 0
 12860                           ; Regs used in _WDT_Initialize: [wreg]
 12861                           
 12862                           
 12863                           ;mcc_generated_files/mcc.c: 87:     WDTCON = 0x16;
 12864     07FC  3016               	movlw	22
 12865     07FD  0021               	movlb	1	; select bank1
 12866     07FE  0097               	movwf	23	;volatile
 12867     07FF                     l254:
 12868     07FF  0008               	return
 12869     0800                     __end_of_WDT_Initialize:
 12870                           
 12871                           	psect	text46
 12872     14E5                     __ptext46:	
 12873 ;; *************** function _TMR4_Initialize *****************
 12874 ;; Defined at:
 12875 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 12876 ;; Parameters:    Size  Location     Type
 12877 ;;		None
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;		None
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  1    wreg      void 
 12882 ;; Registers used:
 12883 ;;		wreg, status,2
 12884 ;; Tracked objects:
 12885 ;;		On entry : 0/0
 12886 ;;		On exit  : 0/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;Total ram usage:        0 bytes
 12894 ;; Hardware stack levels used: 1
 12895 ;; Hardware stack levels required when called: 4
 12896 ;; This function calls:
 12897 ;;		Nothing
 12898 ;; This function is called by:
 12899 ;;		_SYSTEM_Initialize
 12900 ;;		_main
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904     14E5                     _TMR4_Initialize:	
 12905                           ;psect for function _TMR4_Initialize
 12906                           
 12907     14E5                     l4181:	
 12908                           ;incstack = 0
 12909                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 12910                           
 12911                           
 12912                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0x9B;
 12913     14E5  309B               	movlw	155
 12914     14E6  0028               	movlb	8	; select bank8
 12915     14E7  0096               	movwf	22	;volatile
 12916     14E8                     l4183:
 12917                           
 12918                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
 12919     14E8  0195               	clrf	21	;volatile
 12920     14E9                     l4185:
 12921                           
 12922                           ;mcc_generated_files/tmr4.c: 73:     PIR2bits.TMR4IF = 0;
 12923     14E9  0020               	movlb	0	; select bank0
 12924     14EA  1092               	bcf	18,1	;volatile
 12925     14EB                     l4187:
 12926                           
 12927                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x3F;
 12928     14EB  303F               	movlw	63
 12929     14EC  0028               	movlb	8	; select bank8
 12930     14ED  0097               	movwf	23	;volatile
 12931     14EE                     l569:
 12932     14EE  0008               	return
 12933     14EF                     __end_of_TMR4_Initialize:
 12934                           
 12935                           	psect	text47
 12936     14C1                     __ptext47:	
 12937 ;; *************** function _TMR2_Initialize *****************
 12938 ;; Defined at:
 12939 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;		None
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;		None
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  1    wreg      void 
 12946 ;; Registers used:
 12947 ;;		wreg, status,2
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;Total ram usage:        0 bytes
 12958 ;; Hardware stack levels used: 1
 12959 ;; Hardware stack levels required when called: 4
 12960 ;; This function calls:
 12961 ;;		Nothing
 12962 ;; This function is called by:
 12963 ;;		_SYSTEM_Initialize
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967     14C1                     _TMR2_Initialize:	
 12968                           ;psect for function _TMR2_Initialize
 12969                           
 12970     14C1                     l4099:	
 12971                           ;incstack = 0
 12972                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12973                           
 12974                           
 12975                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
 12976     14C1  30FF               	movlw	255
 12977     14C2  0020               	movlb	0	; select bank0
 12978     14C3  009E               	movwf	30	;volatile
 12979     14C4                     l4101:
 12980                           
 12981                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 12982     14C4  019D               	clrf	29	;volatile
 12983     14C5                     l4103:
 12984                           
 12985                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 12986     14C5  1091               	bcf	17,1	;volatile
 12987     14C6                     l4105:
 12988                           
 12989                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
 12990     14C6  3006               	movlw	6
 12991     14C7  009F               	movwf	31	;volatile
 12992     14C8                     l113:
 12993     14C8  0008               	return
 12994     14C9                     __end_of_TMR2_Initialize:
 12995                           
 12996                           	psect	text48
 12997     14DB                     __ptext48:	
 12998 ;; *************** function _TMR0_Initialize *****************
 12999 ;; Defined at:
 13000 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 13001 ;; Parameters:    Size  Location     Type
 13002 ;;		None
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;		None
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  1    wreg      void 
 13007 ;; Registers used:
 13008 ;;		wreg, status,2
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;Total ram usage:        0 bytes
 13019 ;; Hardware stack levels used: 1
 13020 ;; Hardware stack levels required when called: 4
 13021 ;; This function calls:
 13022 ;;		Nothing
 13023 ;; This function is called by:
 13024 ;;		_SYSTEM_Initialize
 13025 ;;		_main
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029     14DB                     _TMR0_Initialize:	
 13030                           ;psect for function _TMR0_Initialize
 13031                           
 13032     14DB                     l4085:	
 13033                           ;incstack = 0
 13034                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
 13035                           
 13036                           
 13037                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x83;
 13038     14DB  3083               	movlw	131
 13039     14DC  0020               	movlb	0	; select bank0
 13040     14DD  0098               	movwf	24	;volatile
 13041                           
 13042                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x7F;
 13043     14DE  307F               	movlw	127
 13044     14DF  0096               	movwf	22	;volatile
 13045     14E0                     l4087:
 13046                           
 13047                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
 13048     14E0  0195               	clrf	21	;volatile
 13049     14E1                     l4089:
 13050                           
 13051                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
 13052     14E1  1290               	bcf	16,5	;volatile
 13053     14E2                     l4091:
 13054                           
 13055                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
 13056     14E2  3080               	movlw	128
 13057     14E3  0097               	movwf	23	;volatile
 13058     14E4                     l68:
 13059     14E4  0008               	return
 13060     14E5                     __end_of_TMR0_Initialize:
 13061                           
 13062                           	psect	text49
 13063     15DF                     __ptext49:	
 13064 ;; *************** function _SPI1_Initialize *****************
 13065 ;; Defined at:
 13066 ;;		line 63 in file "mcc_generated_files/spi1.c"
 13067 ;; Parameters:    Size  Location     Type
 13068 ;;		None
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;		None
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  1    wreg      void 
 13073 ;; Registers used:
 13074 ;;		wreg, status,2
 13075 ;; Tracked objects:
 13076 ;;		On entry : 0/0
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13084 ;;Total ram usage:        0 bytes
 13085 ;; Hardware stack levels used: 1
 13086 ;; Hardware stack levels required when called: 4
 13087 ;; This function calls:
 13088 ;;		Nothing
 13089 ;; This function is called by:
 13090 ;;		_SYSTEM_Initialize
 13091 ;; This function uses a non-reentrant model
 13092 ;;
 13093                           
 13094     15DF                     _SPI1_Initialize:	
 13095                           ;psect for function _SPI1_Initialize
 13096                           
 13097     15DF                     l4147:	
 13098                           ;incstack = 0
 13099                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
 13100                           
 13101                           
 13102                           ;mcc_generated_files/spi1.c: 66:     SSP1CLKPPS = 14;
 13103     15DF  300E               	movlw	14
 13104     15E0  003C               	movlb	28	; select bank28
 13105     15E1  00A0               	movwf	32	;volatile
 13106     15E2                     l4149:
 13107                           
 13108                           ;mcc_generated_files/spi1.c: 67:     SSP1DATPPS = 0;
 13109     15E2  01A1               	clrf	33	;volatile
 13110     15E3                     l4151:
 13111                           
 13112                           ;mcc_generated_files/spi1.c: 68:     RB6PPS = 24;
 13113     15E3  3018               	movlw	24
 13114     15E4  003D               	movlb	29	; select bank29
 13115     15E5  009E               	movwf	30	;volatile
 13116     15E6                     l4153:
 13117                           
 13118                           ;mcc_generated_files/spi1.c: 69:     RB4PPS = 25;
 13119     15E6  3019               	movlw	25
 13120     15E7  009C               	movwf	28	;volatile
 13121     15E8                     l4155:
 13122                           
 13123                           ;mcc_generated_files/spi1.c: 71:     SSP1STAT = 0x40;
 13124     15E8  3040               	movlw	64
 13125     15E9  0024               	movlb	4	; select bank4
 13126     15EA  0094               	movwf	20	;volatile
 13127                           
 13128                           ;mcc_generated_files/spi1.c: 72:     SSP1CON1 = 0x00;
 13129     15EB  0195               	clrf	21	;volatile
 13130     15EC                     l4157:
 13131                           
 13132                           ;mcc_generated_files/spi1.c: 73:     SSP1ADD = 0x01;
 13133     15EC  3001               	movlw	1
 13134     15ED  0092               	movwf	18	;volatile
 13135     15EE                     l4159:
 13136                           
 13137                           ;mcc_generated_files/spi1.c: 74:     TRISBbits.TRISB6 = 0;
 13138     15EE  0021               	movlb	1	; select bank1
 13139     15EF  130D               	bcf	13,6	;volatile
 13140     15F0                     l4161:
 13141                           
 13142                           ;mcc_generated_files/spi1.c: 75:     SSP1CON1bits.SSPEN = 0;
 13143     15F0  0024               	movlb	4	; select bank4
 13144     15F1  1295               	bcf	21,5	;volatile
 13145     15F2                     l516:
 13146     15F2  0008               	return
 13147     15F3                     __end_of_SPI1_Initialize:
 13148                           
 13149                           	psect	text50
 13150     1525                     __ptext50:	
 13151 ;; *************** function _PWM5_Initialize *****************
 13152 ;; Defined at:
 13153 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 13154 ;; Parameters:    Size  Location     Type
 13155 ;;		None
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;		None
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  1    wreg      void 
 13160 ;; Registers used:
 13161 ;;		wreg, status,2, status,0
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13171 ;;Total ram usage:        0 bytes
 13172 ;; Hardware stack levels used: 1
 13173 ;; Hardware stack levels required when called: 4
 13174 ;; This function calls:
 13175 ;;		Nothing
 13176 ;; This function is called by:
 13177 ;;		_SYSTEM_Initialize
 13178 ;; This function uses a non-reentrant model
 13179 ;;
 13180                           
 13181     1525                     _PWM5_Initialize:	
 13182                           ;psect for function _PWM5_Initialize
 13183                           
 13184     1525                     l4093:	
 13185                           ;incstack = 0
 13186                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 13187                           
 13188                           
 13189                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 13190     1525  3080               	movlw	128
 13191     1526  002C               	movlb	12	; select bank12
 13192     1527  0099               	movwf	25	;volatile
 13193                           
 13194                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x7F;
 13195     1528  307F               	movlw	127
 13196     1529  0098               	movwf	24	;volatile
 13197                           
 13198                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 13199     152A  30C0               	movlw	192
 13200     152B  0097               	movwf	23	;volatile
 13201     152C                     l4095:
 13202                           
 13203                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
 13204     152C  081F               	movf	31,w	;volatile
 13205     152D  39FC               	andlw	-4
 13206     152E  3801               	iorlw	1
 13207     152F  009F               	movwf	31	;volatile
 13208     1530                     l97:
 13209     1530  0008               	return
 13210     1531                     __end_of_PWM5_Initialize:
 13211                           
 13212                           	psect	text51
 13213     14B9                     __ptext51:	
 13214 ;; *************** function _PMD_Initialize *****************
 13215 ;; Defined at:
 13216 ;;		line 90 in file "mcc_generated_files/mcc.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;		None
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;		None
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1    wreg      void 
 13223 ;; Registers used:
 13224 ;;		status,2
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;Total ram usage:        0 bytes
 13235 ;; Hardware stack levels used: 1
 13236 ;; Hardware stack levels required when called: 4
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_SYSTEM_Initialize
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244     14B9                     _PMD_Initialize:	
 13245                           ;psect for function _PMD_Initialize
 13246                           
 13247     14B9                     l4145:	
 13248                           ;incstack = 0
 13249                           ; Regs used in _PMD_Initialize: [status,2]
 13250                           
 13251                           
 13252                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 13253     14B9  0032               	movlb	18	; select bank18
 13254     14BA  0191               	clrf	17	;volatile
 13255                           
 13256                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 13257     14BB  0192               	clrf	18	;volatile
 13258                           
 13259                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 13260     14BC  0193               	clrf	19	;volatile
 13261                           
 13262                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 13263     14BD  0194               	clrf	20	;volatile
 13264                           
 13265                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 13266     14BE  0195               	clrf	21	;volatile
 13267                           
 13268                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 13269     14BF  0196               	clrf	22	;volatile
 13270     14C0                     l257:
 13271     14C0  0008               	return
 13272     14C1                     __end_of_PMD_Initialize:
 13273                           
 13274                           	psect	text52
 13275     17C7                     __ptext52:	
 13276 ;; *************** function _PIN_MANAGER_Initialize *****************
 13277 ;; Defined at:
 13278 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;		None
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      void 
 13285 ;; Registers used:
 13286 ;;		wreg, status,2
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13296 ;;Total ram usage:        0 bytes
 13297 ;; Hardware stack levels used: 1
 13298 ;; Hardware stack levels required when called: 4
 13299 ;; This function calls:
 13300 ;;		Nothing
 13301 ;; This function is called by:
 13302 ;;		_SYSTEM_Initialize
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306     17C7                     _PIN_MANAGER_Initialize:	
 13307                           ;psect for function _PIN_MANAGER_Initialize
 13308                           
 13309     17C7                     l4107:	
 13310                           ;incstack = 0
 13311                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13312                           
 13313                           
 13314                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 13315     17C7  0022               	movlb	2	; select bank2
 13316     17C8  018C               	clrf	12	;volatile
 13317                           
 13318                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 13319     17C9  018D               	clrf	13	;volatile
 13320                           
 13321                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 13322     17CA  018E               	clrf	14	;volatile
 13323     17CB                     l4109:
 13324                           
 13325                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x17;
 13326     17CB  3017               	movlw	23
 13327     17CC  0021               	movlb	1	; select bank1
 13328     17CD  008C               	movwf	12	;volatile
 13329     17CE                     l4111:
 13330                           
 13331                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x20;
 13332     17CE  3020               	movlw	32
 13333     17CF  008D               	movwf	13	;volatile
 13334     17D0                     l4113:
 13335                           
 13336                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x5F;
 13337     17D0  305F               	movlw	95
 13338     17D1  008E               	movwf	14	;volatile
 13339     17D2                     l4115:
 13340                           
 13341                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x6D;
 13342     17D2  306D               	movlw	109
 13343     17D3  0023               	movlb	3	; select bank3
 13344     17D4  008E               	movwf	14	;volatile
 13345     17D5                     l4117:
 13346                           
 13347                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x10;
 13348     17D5  3010               	movlw	16
 13349     17D6  008D               	movwf	13	;volatile
 13350     17D7                     l4119:
 13351                           
 13352                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x16;
 13353     17D7  3016               	movlw	22
 13354     17D8  008C               	movwf	12	;volatile
 13355                           
 13356                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 13357     17D9  0024               	movlb	4	; select bank4
 13358     17DA  018D               	clrf	13	;volatile
 13359                           
 13360                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 13361     17DB  018C               	clrf	12	;volatile
 13362                           
 13363                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 13364     17DC  018E               	clrf	14	;volatile
 13365                           
 13366                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 13367     17DD  0025               	movlb	5	; select bank5
 13368     17DE  018C               	clrf	12	;volatile
 13369                           
 13370                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 13371     17DF  018D               	clrf	13	;volatile
 13372                           
 13373                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 13374     17E0  018E               	clrf	14	;volatile
 13375     17E1                     l4121:
 13376                           
 13377                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 13378     17E1  3037               	movlw	55
 13379     17E2  0026               	movlb	6	; select bank6
 13380     17E3  008C               	movwf	12	;volatile
 13381     17E4                     l4123:
 13382                           
 13383                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 13384     17E4  30F0               	movlw	240
 13385     17E5  008D               	movwf	13	;volatile
 13386     17E6                     l4125:
 13387                           
 13388                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 13389     17E6  30FF               	movlw	255
 13390     17E7  008E               	movwf	14	;volatile
 13391     17E8                     l4127:
 13392                           
 13393                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 13394     17E8  303F               	movlw	63
 13395     17E9  0027               	movlb	7	; select bank7
 13396     17EA  008C               	movwf	12	;volatile
 13397     17EB                     l4129:
 13398                           
 13399                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 13400     17EB  30F0               	movlw	240
 13401     17EC  008D               	movwf	13	;volatile
 13402     17ED                     l4131:
 13403                           
 13404                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 13405     17ED  30FF               	movlw	255
 13406     17EE  008E               	movwf	14	;volatile
 13407     17EF                     l4133:
 13408                           
 13409                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0D;
 13410     17EF  300D               	movlw	13
 13411     17F0  003C               	movlb	28	; select bank28
 13412     17F1  00A4               	movwf	36	;volatile
 13413     17F2                     l4135:
 13414                           
 13415                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x0E;
 13416     17F2  300E               	movlw	14
 13417     17F3  00A0               	movwf	32	;volatile
 13418     17F4                     l4137:
 13419                           
 13420                           ;mcc_generated_files/pin_manager.c: 115:     RB6PPS = 0x18;
 13421     17F4  3018               	movlw	24
 13422     17F5  003D               	movlb	29	; select bank29
 13423     17F6  009E               	movwf	30	;volatile
 13424     17F7                     l4139:
 13425                           
 13426                           ;mcc_generated_files/pin_manager.c: 116:     RB7PPS = 0x14;
 13427     17F7  3014               	movlw	20
 13428     17F8  009F               	movwf	31	;volatile
 13429     17F9                     l4141:
 13430                           
 13431                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x19;
 13432     17F9  3019               	movlw	25
 13433     17FA  009C               	movwf	28	;volatile
 13434     17FB                     l4143:
 13435                           
 13436                           ;mcc_generated_files/pin_manager.c: 118:     RC5PPS = 0x02;
 13437     17FB  3002               	movlw	2
 13438     17FC  00A5               	movwf	37	;volatile
 13439                           
 13440                           ;mcc_generated_files/pin_manager.c: 119:     SSP1DATPPS = 0x00;
 13441     17FD  003C               	movlb	28	; select bank28
 13442     17FE  01A1               	clrf	33	;volatile
 13443     17FF                     l191:
 13444     17FF  0008               	return
 13445     1800                     __end_of_PIN_MANAGER_Initialize:
 13446                           
 13447                           	psect	text53
 13448     1519                     __ptext53:	
 13449 ;; *************** function _OSCILLATOR_Initialize *****************
 13450 ;; Defined at:
 13451 ;;		line 66 in file "mcc_generated_files/mcc.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;		None
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;		None
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1    wreg      void 
 13458 ;; Registers used:
 13459 ;;		wreg, status,2
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13469 ;;Total ram usage:        0 bytes
 13470 ;; Hardware stack levels used: 1
 13471 ;; Hardware stack levels required when called: 4
 13472 ;; This function calls:
 13473 ;;		Nothing
 13474 ;; This function is called by:
 13475 ;;		_SYSTEM_Initialize
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479     1519                     _OSCILLATOR_Initialize:	
 13480                           ;psect for function _OSCILLATOR_Initialize
 13481                           
 13482     1519                     l4163:	
 13483                           ;incstack = 0
 13484                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13485                           
 13486                           
 13487                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x00;
 13488     1519  0032               	movlb	18	; select bank18
 13489     151A  0199               	clrf	25	;volatile
 13490                           
 13491                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 13492     151B  019B               	clrf	27	;volatile
 13493                           
 13494                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 13495     151C  019D               	clrf	29	;volatile
 13496     151D                     l4165:
 13497                           
 13498                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 13499     151D  3006               	movlw	6
 13500     151E  009F               	movwf	31	;volatile
 13501     151F                     l4167:
 13502                           
 13503                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 13504     151F  019E               	clrf	30	;volatile
 13505     1520                     l248:	
 13506                           ;mcc_generated_files/mcc.c: 80:     {;mcc_generated_files/mcc.c: 81:     }
 13507                           
 13508                           
 13509                           ;mcc_generated_files/mcc.c: 79:     while(PLLR == 0)
 13510     1520  1C1C               	btfss	28,0	;volatile
 13511     1521  2D23               	goto	u3781
 13512     1522  2D24               	goto	u3780
 13513     1523                     u3781:
 13514     1523  2D20               	goto	l248
 13515     1524                     u3780:
 13516     1524                     l251:
 13517     1524  0008               	return
 13518     1525                     __end_of_OSCILLATOR_Initialize:
 13519                           
 13520                           	psect	text54
 13521     0824                     __ptext54:	
 13522 ;; *************** function _EUSART_Initialize *****************
 13523 ;; Defined at:
 13524 ;;		line 88 in file "mcc_generated_files/eusart.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;		None
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;		None
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      void 
 13531 ;; Registers used:
 13532 ;;		wreg, status,2, status,0, pclath, cstack
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;Total ram usage:        0 bytes
 13543 ;; Hardware stack levels used: 1
 13544 ;; Hardware stack levels required when called: 5
 13545 ;; This function calls:
 13546 ;;		_EUSART_SetErrorHandler
 13547 ;;		_EUSART_SetFramingErrorHandler
 13548 ;;		_EUSART_SetOverrunErrorHandler
 13549 ;;		_EUSART_SetRxInterruptHandler
 13550 ;;		_EUSART_SetTxInterruptHandler
 13551 ;; This function is called by:
 13552 ;;		_SYSTEM_Initialize
 13553 ;; This function uses a non-reentrant model
 13554 ;;
 13555                           
 13556     0824                     _EUSART_Initialize:	
 13557                           ;psect for function _EUSART_Initialize
 13558                           
 13559     0824                     l4189:	
 13560                           ;incstack = 0
 13561                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13562                           
 13563                           
 13564                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
 13565     0824  0021               	movlb	1	; select bank1
 13566     0825  1291               	bcf	17,5	;volatile
 13567     0826                     l4191:
 13568                           
 13569                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 13570     0826  308E               	movlw	low _EUSART_Receive_ISR
 13571     0827  00F4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 13572     0828  3017               	movlw	high _EUSART_Receive_ISR
 13573     0829  00F5               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 13574     082A  3194  2494  3188   	fcall	_EUSART_SetRxInterruptHandler
 13575     082D                     l4193:
 13576                           
 13577                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
 13578     082D  0021               	movlb	1	; select bank1
 13579     082E  1211               	bcf	17,4	;volatile
 13580                           
 13581                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 13582     082F  30F9               	movlw	low _EUSART_Transmit_ISR
 13583     0830  00F4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 13584     0831  3016               	movlw	high _EUSART_Transmit_ISR
 13585     0832  00F5               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 13586     0833  3194  249A  3188   	fcall	_EUSART_SetTxInterruptHandler
 13587     0836                     l4195:
 13588                           
 13589                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 13590     0836  3008               	movlw	8
 13591     0837  0023               	movlb	3	; select bank3
 13592     0838  009F               	movwf	31	;volatile
 13593     0839                     l4197:
 13594                           
 13595                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 13596     0839  3090               	movlw	144
 13597     083A  009D               	movwf	29	;volatile
 13598     083B                     l4199:
 13599                           
 13600                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 13601     083B  3024               	movlw	36
 13602     083C  009E               	movwf	30	;volatile
 13603     083D                     l4201:
 13604                           
 13605                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x40;
 13606     083D  3040               	movlw	64
 13607     083E  009B               	movwf	27	;volatile
 13608     083F                     l4203:
 13609                           
 13610                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x03;
 13611     083F  3003               	movlw	3
 13612     0840  009C               	movwf	28	;volatile
 13613     0841                     l4205:
 13614                           
 13615                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 13616     0841  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
 13617     0842  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 13618     0843  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
 13619     0844  00F5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 13620     0845  3194  2488  3188   	fcall	_EUSART_SetFramingErrorHandler
 13621     0848                     l4207:
 13622                           
 13623                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 13624     0848  305E               	movlw	low _EUSART_DefaultOverrunErrorHandler
 13625     0849  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 13626     084A  3014               	movlw	high _EUSART_DefaultOverrunErrorHandler
 13627     084B  00F5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 13628     084C  3194  248E  3188   	fcall	_EUSART_SetOverrunErrorHandler
 13629     084F                     l4209:
 13630                           
 13631                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 13632     084F  305A               	movlw	low _EUSART_DefaultErrorHandler
 13633     0850  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler
 13634     0851  3014               	movlw	high _EUSART_DefaultErrorHandler
 13635     0852  00F5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 13636     0853  3194  2482  3188   	fcall	_EUSART_SetErrorHandler
 13637     0856                     l4211:
 13638                           
 13639                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 13640     0856  0021               	movlb	1	; select bank1
 13641     0857  01CE               	clrf	_eusartRxLastError^(0+128)	;volatile
 13642     0858                     l4213:
 13643                           
 13644                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 13645     0858  01F9               	clrf	_eusartTxHead	;volatile
 13646     0859                     l4215:
 13647                           
 13648                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 13649     0859  01D1               	clrf	_eusartTxTail^(0+128)	;volatile
 13650     085A                     l4217:
 13651                           
 13652                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 13653     085A  3008               	movlw	8
 13654     085B  00D0               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 13655                           
 13656                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 13657     085C  01F8               	clrf	_eusartRxHead	;volatile
 13658                           
 13659                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 13660     085D  01F7               	clrf	_eusartRxTail	;volatile
 13661                           
 13662                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 13663     085E  01CF               	clrf	_eusartRxCount^(0+128)	;volatile
 13664     085F                     l4219:
 13665                           
 13666                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
 13667     085F  1691               	bsf	17,5	;volatile
 13668     0860                     l332:
 13669     0860  0008               	return
 13670     0861                     __end_of_EUSART_Initialize:
 13671                           
 13672                           	psect	text55
 13673     149A                     __ptext55:	
 13674 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 13675 ;; Defined at:
 13676 ;;		line 281 in file "mcc_generated_files/eusart.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 13679 ;;		 -> EUSART_Transmit_ISR(1), 
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;		None
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  1    wreg      void 
 13684 ;; Registers used:
 13685 ;;		wreg
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;Total ram usage:        2 bytes
 13696 ;; Hardware stack levels used: 1
 13697 ;; Hardware stack levels required when called: 4
 13698 ;; This function calls:
 13699 ;;		Nothing
 13700 ;; This function is called by:
 13701 ;;		_EUSART_Initialize
 13702 ;; This function uses a non-reentrant model
 13703 ;;
 13704                           
 13705     149A                     _EUSART_SetTxInterruptHandler:	
 13706                           ;psect for function _EUSART_SetTxInterruptHandler
 13707                           
 13708     149A                     l3593:	
 13709                           ;incstack = 0
 13710                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 13711                           
 13712                           
 13713                           ;mcc_generated_files/eusart.c: 282:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 13714     149A  0875               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 13715     149B  0021               	movlb	1	; select bank1
 13716     149C  00C5               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 13717     149D  0874               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 13718     149E  00C4               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 13719     149F                     l401:
 13720     149F  0008               	return
 13721     14A0                     __end_of_EUSART_SetTxInterruptHandler:
 13722                           
 13723                           	psect	text56
 13724     1494                     __ptext56:	
 13725 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 13726 ;; Defined at:
 13727 ;;		line 285 in file "mcc_generated_files/eusart.c"
 13728 ;; Parameters:    Size  Location     Type
 13729 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 13730 ;;		 -> EUSART_Receive_ISR(1), 
 13731 ;; Auto vars:     Size  Location     Type
 13732 ;;		None
 13733 ;; Return value:  Size  Location     Type
 13734 ;;                  1    wreg      void 
 13735 ;; Registers used:
 13736 ;;		wreg
 13737 ;; Tracked objects:
 13738 ;;		On entry : 0/0
 13739 ;;		On exit  : 0/0
 13740 ;;		Unchanged: 0/0
 13741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13746 ;;Total ram usage:        2 bytes
 13747 ;; Hardware stack levels used: 1
 13748 ;; Hardware stack levels required when called: 4
 13749 ;; This function calls:
 13750 ;;		Nothing
 13751 ;; This function is called by:
 13752 ;;		_EUSART_Initialize
 13753 ;; This function uses a non-reentrant model
 13754 ;;
 13755                           
 13756     1494                     _EUSART_SetRxInterruptHandler:	
 13757                           ;psect for function _EUSART_SetRxInterruptHandler
 13758                           
 13759     1494                     l3591:	
 13760                           ;incstack = 0
 13761                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 13762                           
 13763                           
 13764                           ;mcc_generated_files/eusart.c: 286:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 13765     1494  0875               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 13766     1495  0021               	movlb	1	; select bank1
 13767     1496  00C3               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 13768     1497  0874               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 13769     1498  00C2               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 13770     1499                     l404:
 13771     1499  0008               	return
 13772     149A                     __end_of_EUSART_SetRxInterruptHandler:
 13773                           
 13774                           	psect	text57
 13775     148E                     __ptext57:	
 13776 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 13777 ;; Defined at:
 13778 ;;		line 273 in file "mcc_generated_files/eusart.c"
 13779 ;; Parameters:    Size  Location     Type
 13780 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 13781 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;		None
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  1    wreg      void 
 13786 ;; Registers used:
 13787 ;;		wreg
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13797 ;;Total ram usage:        2 bytes
 13798 ;; Hardware stack levels used: 1
 13799 ;; Hardware stack levels required when called: 4
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_EUSART_Initialize
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807     148E                     _EUSART_SetOverrunErrorHandler:	
 13808                           ;psect for function _EUSART_SetOverrunErrorHandler
 13809                           
 13810     148E                     l3597:	
 13811                           ;incstack = 0
 13812                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 13813                           
 13814                           
 13815                           ;mcc_generated_files/eusart.c: 274:     EUSART_OverrunErrorHandler = interruptHandler;
 13816     148E  0875               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 13817     148F  0021               	movlb	1	; select bank1
 13818     1490  00BF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 13819     1491  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 13820     1492  00BE               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 13821     1493                     l395:
 13822     1493  0008               	return
 13823     1494                     __end_of_EUSART_SetOverrunErrorHandler:
 13824                           
 13825                           	psect	text58
 13826     1488                     __ptext58:	
 13827 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 13828 ;; Defined at:
 13829 ;;		line 269 in file "mcc_generated_files/eusart.c"
 13830 ;; Parameters:    Size  Location     Type
 13831 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 13832 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;		None
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13848 ;;Total ram usage:        2 bytes
 13849 ;; Hardware stack levels used: 1
 13850 ;; Hardware stack levels required when called: 4
 13851 ;; This function calls:
 13852 ;;		Nothing
 13853 ;; This function is called by:
 13854 ;;		_EUSART_Initialize
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858     1488                     _EUSART_SetFramingErrorHandler:	
 13859                           ;psect for function _EUSART_SetFramingErrorHandler
 13860                           
 13861     1488                     l3595:	
 13862                           ;incstack = 0
 13863                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 13864                           
 13865                           
 13866                           ;mcc_generated_files/eusart.c: 270:     EUSART_FramingErrorHandler = interruptHandler;
 13867     1488  0875               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 13868     1489  0021               	movlb	1	; select bank1
 13869     148A  00C1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 13870     148B  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 13871     148C  00C0               	movwf	_EUSART_FramingErrorHandler^(0+128)
 13872     148D                     l392:
 13873     148D  0008               	return
 13874     148E                     __end_of_EUSART_SetFramingErrorHandler:
 13875                           
 13876                           	psect	text59
 13877     1482                     __ptext59:	
 13878 ;; *************** function _EUSART_SetErrorHandler *****************
 13879 ;; Defined at:
 13880 ;;		line 277 in file "mcc_generated_files/eusart.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 13883 ;;		 -> EUSART_DefaultErrorHandler(1), 
 13884 ;; Auto vars:     Size  Location     Type
 13885 ;;		None
 13886 ;; Return value:  Size  Location     Type
 13887 ;;                  1    wreg      void 
 13888 ;; Registers used:
 13889 ;;		wreg
 13890 ;; Tracked objects:
 13891 ;;		On entry : 0/0
 13892 ;;		On exit  : 0/0
 13893 ;;		Unchanged: 0/0
 13894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13899 ;;Total ram usage:        2 bytes
 13900 ;; Hardware stack levels used: 1
 13901 ;; Hardware stack levels required when called: 4
 13902 ;; This function calls:
 13903 ;;		Nothing
 13904 ;; This function is called by:
 13905 ;;		_EUSART_Initialize
 13906 ;; This function uses a non-reentrant model
 13907 ;;
 13908                           
 13909     1482                     _EUSART_SetErrorHandler:	
 13910                           ;psect for function _EUSART_SetErrorHandler
 13911                           
 13912     1482                     l3599:	
 13913                           ;incstack = 0
 13914                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 13915                           
 13916                           
 13917                           ;mcc_generated_files/eusart.c: 278:     EUSART_ErrorHandler = interruptHandler;
 13918     1482  0875               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 13919     1483  0021               	movlb	1	; select bank1
 13920     1484  00BD               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 13921     1485  0874               	movf	EUSART_SetErrorHandler@interruptHandler,w
 13922     1486  00BC               	movwf	_EUSART_ErrorHandler^(0+128)
 13923     1487                     l398:
 13924     1487  0008               	return
 13925     1488                     __end_of_EUSART_SetErrorHandler:
 13926                           
 13927                           	psect	text60
 13928     15CD                     __ptext60:	
 13929 ;; *************** function _ADC_Initialize *****************
 13930 ;; Defined at:
 13931 ;;		line 67 in file "mcc_generated_files/adc.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;		None
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;		None
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg, status,2, status,0, pclath, cstack
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;Total ram usage:        0 bytes
 13950 ;; Hardware stack levels used: 1
 13951 ;; Hardware stack levels required when called: 5
 13952 ;; This function calls:
 13953 ;;		_ADC_SetInterruptHandler
 13954 ;; This function is called by:
 13955 ;;		_SYSTEM_Initialize
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959     15CD                     _ADC_Initialize:	
 13960                           ;psect for function _ADC_Initialize
 13961                           
 13962     15CD                     l4171:	
 13963                           ;incstack = 0
 13964                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13965                           
 13966                           
 13967                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
 13968     15CD  30A0               	movlw	160
 13969     15CE  0021               	movlb	1	; select bank1
 13970     15CF  009E               	movwf	30	;volatile
 13971                           
 13972                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x05;
 13973     15D0  3005               	movlw	5
 13974     15D1  009F               	movwf	31	;volatile
 13975     15D2                     l4173:
 13976                           
 13977                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 13978     15D2  019B               	clrf	27	;volatile
 13979     15D3                     l4175:
 13980                           
 13981                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 13982     15D3  019C               	clrf	28	;volatile
 13983                           
 13984                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
 13985     15D4  3001               	movlw	1
 13986     15D5  009D               	movwf	29	;volatile
 13987     15D6                     l4177:
 13988                           
 13989                           ;mcc_generated_files/adc.c: 87:     PIE1bits.ADIE = 1;
 13990     15D6  1711               	bsf	17,6	;volatile
 13991     15D7                     l4179:
 13992                           
 13993                           ;mcc_generated_files/adc.c: 90:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 13994     15D7  3053               	movlw	low _ADC_DefaultInterruptHandler
 13995     15D8  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
 13996     15D9  3014               	movlw	high _ADC_DefaultInterruptHandler
 13997     15DA  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 13998     15DB  3194  247C  3195   	fcall	_ADC_SetInterruptHandler
 13999     15DE                     l456:
 14000     15DE  0008               	return
 14001     15DF                     __end_of_ADC_Initialize:
 14002                           
 14003                           	psect	text61
 14004     147C                     __ptext61:	
 14005 ;; *************** function _ADC_SetInterruptHandler *****************
 14006 ;; Defined at:
 14007 ;;		line 159 in file "mcc_generated_files/adc.c"
 14008 ;; Parameters:    Size  Location     Type
 14009 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 14010 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 14011 ;; Auto vars:     Size  Location     Type
 14012 ;;		None
 14013 ;; Return value:  Size  Location     Type
 14014 ;;                  1    wreg      void 
 14015 ;; Registers used:
 14016 ;;		wreg
 14017 ;; Tracked objects:
 14018 ;;		On entry : 0/0
 14019 ;;		On exit  : 0/0
 14020 ;;		Unchanged: 0/0
 14021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;Total ram usage:        2 bytes
 14027 ;; Hardware stack levels used: 1
 14028 ;; Hardware stack levels required when called: 4
 14029 ;; This function calls:
 14030 ;;		Nothing
 14031 ;; This function is called by:
 14032 ;;		_ADC_Initialize
 14033 ;;		_initAdcMultiplexer
 14034 ;; This function uses a non-reentrant model
 14035 ;;
 14036                           
 14037     147C                     _ADC_SetInterruptHandler:	
 14038                           ;psect for function _ADC_SetInterruptHandler
 14039                           
 14040     147C                     l3637:	
 14041                           ;incstack = 0
 14042                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 14043                           
 14044                           
 14045                           ;mcc_generated_files/adc.c: 160:     ADC_InterruptHandler = InterruptHandler;
 14046     147C  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
 14047     147D  0021               	movlb	1	; select bank1
 14048     147E  00BB               	movwf	(_ADC_InterruptHandler+1)^(0+128)
 14049     147F  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
 14050     1480  00BA               	movwf	_ADC_InterruptHandler^(0+128)
 14051     1481                     l484:
 14052     1481  0008               	return
 14053     1482                     __end_of_ADC_SetInterruptHandler:
 14054                           
 14055                           	psect	text62
 14056     0E20                     __ptext62:	
 14057 ;; *************** function _PI *****************
 14058 ;; Defined at:
 14059 ;;		line 52 in file "PI.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;		None
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;		None
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      void 
 14066 ;; Registers used:
 14067 ;;		wreg, status,2, status,0, pclath, cstack
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;Total ram usage:        1 bytes
 14078 ;; Hardware stack levels used: 1
 14079 ;; Hardware stack levels required when called: 6
 14080 ;; This function calls:
 14081 ;;		_PWM5_LoadDutyValue
 14082 ;;		___fladd
 14083 ;;		___flmul
 14084 ;;		___fltol
 14085 ;;		___xxtofl
 14086 ;;		_getHoogteSensor
 14087 ;;		_getPotentiometer
 14088 ;; This function is called by:
 14089 ;;		_main
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093     0E20                     _PI:	
 14094                           ;psect for function _PI
 14095                           
 14096     0E20                     l5815:	
 14097                           ;incstack = 0
 14098                           ; Regs used in _PI: [wreg+status,2+status,0+pclath+cstack]
 14099                           
 14100                           
 14101                           ;PI.c: 53:     sensorHeight = (uint8_t) getHoogteSensor();
 14102     0E20  3195  2503  318E   	fcall	_getHoogteSensor
 14103     0E23  0021               	movlb	1	; select bank1
 14104     0E24  00CD               	movwf	_sensorHeight^(0+128)
 14105                           
 14106                           ;PI.c: 54:     setpoint = getPotentiometer();
 14107     0E25  3195  250E  318E   	fcall	_getPotentiometer
 14108     0E28  0021               	movlb	1	; select bank1
 14109     0E29  00EF               	movwf	_setpoint^(0+128)
 14110     0E2A                     l5817:
 14111                           
 14112                           ;PI.c: 55:     error = setpoint - sensorHeight;
 14113     0E2A  084D               	movf	_sensorHeight^(0+128),w
 14114     0E2B  026F               	subwf	_setpoint^(0+128),w
 14115     0E2C  00B8               	movwf	_error^(0+128)
 14116     0E2D  01B9               	clrf	(_error^(0+128)+1)
 14117     0E2E  1C03               	skipc
 14118     0E2F  03B9               	decf	(_error+1)^(0+128),f
 14119     0E30                     l5819:
 14120                           
 14121                           ;PI.c: 57:     integral += error;
 14122     0E30  0838               	movf	_error^(0+128),w
 14123     0E31  0020               	movlb	0	; select bank0
 14124     0E32  00A0               	movwf	___xxtofl@val
 14125     0E33  0021               	movlb	1	; select bank1
 14126     0E34  0839               	movf	(_error+1)^(0+128),w
 14127     0E35  0020               	movlb	0	; select bank0
 14128     0E36  00A1               	movwf	___xxtofl@val+1
 14129     0E37  0D89               	rlf	9,f
 14130     0E38  3B89               	subwfb	9,f
 14131     0E39  0989               	comf	9,f
 14132     0E3A  00A2               	movwf	___xxtofl@val+2
 14133     0E3B  00A3               	movwf	___xxtofl@val+3
 14134     0E3C  3001               	movlw	1
 14135     0E3D  318B  23EE  318E   	fcall	___xxtofl
 14136     0E40  0020               	movlb	0	; select bank0
 14137     0E41  0823               	movf	?___xxtofl+3,w
 14138     0E42  00B1               	movwf	___fladd@b+3
 14139     0E43  0822               	movf	?___xxtofl+2,w
 14140     0E44  00B0               	movwf	___fladd@b+2
 14141     0E45  0821               	movf	?___xxtofl+1,w
 14142     0E46  00AF               	movwf	___fladd@b+1
 14143     0E47  0820               	movf	?___xxtofl,w
 14144     0E48  00AE               	movwf	___fladd@b
 14145     0E49  0021               	movlb	1	; select bank1
 14146     0E4A  082B               	movf	(_integral+3)^(0+128),w
 14147     0E4B  0020               	movlb	0	; select bank0
 14148     0E4C  00B5               	movwf	___fladd@a+3
 14149     0E4D  0021               	movlb	1	; select bank1
 14150     0E4E  082A               	movf	(_integral+2)^(0+128),w
 14151     0E4F  0020               	movlb	0	; select bank0
 14152     0E50  00B4               	movwf	___fladd@a+2
 14153     0E51  0021               	movlb	1	; select bank1
 14154     0E52  0829               	movf	(_integral+1)^(0+128),w
 14155     0E53  0020               	movlb	0	; select bank0
 14156     0E54  00B3               	movwf	___fladd@a+1
 14157     0E55  0021               	movlb	1	; select bank1
 14158     0E56  0828               	movf	_integral^(0+128),w
 14159     0E57  0020               	movlb	0	; select bank0
 14160     0E58  00B2               	movwf	___fladd@a
 14161     0E59  3182  22B1  318E   	fcall	___fladd
 14162     0E5C  0020               	movlb	0	; select bank0
 14163     0E5D  0831               	movf	?___fladd+3,w
 14164     0E5E  0021               	movlb	1	; select bank1
 14165     0E5F  00AB               	movwf	(_integral+3)^(0+128)
 14166     0E60  0020               	movlb	0	; select bank0
 14167     0E61  0830               	movf	?___fladd+2,w
 14168     0E62  0021               	movlb	1	; select bank1
 14169     0E63  00AA               	movwf	(_integral+2)^(0+128)
 14170     0E64  0020               	movlb	0	; select bank0
 14171     0E65  082F               	movf	?___fladd+1,w
 14172     0E66  0021               	movlb	1	; select bank1
 14173     0E67  00A9               	movwf	(_integral+1)^(0+128)
 14174     0E68  0020               	movlb	0	; select bank0
 14175     0E69  082E               	movf	?___fladd,w
 14176     0E6A  0021               	movlb	1	; select bank1
 14177     0E6B  00A8               	movwf	_integral^(0+128)
 14178     0E6C                     l5821:
 14179                           
 14180                           ;PI.c: 58:     dutycycle = kp*error + ki*integral;
 14181     0E6C  0838               	movf	_error^(0+128),w
 14182     0E6D  0020               	movlb	0	; select bank0
 14183     0E6E  00A0               	movwf	___xxtofl@val
 14184     0E6F  0021               	movlb	1	; select bank1
 14185     0E70  0839               	movf	(_error+1)^(0+128),w
 14186     0E71  0020               	movlb	0	; select bank0
 14187     0E72  00A1               	movwf	___xxtofl@val+1
 14188     0E73  0D89               	rlf	9,f
 14189     0E74  3B89               	subwfb	9,f
 14190     0E75  0989               	comf	9,f
 14191     0E76  00A2               	movwf	___xxtofl@val+2
 14192     0E77  00A3               	movwf	___xxtofl@val+3
 14193     0E78  3001               	movlw	1
 14194     0E79  318B  23EE  318E   	fcall	___xxtofl
 14195     0E7C  0020               	movlb	0	; select bank0
 14196     0E7D  0823               	movf	?___xxtofl+3,w
 14197     0E7E  00D1               	movwf	___flmul@a+3
 14198     0E7F  0822               	movf	?___xxtofl+2,w
 14199     0E80  00D0               	movwf	___flmul@a+2
 14200     0E81  0821               	movf	?___xxtofl+1,w
 14201     0E82  00CF               	movwf	___flmul@a+1
 14202     0E83  0820               	movf	?___xxtofl,w
 14203     0E84  00CE               	movwf	___flmul@a
 14204     0E85  0021               	movlb	1	; select bank1
 14205     0E86  0867               	movf	(_kp+3)^(0+128),w
 14206     0E87  0020               	movlb	0	; select bank0
 14207     0E88  00CD               	movwf	___flmul@b+3
 14208     0E89  0021               	movlb	1	; select bank1
 14209     0E8A  0866               	movf	(_kp+2)^(0+128),w
 14210     0E8B  0020               	movlb	0	; select bank0
 14211     0E8C  00CC               	movwf	___flmul@b+2
 14212     0E8D  0021               	movlb	1	; select bank1
 14213     0E8E  0865               	movf	(_kp+1)^(0+128),w
 14214     0E8F  0020               	movlb	0	; select bank0
 14215     0E90  00CB               	movwf	___flmul@b+1
 14216     0E91  0021               	movlb	1	; select bank1
 14217     0E92  0864               	movf	_kp^(0+128),w
 14218     0E93  0020               	movlb	0	; select bank0
 14219     0E94  00CA               	movwf	___flmul@b
 14220     0E95  3180  2076  318E   	fcall	___flmul
 14221     0E98  0020               	movlb	0	; select bank0
 14222     0E99  084D               	movf	?___flmul+3,w
 14223     0E9A  00B5               	movwf	___fladd@a+3
 14224     0E9B  084C               	movf	?___flmul+2,w
 14225     0E9C  00B4               	movwf	___fladd@a+2
 14226     0E9D  084B               	movf	?___flmul+1,w
 14227     0E9E  00B3               	movwf	___fladd@a+1
 14228     0E9F  084A               	movf	?___flmul,w
 14229     0EA0  00B2               	movwf	___fladd@a
 14230     0EA1  0021               	movlb	1	; select bank1
 14231     0EA2  086B               	movf	(_ki+3)^(0+128),w
 14232     0EA3  0020               	movlb	0	; select bank0
 14233     0EA4  00D1               	movwf	___flmul@a+3
 14234     0EA5  0021               	movlb	1	; select bank1
 14235     0EA6  086A               	movf	(_ki+2)^(0+128),w
 14236     0EA7  0020               	movlb	0	; select bank0
 14237     0EA8  00D0               	movwf	___flmul@a+2
 14238     0EA9  0021               	movlb	1	; select bank1
 14239     0EAA  0869               	movf	(_ki+1)^(0+128),w
 14240     0EAB  0020               	movlb	0	; select bank0
 14241     0EAC  00CF               	movwf	___flmul@a+1
 14242     0EAD  0021               	movlb	1	; select bank1
 14243     0EAE  0868               	movf	_ki^(0+128),w
 14244     0EAF  0020               	movlb	0	; select bank0
 14245     0EB0  00CE               	movwf	___flmul@a
 14246     0EB1  0021               	movlb	1	; select bank1
 14247     0EB2  082B               	movf	(_integral+3)^(0+128),w
 14248     0EB3  0020               	movlb	0	; select bank0
 14249     0EB4  00CD               	movwf	___flmul@b+3
 14250     0EB5  0021               	movlb	1	; select bank1
 14251     0EB6  082A               	movf	(_integral+2)^(0+128),w
 14252     0EB7  0020               	movlb	0	; select bank0
 14253     0EB8  00CC               	movwf	___flmul@b+2
 14254     0EB9  0021               	movlb	1	; select bank1
 14255     0EBA  0829               	movf	(_integral+1)^(0+128),w
 14256     0EBB  0020               	movlb	0	; select bank0
 14257     0EBC  00CB               	movwf	___flmul@b+1
 14258     0EBD  0021               	movlb	1	; select bank1
 14259     0EBE  0828               	movf	_integral^(0+128),w
 14260     0EBF  0020               	movlb	0	; select bank0
 14261     0EC0  00CA               	movwf	___flmul@b
 14262     0EC1  3180  2076  318E   	fcall	___flmul
 14263     0EC4  0020               	movlb	0	; select bank0
 14264     0EC5  084D               	movf	?___flmul+3,w
 14265     0EC6  00B1               	movwf	___fladd@b+3
 14266     0EC7  084C               	movf	?___flmul+2,w
 14267     0EC8  00B0               	movwf	___fladd@b+2
 14268     0EC9  084B               	movf	?___flmul+1,w
 14269     0ECA  00AF               	movwf	___fladd@b+1
 14270     0ECB  084A               	movf	?___flmul,w
 14271     0ECC  00AE               	movwf	___fladd@b
 14272     0ECD  3182  22B1  318E   	fcall	___fladd
 14273     0ED0  0020               	movlb	0	; select bank0
 14274     0ED1  0831               	movf	?___fladd+3,w
 14275     0ED2  00E7               	movwf	___fltol@f1+3
 14276     0ED3  0830               	movf	?___fladd+2,w
 14277     0ED4  00E6               	movwf	___fltol@f1+2
 14278     0ED5  082F               	movf	?___fladd+1,w
 14279     0ED6  00E5               	movwf	___fltol@f1+1
 14280     0ED7  082E               	movf	?___fladd,w
 14281     0ED8  00E4               	movwf	___fltol@f1
 14282     0ED9  3187  2764  318E   	fcall	___fltol
 14283     0EDC  0020               	movlb	0	; select bank0
 14284     0EDD  0865               	movf	?___fltol+1,w
 14285     0EDE  0021               	movlb	1	; select bank1
 14286     0EDF  00B5               	movwf	(_dutycycle+1)^(0+128)
 14287     0EE0  0020               	movlb	0	; select bank0
 14288     0EE1  0864               	movf	?___fltol,w
 14289     0EE2  0021               	movlb	1	; select bank1
 14290     0EE3  00B4               	movwf	_dutycycle^(0+128)
 14291     0EE4                     l5823:
 14292                           
 14293                           ;PI.c: 60:     if (dutycycle > 1023) {
 14294     0EE4  0835               	movf	(_dutycycle+1)^(0+128),w
 14295     0EE5  3A80               	xorlw	128
 14296     0EE6  0020               	movlb	0	; select bank0
 14297     0EE7  00EE               	movwf	??_PI
 14298     0EE8  3084               	movlw	132
 14299     0EE9  026E               	subwf	??_PI,w
 14300     0EEA  1D03               	skipz
 14301     0EEB  2EEF               	goto	u6025
 14302     0EEC  3000               	movlw	0
 14303     0EED  0021               	movlb	1	; select bank1
 14304     0EEE  0234               	subwf	_dutycycle^(0+128),w
 14305     0EEF                     u6025:
 14306     0EEF  1C03               	skipc
 14307     0EF0  2EF2               	goto	u6021
 14308     0EF1  2EF3               	goto	u6020
 14309     0EF2                     u6021:
 14310     0EF2  2EF9               	goto	l637
 14311     0EF3                     u6020:
 14312     0EF3                     l5825:
 14313                           
 14314                           ;PI.c: 61:         dutycycle = 1023;
 14315     0EF3  30FF               	movlw	255
 14316     0EF4  0021               	movlb	1	; select bank1
 14317     0EF5  00B4               	movwf	_dutycycle^(0+128)
 14318     0EF6  3003               	movlw	3
 14319     0EF7  00B5               	movwf	(_dutycycle^(0+128)+1)
 14320                           
 14321                           ;PI.c: 62:     }
 14322     0EF8  2F00               	goto	l5829
 14323     0EF9                     l637:	
 14324                           ;PI.c: 63:     else if (dutycycle < 0){
 14325                           
 14326     0EF9  0021               	movlb	1	; select bank1
 14327     0EFA  1FB5               	btfss	(_dutycycle+1)^(0+128),7
 14328     0EFB  2EFD               	goto	u6031
 14329     0EFC  2EFE               	goto	u6030
 14330     0EFD                     u6031:
 14331     0EFD  2F00               	goto	l5829
 14332     0EFE                     u6030:
 14333     0EFE                     l5827:
 14334                           
 14335                           ;PI.c: 64:         dutycycle = 0;
 14336     0EFE  01B4               	clrf	_dutycycle^(0+128)
 14337     0EFF  01B5               	clrf	(_dutycycle+1)^(0+128)
 14338     0F00                     l5829:
 14339                           
 14340                           ;PI.c: 74:     PWM5_LoadDutyValue((uint16_t) dutycycle);
 14341     0F00  0835               	movf	(_dutycycle+1)^(0+128),w
 14342     0F01  00F5               	movwf	PWM5_LoadDutyValue@dutyValue+1
 14343     0F02  0834               	movf	_dutycycle^(0+128),w
 14344     0F03  00F4               	movwf	PWM5_LoadDutyValue@dutyValue
 14345     0F04  3196  2639  318E   	fcall	_PWM5_LoadDutyValue
 14346     0F07                     l640:
 14347     0F07  0008               	return
 14348     0F08                     __end_of_PI:
 14349                           
 14350                           	psect	text63
 14351     150E                     __ptext63:	
 14352 ;; *************** function _getPotentiometer *****************
 14353 ;; Defined at:
 14354 ;;		line 52 in file "adcMultiplexer.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;		None
 14357 ;; Auto vars:     Size  Location     Type
 14358 ;;		None
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  1    wreg      unsigned char 
 14361 ;; Registers used:
 14362 ;;		wreg, status,2, status,0
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14372 ;;Total ram usage:        2 bytes
 14373 ;; Hardware stack levels used: 1
 14374 ;; Hardware stack levels required when called: 4
 14375 ;; This function calls:
 14376 ;;		Nothing
 14377 ;; This function is called by:
 14378 ;;		_PI
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382     150E                     _getPotentiometer:	
 14383                           ;psect for function _getPotentiometer
 14384                           
 14385     150E                     l4259:	
 14386                           ;incstack = 0
 14387                           ; Regs used in _getPotentiometer: [wreg+status,2+status,0]
 14388                           
 14389                           
 14390                           ;adcMultiplexer.c: 53:     return potentiometer >> 2;
 14391     150E  0021               	movlb	1	; select bank1
 14392     150F  0831               	movf	(_potentiometer+1)^(0+128),w	;volatile
 14393     1510  00F5               	movwf	??_getPotentiometer+1
 14394     1511  0830               	movf	_potentiometer^(0+128),w	;volatile
 14395     1512  00F4               	movwf	??_getPotentiometer
 14396     1513  36F5               	lsrf	??_getPotentiometer+1,f
 14397     1514  0CF4               	rrf	??_getPotentiometer,f
 14398     1515  36F5               	lsrf	??_getPotentiometer+1,f
 14399     1516  0CF4               	rrf	??_getPotentiometer,f
 14400     1517  0874               	movf	??_getPotentiometer,w
 14401     1518                     l879:
 14402     1518  0008               	return
 14403     1519                     __end_of_getPotentiometer:
 14404                           
 14405                           	psect	text64
 14406     1503                     __ptext64:	
 14407 ;; *************** function _getHoogteSensor *****************
 14408 ;; Defined at:
 14409 ;;		line 45 in file "adcMultiplexer.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      unsigned char 
 14416 ;; Registers used:
 14417 ;;		wreg, status,2, status,0
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14427 ;;Total ram usage:        2 bytes
 14428 ;; Hardware stack levels used: 1
 14429 ;; Hardware stack levels required when called: 4
 14430 ;; This function calls:
 14431 ;;		Nothing
 14432 ;; This function is called by:
 14433 ;;		_PI
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437     1503                     _getHoogteSensor:	
 14438                           ;psect for function _getHoogteSensor
 14439                           
 14440     1503                     l4255:	
 14441                           ;incstack = 0
 14442                           ; Regs used in _getHoogteSensor: [wreg+status,2+status,0]
 14443                           
 14444                           
 14445                           ;adcMultiplexer.c: 49:     return hoogteSensor >> 2;
 14446     1503  0021               	movlb	1	; select bank1
 14447     1504  0833               	movf	(_hoogteSensor+1)^(0+128),w	;volatile
 14448     1505  00F5               	movwf	??_getHoogteSensor+1
 14449     1506  0832               	movf	_hoogteSensor^(0+128),w	;volatile
 14450     1507  00F4               	movwf	??_getHoogteSensor
 14451     1508  36F5               	lsrf	??_getHoogteSensor+1,f
 14452     1509  0CF4               	rrf	??_getHoogteSensor,f
 14453     150A  36F5               	lsrf	??_getHoogteSensor+1,f
 14454     150B  0CF4               	rrf	??_getHoogteSensor,f
 14455     150C  0874               	movf	??_getHoogteSensor,w
 14456     150D                     l876:
 14457     150D  0008               	return
 14458     150E                     __end_of_getHoogteSensor:
 14459                           
 14460                           	psect	text65
 14461     0BEE                     __ptext65:	
 14462 ;; *************** function ___xxtofl *****************
 14463 ;; Defined at:
 14464 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;  sign            1    wreg     unsigned char 
 14467 ;;  val             4    0[BANK0 ] long 
 14468 ;; Auto vars:     Size  Location     Type
 14469 ;;  sign            1    8[BANK0 ] unsigned char 
 14470 ;;  arg             4   10[BANK0 ] unsigned long 
 14471 ;;  exp             1    9[BANK0 ] unsigned char 
 14472 ;; Return value:  Size  Location     Type
 14473 ;;                  4    0[BANK0 ] unsigned char 
 14474 ;; Registers used:
 14475 ;;		wreg, status,2, status,0
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14482 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14484 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14485 ;;Total ram usage:       14 bytes
 14486 ;; Hardware stack levels used: 1
 14487 ;; Hardware stack levels required when called: 4
 14488 ;; This function calls:
 14489 ;;		Nothing
 14490 ;; This function is called by:
 14491 ;;		_PI
 14492 ;;		_str2float
 14493 ;;		_printFloat
 14494 ;; This function uses a non-reentrant model
 14495 ;;
 14496                           
 14497     0BEE                     ___xxtofl:	
 14498                           ;psect for function ___xxtofl
 14499                           
 14500                           
 14501                           ;incstack = 0
 14502                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14503                           ;___xxtofl@sign stored from wreg
 14504     0BEE  0020               	movlb	0	; select bank0
 14505     0BEF  00A8               	movwf	___xxtofl@sign
 14506     0BF0                     l5601:
 14507     0BF0  0828               	movf	___xxtofl@sign,w
 14508     0BF1  1903               	btfsc	3,2
 14509     0BF2  2BF4               	goto	u5721
 14510     0BF3  2BF5               	goto	u5720
 14511     0BF4                     u5721:
 14512     0BF4  2C09               	goto	l5607
 14513     0BF5                     u5720:
 14514     0BF5                     l5603:
 14515     0BF5  1FA3               	btfss	___xxtofl@val+3,7
 14516     0BF6  2BF8               	goto	u5731
 14517     0BF7  2BF9               	goto	u5730
 14518     0BF8                     u5731:
 14519     0BF8  2C09               	goto	l5607
 14520     0BF9                     u5730:
 14521     0BF9                     l5605:
 14522     0BF9  0920               	comf	___xxtofl@val,w
 14523     0BFA  00AA               	movwf	___xxtofl@arg
 14524     0BFB  0921               	comf	___xxtofl@val+1,w
 14525     0BFC  00AB               	movwf	___xxtofl@arg+1
 14526     0BFD  0922               	comf	___xxtofl@val+2,w
 14527     0BFE  00AC               	movwf	___xxtofl@arg+2
 14528     0BFF  0923               	comf	___xxtofl@val+3,w
 14529     0C00  00AD               	movwf	___xxtofl@arg+3
 14530     0C01  0AAA               	incf	___xxtofl@arg,f
 14531     0C02  1903               	skipnz
 14532     0C03  0AAB               	incf	___xxtofl@arg+1,f
 14533     0C04  1903               	skipnz
 14534     0C05  0AAC               	incf	___xxtofl@arg+2,f
 14535     0C06  1903               	skipnz
 14536     0C07  0AAD               	incf	___xxtofl@arg+3,f
 14537     0C08  2C11               	goto	l1472
 14538     0C09                     l5607:
 14539     0C09  0823               	movf	___xxtofl@val+3,w
 14540     0C0A  00AD               	movwf	___xxtofl@arg+3
 14541     0C0B  0822               	movf	___xxtofl@val+2,w
 14542     0C0C  00AC               	movwf	___xxtofl@arg+2
 14543     0C0D  0821               	movf	___xxtofl@val+1,w
 14544     0C0E  00AB               	movwf	___xxtofl@arg+1
 14545     0C0F  0820               	movf	___xxtofl@val,w
 14546     0C10  00AA               	movwf	___xxtofl@arg
 14547     0C11                     l1472:
 14548     0C11  0823               	movf	___xxtofl@val+3,w
 14549     0C12  0422               	iorwf	___xxtofl@val+2,w
 14550     0C13  0421               	iorwf	___xxtofl@val+1,w
 14551     0C14  0420               	iorwf	___xxtofl@val,w
 14552     0C15  1D03               	skipz
 14553     0C16  2C18               	goto	u5741
 14554     0C17  2C19               	goto	u5740
 14555     0C18                     u5741:
 14556     0C18  2C22               	goto	l5613
 14557     0C19                     u5740:
 14558     0C19                     l5609:
 14559     0C19  3000               	movlw	0
 14560     0C1A  00A3               	movwf	?___xxtofl+3
 14561     0C1B  3000               	movlw	0
 14562     0C1C  00A2               	movwf	?___xxtofl+2
 14563     0C1D  3000               	movlw	0
 14564     0C1E  00A1               	movwf	?___xxtofl+1
 14565     0C1F  3000               	movlw	0
 14566     0C20  00A0               	movwf	?___xxtofl
 14567     0C21  2C98               	goto	l1474
 14568     0C22                     l5613:
 14569     0C22  3096               	movlw	150
 14570     0C23  00A9               	movwf	___xxtofl@exp
 14571     0C24  2C30               	goto	l5617
 14572     0C25                     l5615:
 14573     0C25  3001               	movlw	1
 14574     0C26  00A4               	movwf	??___xxtofl
 14575     0C27  0824               	movf	??___xxtofl,w
 14576     0C28  07A9               	addwf	___xxtofl@exp,f
 14577     0C29  3001               	movlw	1
 14578     0C2A                     u5755:
 14579     0C2A  36AD               	lsrf	___xxtofl@arg+3,f
 14580     0C2B  0CAC               	rrf	___xxtofl@arg+2,f
 14581     0C2C  0CAB               	rrf	___xxtofl@arg+1,f
 14582     0C2D  0CAA               	rrf	___xxtofl@arg,f
 14583     0C2E  0B89               	decfsz	9,f
 14584     0C2F  2C2A               	goto	u5755
 14585     0C30                     l5617:
 14586     0C30  30FE               	movlw	254
 14587     0C31  052D               	andwf	___xxtofl@arg+3,w
 14588     0C32  1D03               	btfss	3,2
 14589     0C33  2C35               	goto	u5761
 14590     0C34  2C36               	goto	u5760
 14591     0C35                     u5761:
 14592     0C35  2C25               	goto	l5615
 14593     0C36                     u5760:
 14594     0C36  2C4A               	goto	l1478
 14595     0C37                     l5619:
 14596     0C37  3001               	movlw	1
 14597     0C38  00A4               	movwf	??___xxtofl
 14598     0C39  0824               	movf	??___xxtofl,w
 14599     0C3A  07A9               	addwf	___xxtofl@exp,f
 14600     0C3B                     l5621:
 14601     0C3B  3001               	movlw	1
 14602     0C3C  07AA               	addwf	___xxtofl@arg,f
 14603     0C3D  3000               	movlw	0
 14604     0C3E  3DAB               	addwfc	___xxtofl@arg+1,f
 14605     0C3F  3000               	movlw	0
 14606     0C40  3DAC               	addwfc	___xxtofl@arg+2,f
 14607     0C41  3000               	movlw	0
 14608     0C42  3DAD               	addwfc	___xxtofl@arg+3,f
 14609     0C43                     l5623:
 14610     0C43  3001               	movlw	1
 14611     0C44                     u5775:
 14612     0C44  36AD               	lsrf	___xxtofl@arg+3,f
 14613     0C45  0CAC               	rrf	___xxtofl@arg+2,f
 14614     0C46  0CAB               	rrf	___xxtofl@arg+1,f
 14615     0C47  0CAA               	rrf	___xxtofl@arg,f
 14616     0C48  0B89               	decfsz	9,f
 14617     0C49  2C44               	goto	u5775
 14618     0C4A                     l1478:
 14619     0C4A  30FF               	movlw	255
 14620     0C4B  052D               	andwf	___xxtofl@arg+3,w
 14621     0C4C  1D03               	btfss	3,2
 14622     0C4D  2C4F               	goto	u5781
 14623     0C4E  2C50               	goto	u5780
 14624     0C4F                     u5781:
 14625     0C4F  2C37               	goto	l5619
 14626     0C50                     u5780:
 14627     0C50  2C5A               	goto	l5627
 14628     0C51                     l5625:
 14629     0C51  3001               	movlw	1
 14630     0C52  02A9               	subwf	___xxtofl@exp,f
 14631     0C53  3001               	movlw	1
 14632     0C54                     u5795:
 14633     0C54  35AA               	lslf	___xxtofl@arg,f
 14634     0C55  0DAB               	rlf	___xxtofl@arg+1,f
 14635     0C56  0DAC               	rlf	___xxtofl@arg+2,f
 14636     0C57  0DAD               	rlf	___xxtofl@arg+3,f
 14637     0C58  0B89               	decfsz	9,f
 14638     0C59  2C54               	goto	u5795
 14639     0C5A                     l5627:
 14640     0C5A  1BAC               	btfsc	___xxtofl@arg+2,7
 14641     0C5B  2C5D               	goto	u5801
 14642     0C5C  2C5E               	goto	u5800
 14643     0C5D                     u5801:
 14644     0C5D  2C64               	goto	l1485
 14645     0C5E                     u5800:
 14646     0C5E                     l5629:
 14647     0C5E  3002               	movlw	2
 14648     0C5F  0229               	subwf	___xxtofl@exp,w
 14649     0C60  1803               	skipnc
 14650     0C61  2C63               	goto	u5811
 14651     0C62  2C64               	goto	u5810
 14652     0C63                     u5811:
 14653     0C63  2C51               	goto	l5625
 14654     0C64                     u5810:
 14655     0C64                     l1485:
 14656     0C64  1829               	btfsc	___xxtofl@exp,0
 14657     0C65  2C67               	goto	u5821
 14658     0C66  2C68               	goto	u5820
 14659     0C67                     u5821:
 14660     0C67  2C70               	goto	l1486
 14661     0C68                     u5820:
 14662     0C68                     l5631:
 14663     0C68  30FF               	movlw	255
 14664     0C69  05AA               	andwf	___xxtofl@arg,f
 14665     0C6A  30FF               	movlw	255
 14666     0C6B  05AB               	andwf	___xxtofl@arg+1,f
 14667     0C6C  307F               	movlw	127
 14668     0C6D  05AC               	andwf	___xxtofl@arg+2,f
 14669     0C6E  30FF               	movlw	255
 14670     0C6F  05AD               	andwf	___xxtofl@arg+3,f
 14671     0C70                     l1486:
 14672     0C70  1003               	clrc
 14673     0C71  0CA9               	rrf	___xxtofl@exp,f
 14674     0C72                     l5633:
 14675     0C72  0829               	movf	___xxtofl@exp,w
 14676     0C73  00A4               	movwf	??___xxtofl
 14677     0C74  01A5               	clrf	??___xxtofl+1
 14678     0C75  01A6               	clrf	??___xxtofl+2
 14679     0C76  01A7               	clrf	??___xxtofl+3
 14680     0C77  3018               	movlw	24
 14681     0C78                     u5835:
 14682     0C78  35A4               	lslf	??___xxtofl,f
 14683     0C79  0DA5               	rlf	??___xxtofl+1,f
 14684     0C7A  0DA6               	rlf	??___xxtofl+2,f
 14685     0C7B  0DA7               	rlf	??___xxtofl+3,f
 14686     0C7C                     u5830:
 14687     0C7C  0B89               	decfsz	9,f
 14688     0C7D  2C78               	goto	u5835
 14689     0C7E  0824               	movf	??___xxtofl,w
 14690     0C7F  04AA               	iorwf	___xxtofl@arg,f
 14691     0C80  0825               	movf	??___xxtofl+1,w
 14692     0C81  04AB               	iorwf	___xxtofl@arg+1,f
 14693     0C82  0826               	movf	??___xxtofl+2,w
 14694     0C83  04AC               	iorwf	___xxtofl@arg+2,f
 14695     0C84  0827               	movf	??___xxtofl+3,w
 14696     0C85  04AD               	iorwf	___xxtofl@arg+3,f
 14697     0C86                     l5635:
 14698     0C86  0828               	movf	___xxtofl@sign,w
 14699     0C87  1903               	btfsc	3,2
 14700     0C88  2C8A               	goto	u5841
 14701     0C89  2C8B               	goto	u5840
 14702     0C8A                     u5841:
 14703     0C8A  2C90               	goto	l5641
 14704     0C8B                     u5840:
 14705     0C8B                     l5637:
 14706     0C8B  1FA3               	btfss	___xxtofl@val+3,7
 14707     0C8C  2C8E               	goto	u5851
 14708     0C8D  2C8F               	goto	u5850
 14709     0C8E                     u5851:
 14710     0C8E  2C90               	goto	l5641
 14711     0C8F                     u5850:
 14712     0C8F                     l5639:
 14713     0C8F  17AD               	bsf	___xxtofl@arg+3,7
 14714     0C90                     l5641:
 14715     0C90  082D               	movf	___xxtofl@arg+3,w
 14716     0C91  00A3               	movwf	?___xxtofl+3
 14717     0C92  082C               	movf	___xxtofl@arg+2,w
 14718     0C93  00A2               	movwf	?___xxtofl+2
 14719     0C94  082B               	movf	___xxtofl@arg+1,w
 14720     0C95  00A1               	movwf	?___xxtofl+1
 14721     0C96  082A               	movf	___xxtofl@arg,w
 14722     0C97  00A0               	movwf	?___xxtofl
 14723     0C98                     l1474:
 14724     0C98  0008               	return
 14725     0C99                     __end_of___xxtofl:
 14726                           
 14727                           	psect	text66
 14728     0764                     __ptext66:	
 14729 ;; *************** function ___fltol *****************
 14730 ;; Defined at:
 14731 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
 14732 ;; Parameters:    Size  Location     Type
 14733 ;;  f1              4   68[BANK0 ] unsigned char 
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;  exp1            1   77[BANK0 ] unsigned char 
 14736 ;;  sign1           1   76[BANK0 ] unsigned char 
 14737 ;; Return value:  Size  Location     Type
 14738 ;;                  4   68[BANK0 ] long 
 14739 ;; Registers used:
 14740 ;;		wreg, status,2, status,0
 14741 ;; Tracked objects:
 14742 ;;		On entry : 0/0
 14743 ;;		On exit  : 0/0
 14744 ;;		Unchanged: 0/0
 14745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14746 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14747 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14748 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14749 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14750 ;;Total ram usage:       10 bytes
 14751 ;; Hardware stack levels used: 1
 14752 ;; Hardware stack levels required when called: 4
 14753 ;; This function calls:
 14754 ;;		Nothing
 14755 ;; This function is called by:
 14756 ;;		_PI
 14757 ;;		_printFloat
 14758 ;; This function uses a non-reentrant model
 14759 ;;
 14760                           
 14761     0764                     ___fltol:	
 14762                           ;psect for function ___fltol
 14763                           
 14764     0764                     l5279:	
 14765                           ;incstack = 0
 14766                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14767                           
 14768     0764  1003               	clrc
 14769     0765  0020               	movlb	0	; select bank0
 14770     0766  0D66               	rlf	___fltol@f1+2,w
 14771     0767  0D67               	rlf	___fltol@f1+3,w
 14772     0768  00ED               	movwf	___fltol@exp1
 14773     0769  086D               	movf	___fltol@exp1,w
 14774     076A  1D03               	btfss	3,2
 14775     076B  2F6D               	goto	u5071
 14776     076C  2F6E               	goto	u5070
 14777     076D                     u5071:
 14778     076D  2F77               	goto	l5285
 14779     076E                     u5070:
 14780     076E                     l5281:
 14781     076E  3000               	movlw	0
 14782     076F  00E7               	movwf	?___fltol+3
 14783     0770  3000               	movlw	0
 14784     0771  00E6               	movwf	?___fltol+2
 14785     0772  3000               	movlw	0
 14786     0773  00E5               	movwf	?___fltol+1
 14787     0774  3000               	movlw	0
 14788     0775  00E4               	movwf	?___fltol
 14789     0776  2FD4               	goto	l1225
 14790     0777                     l5285:
 14791     0777  0864               	movf	___fltol@f1,w
 14792     0778  00E8               	movwf	??___fltol
 14793     0779  0865               	movf	___fltol@f1+1,w
 14794     077A  00E9               	movwf	??___fltol+1
 14795     077B  0866               	movf	___fltol@f1+2,w
 14796     077C  00EA               	movwf	??___fltol+2
 14797     077D  0867               	movf	___fltol@f1+3,w
 14798     077E  00EB               	movwf	??___fltol+3
 14799     077F  301F               	movlw	31
 14800     0780                     u5085:
 14801     0780  36EB               	lsrf	??___fltol+3,f
 14802     0781  0CEA               	rrf	??___fltol+2,f
 14803     0782  0CE9               	rrf	??___fltol+1,f
 14804     0783  0CE8               	rrf	??___fltol,f
 14805     0784                     u5080:
 14806     0784  0B89               	decfsz	9,f
 14807     0785  2F80               	goto	u5085
 14808     0786  0868               	movf	??___fltol,w
 14809     0787  00EC               	movwf	___fltol@sign1
 14810     0788                     l5287:
 14811     0788  17E6               	bsf	___fltol@f1+2,7
 14812     0789                     l5289:
 14813     0789  30FF               	movlw	255
 14814     078A  05E4               	andwf	___fltol@f1,f
 14815     078B  30FF               	movlw	255
 14816     078C  05E5               	andwf	___fltol@f1+1,f
 14817     078D  30FF               	movlw	255
 14818     078E  05E6               	andwf	___fltol@f1+2,f
 14819     078F  3000               	movlw	0
 14820     0790  05E7               	andwf	___fltol@f1+3,f
 14821     0791                     l5291:
 14822     0791  3096               	movlw	150
 14823     0792  02ED               	subwf	___fltol@exp1,f
 14824     0793                     l5293:
 14825     0793  1FED               	btfss	___fltol@exp1,7
 14826     0794  2F96               	goto	u5091
 14827     0795  2F97               	goto	u5090
 14828     0796                     u5091:
 14829     0796  2FAF               	goto	l5303
 14830     0797                     u5090:
 14831     0797                     l5295:
 14832     0797  086D               	movf	___fltol@exp1,w
 14833     0798  3A80               	xorlw	128
 14834     0799  3E97               	addlw	151
 14835     079A  1803               	skipnc
 14836     079B  2F9D               	goto	u5101
 14837     079C  2F9E               	goto	u5100
 14838     079D                     u5101:
 14839     079D  2F9F               	goto	l5301
 14840     079E                     u5100:
 14841     079E  2F6E               	goto	l5281
 14842     079F                     l5301:
 14843     079F  3001               	movlw	1
 14844     07A0                     u5115:
 14845     07A0  36E7               	lsrf	___fltol@f1+3,f
 14846     07A1  0CE6               	rrf	___fltol@f1+2,f
 14847     07A2  0CE5               	rrf	___fltol@f1+1,f
 14848     07A3  0CE4               	rrf	___fltol@f1,f
 14849     07A4  0B89               	decfsz	9,f
 14850     07A5  2FA0               	goto	u5115
 14851     07A6  3001               	movlw	1
 14852     07A7  00E8               	movwf	??___fltol
 14853     07A8  0868               	movf	??___fltol,w
 14854     07A9  07ED               	addwf	___fltol@exp1,f
 14855     07AA  1D03               	btfss	3,2
 14856     07AB  2FAD               	goto	u5121
 14857     07AC  2FAE               	goto	u5120
 14858     07AD                     u5121:
 14859     07AD  2F9F               	goto	l5301
 14860     07AE                     u5120:
 14861     07AE  2FC4               	goto	l5311
 14862     07AF                     l5303:
 14863     07AF  3020               	movlw	32
 14864     07B0  026D               	subwf	___fltol@exp1,w
 14865     07B1  1C03               	skipc
 14866     07B2  2FB4               	goto	u5131
 14867     07B3  2FB5               	goto	u5130
 14868     07B4                     u5131:
 14869     07B4  2FBF               	goto	l1232
 14870     07B5                     u5130:
 14871     07B5  2F6E               	goto	l5281
 14872     07B6                     l5309:
 14873     07B6  3001               	movlw	1
 14874     07B7                     u5145:
 14875     07B7  35E4               	lslf	___fltol@f1,f
 14876     07B8  0DE5               	rlf	___fltol@f1+1,f
 14877     07B9  0DE6               	rlf	___fltol@f1+2,f
 14878     07BA  0DE7               	rlf	___fltol@f1+3,f
 14879     07BB  0B89               	decfsz	9,f
 14880     07BC  2FB7               	goto	u5145
 14881     07BD  3001               	movlw	1
 14882     07BE  02ED               	subwf	___fltol@exp1,f
 14883     07BF                     l1232:
 14884     07BF  086D               	movf	___fltol@exp1,w
 14885     07C0  1D03               	btfss	3,2
 14886     07C1  2FC3               	goto	u5151
 14887     07C2  2FC4               	goto	u5150
 14888     07C3                     u5151:
 14889     07C3  2FB6               	goto	l5309
 14890     07C4                     u5150:
 14891     07C4                     l5311:
 14892     07C4  086C               	movf	___fltol@sign1,w
 14893     07C5  1903               	btfsc	3,2
 14894     07C6  2FC8               	goto	u5161
 14895     07C7  2FC9               	goto	u5160
 14896     07C8                     u5161:
 14897     07C8  2FD4               	goto	l1235
 14898     07C9                     u5160:
 14899     07C9                     l5313:
 14900     07C9  09E4               	comf	___fltol@f1,f
 14901     07CA  09E5               	comf	___fltol@f1+1,f
 14902     07CB  09E6               	comf	___fltol@f1+2,f
 14903     07CC  09E7               	comf	___fltol@f1+3,f
 14904     07CD  0AE4               	incf	___fltol@f1,f
 14905     07CE  1903               	skipnz
 14906     07CF  0AE5               	incf	___fltol@f1+1,f
 14907     07D0  1903               	skipnz
 14908     07D1  0AE6               	incf	___fltol@f1+2,f
 14909     07D2  1903               	skipnz
 14910     07D3  0AE7               	incf	___fltol@f1+3,f
 14911     07D4                     l1235:
 14912     07D4                     l1225:
 14913     07D4  0008               	return
 14914     07D5                     __end_of___fltol:
 14915                           
 14916                           	psect	text67
 14917     0076                     __ptext67:	
 14918 ;; *************** function ___flmul *****************
 14919 ;; Defined at:
 14920 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  b               4   42[BANK0 ] long 
 14923 ;;  a               4   46[BANK0 ] long 
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;  prod            4   62[BANK0 ] struct .
 14926 ;;  grs             4   57[BANK0 ] unsigned long 
 14927 ;;  temp            2   66[BANK0 ] struct .
 14928 ;;  bexp            1   61[BANK0 ] unsigned char 
 14929 ;;  aexp            1   56[BANK0 ] unsigned char 
 14930 ;;  sign            1   55[BANK0 ] unsigned char 
 14931 ;; Return value:  Size  Location     Type
 14932 ;;                  4   42[BANK0 ] unsigned char 
 14933 ;; Registers used:
 14934 ;;		wreg, status,2, status,0, pclath, cstack
 14935 ;; Tracked objects:
 14936 ;;		On entry : 0/0
 14937 ;;		On exit  : 0/0
 14938 ;;		Unchanged: 0/0
 14939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14940 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14941 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14943 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14944 ;;Total ram usage:       26 bytes
 14945 ;; Hardware stack levels used: 1
 14946 ;; Hardware stack levels required when called: 5
 14947 ;; This function calls:
 14948 ;;		__Umul8_16
 14949 ;; This function is called by:
 14950 ;;		_PI
 14951 ;;		_str2float
 14952 ;;		_printFloat
 14953 ;; This function uses a non-reentrant model
 14954 ;;
 14955                           
 14956     0076                     ___flmul:	
 14957                           ;psect for function ___flmul
 14958                           
 14959     0076                     l5461:	
 14960                           ;incstack = 0
 14961                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14962                           
 14963     0076  0020               	movlb	0	; select bank0
 14964     0077  084D               	movf	___flmul@b+3,w
 14965     0078  3980               	andlw	128
 14966     0079  00D7               	movwf	___flmul@sign
 14967     007A                     l5463:
 14968     007A  354D               	lslf	___flmul@b+3,w
 14969     007B  00DD               	movwf	___flmul@bexp
 14970     007C                     l5465:
 14971     007C  1FCC               	btfss	___flmul@b+2,7
 14972     007D  287F               	goto	u5461
 14973     007E  2880               	goto	u5460
 14974     007F                     u5461:
 14975     007F  2881               	goto	l5469
 14976     0080                     u5460:
 14977     0080                     l5467:
 14978     0080  145D               	bsf	___flmul@bexp,0
 14979     0081                     l5469:
 14980     0081  085D               	movf	___flmul@bexp,w
 14981     0082  1903               	btfsc	3,2
 14982     0083  2885               	goto	u5471
 14983     0084  2886               	goto	u5470
 14984     0085                     u5471:
 14985     0085  2895               	goto	l5477
 14986     0086                     u5470:
 14987     0086                     l5471:
 14988     0086  0A5D               	incf	___flmul@bexp,w
 14989     0087  1D03               	btfss	3,2
 14990     0088  288A               	goto	u5481
 14991     0089  288B               	goto	u5480
 14992     008A                     u5481:
 14993     008A  2893               	goto	l5475
 14994     008B                     u5480:
 14995     008B                     l5473:
 14996     008B  3000               	movlw	0
 14997     008C  00CD               	movwf	___flmul@b+3
 14998     008D  3000               	movlw	0
 14999     008E  00CC               	movwf	___flmul@b+2
 15000     008F  3000               	movlw	0
 15001     0090  00CB               	movwf	___flmul@b+1
 15002     0091  3000               	movlw	0
 15003     0092  00CA               	movwf	___flmul@b
 15004     0093                     l5475:
 15005     0093  17CC               	bsf	___flmul@b+2,7
 15006     0094  289D               	goto	l5479
 15007     0095                     l5477:
 15008     0095  3000               	movlw	0
 15009     0096  00CD               	movwf	___flmul@b+3
 15010     0097  3000               	movlw	0
 15011     0098  00CC               	movwf	___flmul@b+2
 15012     0099  3000               	movlw	0
 15013     009A  00CB               	movwf	___flmul@b+1
 15014     009B  3000               	movlw	0
 15015     009C  00CA               	movwf	___flmul@b
 15016     009D                     l5479:
 15017     009D  0851               	movf	___flmul@a+3,w
 15018     009E  3980               	andlw	128
 15019     009F  00D2               	movwf	??___flmul
 15020     00A0  0852               	movf	??___flmul,w
 15021     00A1  06D7               	xorwf	___flmul@sign,f
 15022     00A2                     l5481:
 15023     00A2  3551               	lslf	___flmul@a+3,w
 15024     00A3  00D8               	movwf	___flmul@aexp
 15025     00A4                     l5483:
 15026     00A4  1FD0               	btfss	___flmul@a+2,7
 15027     00A5  28A7               	goto	u5491
 15028     00A6  28A8               	goto	u5490
 15029     00A7                     u5491:
 15030     00A7  28A9               	goto	l5487
 15031     00A8                     u5490:
 15032     00A8                     l5485:
 15033     00A8  1458               	bsf	___flmul@aexp,0
 15034     00A9                     l5487:
 15035     00A9  0858               	movf	___flmul@aexp,w
 15036     00AA  1903               	btfsc	3,2
 15037     00AB  28AD               	goto	u5501
 15038     00AC  28AE               	goto	u5500
 15039     00AD                     u5501:
 15040     00AD  28BD               	goto	l5495
 15041     00AE                     u5500:
 15042     00AE                     l5489:
 15043     00AE  0A58               	incf	___flmul@aexp,w
 15044     00AF  1D03               	btfss	3,2
 15045     00B0  28B2               	goto	u5511
 15046     00B1  28B3               	goto	u5510
 15047     00B2                     u5511:
 15048     00B2  28BB               	goto	l5493
 15049     00B3                     u5510:
 15050     00B3                     l5491:
 15051     00B3  3000               	movlw	0
 15052     00B4  00D1               	movwf	___flmul@a+3
 15053     00B5  3000               	movlw	0
 15054     00B6  00D0               	movwf	___flmul@a+2
 15055     00B7  3000               	movlw	0
 15056     00B8  00CF               	movwf	___flmul@a+1
 15057     00B9  3000               	movlw	0
 15058     00BA  00CE               	movwf	___flmul@a
 15059     00BB                     l5493:
 15060     00BB  17D0               	bsf	___flmul@a+2,7
 15061     00BC  28C5               	goto	l5497
 15062     00BD                     l5495:
 15063     00BD  3000               	movlw	0
 15064     00BE  00D1               	movwf	___flmul@a+3
 15065     00BF  3000               	movlw	0
 15066     00C0  00D0               	movwf	___flmul@a+2
 15067     00C1  3000               	movlw	0
 15068     00C2  00CF               	movwf	___flmul@a+1
 15069     00C3  3000               	movlw	0
 15070     00C4  00CE               	movwf	___flmul@a
 15071     00C5                     l5497:
 15072     00C5  0858               	movf	___flmul@aexp,w
 15073     00C6  1903               	btfsc	3,2
 15074     00C7  28C9               	goto	u5521
 15075     00C8  28CA               	goto	u5520
 15076     00C9                     u5521:
 15077     00C9  28CF               	goto	l5501
 15078     00CA                     u5520:
 15079     00CA                     l5499:
 15080     00CA  085D               	movf	___flmul@bexp,w
 15081     00CB  1D03               	btfss	3,2
 15082     00CC  28CE               	goto	u5531
 15083     00CD  28CF               	goto	u5530
 15084     00CE                     u5531:
 15085     00CE  28D8               	goto	l5505
 15086     00CF                     u5530:
 15087     00CF                     l5501:
 15088     00CF  3000               	movlw	0
 15089     00D0  00CD               	movwf	?___flmul+3
 15090     00D1  3000               	movlw	0
 15091     00D2  00CC               	movwf	?___flmul+2
 15092     00D3  3000               	movlw	0
 15093     00D4  00CB               	movwf	?___flmul+1
 15094     00D5  3000               	movlw	0
 15095     00D6  00CA               	movwf	?___flmul
 15096     00D7  2AB0               	goto	l1428
 15097     00D8                     l5505:
 15098     00D8  084A               	movf	___flmul@b,w
 15099     00D9  00F4               	movwf	__Umul8_16@multiplicand
 15100     00DA  0850               	movf	___flmul@a+2,w
 15101     00DB  3197  273D  3180   	fcall	__Umul8_16
 15102     00DE  0875               	movf	?__Umul8_16+1,w
 15103     00DF  0020               	movlb	0	; select bank0
 15104     00E0  00E3               	movwf	___flmul@temp+1
 15105     00E1  0874               	movf	?__Umul8_16,w
 15106     00E2  00E2               	movwf	___flmul@temp
 15107     00E3                     l5507:
 15108     00E3  0862               	movf	___flmul@temp,w
 15109     00E4  00D2               	movwf	??___flmul
 15110     00E5  01D3               	clrf	??___flmul+1
 15111     00E6  01D4               	clrf	??___flmul+2
 15112     00E7  01D5               	clrf	??___flmul+3
 15113     00E8  0855               	movf	??___flmul+3,w
 15114     00E9  00DC               	movwf	___flmul@grs+3
 15115     00EA  0854               	movf	??___flmul+2,w
 15116     00EB  00DB               	movwf	___flmul@grs+2
 15117     00EC  0853               	movf	??___flmul+1,w
 15118     00ED  00DA               	movwf	___flmul@grs+1
 15119     00EE  0852               	movf	??___flmul,w
 15120     00EF  00D9               	movwf	___flmul@grs
 15121     00F0                     l5509:
 15122     00F0  0863               	movf	___flmul@temp+1,w
 15123     00F1  00D2               	movwf	??___flmul
 15124     00F2  01D3               	clrf	??___flmul+1
 15125     00F3  01D4               	clrf	??___flmul+2
 15126     00F4  01D5               	clrf	??___flmul+3
 15127     00F5  0855               	movf	??___flmul+3,w
 15128     00F6  00E1               	movwf	___flmul@prod+3
 15129     00F7  0854               	movf	??___flmul+2,w
 15130     00F8  00E0               	movwf	___flmul@prod+2
 15131     00F9  0853               	movf	??___flmul+1,w
 15132     00FA  00DF               	movwf	___flmul@prod+1
 15133     00FB  0852               	movf	??___flmul,w
 15134     00FC  00DE               	movwf	___flmul@prod
 15135     00FD  084B               	movf	___flmul@b+1,w
 15136     00FE  00F4               	movwf	__Umul8_16@multiplicand
 15137     00FF  084F               	movf	___flmul@a+1,w
 15138     0100  3197  273D  3180   	fcall	__Umul8_16
 15139     0103  0875               	movf	?__Umul8_16+1,w
 15140     0104  0020               	movlb	0	; select bank0
 15141     0105  00E3               	movwf	___flmul@temp+1
 15142     0106  0874               	movf	?__Umul8_16,w
 15143     0107  00E2               	movwf	___flmul@temp
 15144     0108                     l5511:
 15145     0108  0862               	movf	___flmul@temp,w
 15146     0109  00D2               	movwf	??___flmul
 15147     010A  01D3               	clrf	??___flmul+1
 15148     010B  01D4               	clrf	??___flmul+2
 15149     010C  01D5               	clrf	??___flmul+3
 15150     010D  0852               	movf	??___flmul,w
 15151     010E  07D9               	addwf	___flmul@grs,f
 15152     010F  0853               	movf	??___flmul+1,w
 15153     0110  3DDA               	addwfc	___flmul@grs+1,f
 15154     0111  0854               	movf	??___flmul+2,w
 15155     0112  3DDB               	addwfc	___flmul@grs+2,f
 15156     0113  0855               	movf	??___flmul+3,w
 15157     0114  3DDC               	addwfc	___flmul@grs+3,f
 15158     0115                     l5513:
 15159     0115  0863               	movf	___flmul@temp+1,w
 15160     0116  00D2               	movwf	??___flmul
 15161     0117  01D3               	clrf	??___flmul+1
 15162     0118  01D4               	clrf	??___flmul+2
 15163     0119  01D5               	clrf	??___flmul+3
 15164     011A  0852               	movf	??___flmul,w
 15165     011B  07DE               	addwf	___flmul@prod,f
 15166     011C  0853               	movf	??___flmul+1,w
 15167     011D  3DDF               	addwfc	___flmul@prod+1,f
 15168     011E  0854               	movf	??___flmul+2,w
 15169     011F  3DE0               	addwfc	___flmul@prod+2,f
 15170     0120  0855               	movf	??___flmul+3,w
 15171     0121  3DE1               	addwfc	___flmul@prod+3,f
 15172     0122  084C               	movf	___flmul@b+2,w
 15173     0123  00F4               	movwf	__Umul8_16@multiplicand
 15174     0124  084E               	movf	___flmul@a,w
 15175     0125  3197  273D  3180   	fcall	__Umul8_16
 15176     0128  0875               	movf	?__Umul8_16+1,w
 15177     0129  0020               	movlb	0	; select bank0
 15178     012A  00E3               	movwf	___flmul@temp+1
 15179     012B  0874               	movf	?__Umul8_16,w
 15180     012C  00E2               	movwf	___flmul@temp
 15181     012D                     l5515:
 15182     012D  0862               	movf	___flmul@temp,w
 15183     012E  00D2               	movwf	??___flmul
 15184     012F  01D3               	clrf	??___flmul+1
 15185     0130  01D4               	clrf	??___flmul+2
 15186     0131  01D5               	clrf	??___flmul+3
 15187     0132  0852               	movf	??___flmul,w
 15188     0133  07D9               	addwf	___flmul@grs,f
 15189     0134  0853               	movf	??___flmul+1,w
 15190     0135  3DDA               	addwfc	___flmul@grs+1,f
 15191     0136  0854               	movf	??___flmul+2,w
 15192     0137  3DDB               	addwfc	___flmul@grs+2,f
 15193     0138  0855               	movf	??___flmul+3,w
 15194     0139  3DDC               	addwfc	___flmul@grs+3,f
 15195     013A                     l5517:
 15196     013A  0863               	movf	___flmul@temp+1,w
 15197     013B  00D2               	movwf	??___flmul
 15198     013C  01D3               	clrf	??___flmul+1
 15199     013D  01D4               	clrf	??___flmul+2
 15200     013E  01D5               	clrf	??___flmul+3
 15201     013F  0852               	movf	??___flmul,w
 15202     0140  07DE               	addwf	___flmul@prod,f
 15203     0141  0853               	movf	??___flmul+1,w
 15204     0142  3DDF               	addwfc	___flmul@prod+1,f
 15205     0143  0854               	movf	??___flmul+2,w
 15206     0144  3DE0               	addwfc	___flmul@prod+2,f
 15207     0145  0855               	movf	??___flmul+3,w
 15208     0146  3DE1               	addwfc	___flmul@prod+3,f
 15209     0147                     l5519:
 15210     0147  3008               	movlw	8
 15211     0148                     u5545:
 15212     0148  35D9               	lslf	___flmul@grs,f
 15213     0149  0DDA               	rlf	___flmul@grs+1,f
 15214     014A  0DDB               	rlf	___flmul@grs+2,f
 15215     014B  0DDC               	rlf	___flmul@grs+3,f
 15216     014C  0B89               	decfsz	9,f
 15217     014D  2948               	goto	u5545
 15218     014E                     l5521:
 15219     014E  084B               	movf	___flmul@b+1,w
 15220     014F  00F4               	movwf	__Umul8_16@multiplicand
 15221     0150  084E               	movf	___flmul@a,w
 15222     0151  3197  273D  3180   	fcall	__Umul8_16
 15223     0154  0875               	movf	?__Umul8_16+1,w
 15224     0155  0020               	movlb	0	; select bank0
 15225     0156  00E3               	movwf	___flmul@temp+1
 15226     0157  0874               	movf	?__Umul8_16,w
 15227     0158  00E2               	movwf	___flmul@temp
 15228     0159                     l5523:
 15229     0159  0862               	movf	___flmul@temp,w
 15230     015A  07D9               	addwf	___flmul@grs,f
 15231     015B  0863               	movf	___flmul@temp+1,w
 15232     015C  3DDA               	addwfc	___flmul@grs+1,f
 15233     015D  3000               	movlw	0
 15234     015E  3DDB               	addwfc	___flmul@grs+2,f
 15235     015F  3DDC               	addwfc	___flmul@grs+3,f
 15236     0160                     l5525:
 15237     0160  084A               	movf	___flmul@b,w
 15238     0161  00F4               	movwf	__Umul8_16@multiplicand
 15239     0162  084F               	movf	___flmul@a+1,w
 15240     0163  3197  273D  3180   	fcall	__Umul8_16
 15241     0166  0875               	movf	?__Umul8_16+1,w
 15242     0167  0020               	movlb	0	; select bank0
 15243     0168  00E3               	movwf	___flmul@temp+1
 15244     0169  0874               	movf	?__Umul8_16,w
 15245     016A  00E2               	movwf	___flmul@temp
 15246     016B                     l5527:
 15247     016B  0862               	movf	___flmul@temp,w
 15248     016C  07D9               	addwf	___flmul@grs,f
 15249     016D  0863               	movf	___flmul@temp+1,w
 15250     016E  3DDA               	addwfc	___flmul@grs+1,f
 15251     016F  3000               	movlw	0
 15252     0170  3DDB               	addwfc	___flmul@grs+2,f
 15253     0171  3DDC               	addwfc	___flmul@grs+3,f
 15254     0172                     l5529:
 15255     0172  3008               	movlw	8
 15256     0173                     u5555:
 15257     0173  35D9               	lslf	___flmul@grs,f
 15258     0174  0DDA               	rlf	___flmul@grs+1,f
 15259     0175  0DDB               	rlf	___flmul@grs+2,f
 15260     0176  0DDC               	rlf	___flmul@grs+3,f
 15261     0177  0B89               	decfsz	9,f
 15262     0178  2973               	goto	u5555
 15263     0179  084A               	movf	___flmul@b,w
 15264     017A  00F4               	movwf	__Umul8_16@multiplicand
 15265     017B  084E               	movf	___flmul@a,w
 15266     017C  3197  273D  3180   	fcall	__Umul8_16
 15267     017F  0875               	movf	?__Umul8_16+1,w
 15268     0180  0020               	movlb	0	; select bank0
 15269     0181  00E3               	movwf	___flmul@temp+1
 15270     0182  0874               	movf	?__Umul8_16,w
 15271     0183  00E2               	movwf	___flmul@temp
 15272     0184                     l5531:
 15273     0184  0862               	movf	___flmul@temp,w
 15274     0185  07D9               	addwf	___flmul@grs,f
 15275     0186  0863               	movf	___flmul@temp+1,w
 15276     0187  3DDA               	addwfc	___flmul@grs+1,f
 15277     0188  3000               	movlw	0
 15278     0189  3DDB               	addwfc	___flmul@grs+2,f
 15279     018A  3DDC               	addwfc	___flmul@grs+3,f
 15280     018B                     l5533:
 15281     018B  084B               	movf	___flmul@b+1,w
 15282     018C  00F4               	movwf	__Umul8_16@multiplicand
 15283     018D  0850               	movf	___flmul@a+2,w
 15284     018E  3197  273D  3180   	fcall	__Umul8_16
 15285     0191  0875               	movf	?__Umul8_16+1,w
 15286     0192  0020               	movlb	0	; select bank0
 15287     0193  00E3               	movwf	___flmul@temp+1
 15288     0194  0874               	movf	?__Umul8_16,w
 15289     0195  00E2               	movwf	___flmul@temp
 15290     0196  0862               	movf	___flmul@temp,w
 15291     0197  07DE               	addwf	___flmul@prod,f
 15292     0198  0863               	movf	___flmul@temp+1,w
 15293     0199  3DDF               	addwfc	___flmul@prod+1,f
 15294     019A  3000               	movlw	0
 15295     019B  3DE0               	addwfc	___flmul@prod+2,f
 15296     019C  3DE1               	addwfc	___flmul@prod+3,f
 15297     019D                     l5535:
 15298     019D  084C               	movf	___flmul@b+2,w
 15299     019E  00F4               	movwf	__Umul8_16@multiplicand
 15300     019F  084F               	movf	___flmul@a+1,w
 15301     01A0  3197  273D  3180   	fcall	__Umul8_16
 15302     01A3  0875               	movf	?__Umul8_16+1,w
 15303     01A4  0020               	movlb	0	; select bank0
 15304     01A5  00E3               	movwf	___flmul@temp+1
 15305     01A6  0874               	movf	?__Umul8_16,w
 15306     01A7  00E2               	movwf	___flmul@temp
 15307     01A8                     l5537:
 15308     01A8  0862               	movf	___flmul@temp,w
 15309     01A9  07DE               	addwf	___flmul@prod,f
 15310     01AA  0863               	movf	___flmul@temp+1,w
 15311     01AB  3DDF               	addwfc	___flmul@prod+1,f
 15312     01AC  3000               	movlw	0
 15313     01AD  3DE0               	addwfc	___flmul@prod+2,f
 15314     01AE  3DE1               	addwfc	___flmul@prod+3,f
 15315     01AF  084C               	movf	___flmul@b+2,w
 15316     01B0  00F4               	movwf	__Umul8_16@multiplicand
 15317     01B1  0850               	movf	___flmul@a+2,w
 15318     01B2  3197  273D  3180   	fcall	__Umul8_16
 15319     01B5  0875               	movf	?__Umul8_16+1,w
 15320     01B6  0020               	movlb	0	; select bank0
 15321     01B7  00E3               	movwf	___flmul@temp+1
 15322     01B8  0874               	movf	?__Umul8_16,w
 15323     01B9  00E2               	movwf	___flmul@temp
 15324     01BA                     l5539:
 15325     01BA  0862               	movf	___flmul@temp,w
 15326     01BB  00D2               	movwf	??___flmul
 15327     01BC  0863               	movf	___flmul@temp+1,w
 15328     01BD  00D3               	movwf	??___flmul+1
 15329     01BE  01D4               	clrf	??___flmul+2
 15330     01BF  01D5               	clrf	??___flmul+3
 15331     01C0  3008               	movlw	8
 15332     01C1                     u5565:
 15333     01C1  35D2               	lslf	??___flmul,f
 15334     01C2  0DD3               	rlf	??___flmul+1,f
 15335     01C3  0DD4               	rlf	??___flmul+2,f
 15336     01C4  0DD5               	rlf	??___flmul+3,f
 15337     01C5                     u5560:
 15338     01C5  0B89               	decfsz	9,f
 15339     01C6  29C1               	goto	u5565
 15340     01C7  0852               	movf	??___flmul,w
 15341     01C8  07DE               	addwf	___flmul@prod,f
 15342     01C9  0853               	movf	??___flmul+1,w
 15343     01CA  3DDF               	addwfc	___flmul@prod+1,f
 15344     01CB  0854               	movf	??___flmul+2,w
 15345     01CC  3DE0               	addwfc	___flmul@prod+2,f
 15346     01CD  0855               	movf	??___flmul+3,w
 15347     01CE  3DE1               	addwfc	___flmul@prod+3,f
 15348     01CF                     l5541:
 15349     01CF  0859               	movf	___flmul@grs,w
 15350     01D0  00D2               	movwf	??___flmul
 15351     01D1  085A               	movf	___flmul@grs+1,w
 15352     01D2  00D3               	movwf	??___flmul+1
 15353     01D3  085B               	movf	___flmul@grs+2,w
 15354     01D4  00D4               	movwf	??___flmul+2
 15355     01D5  085C               	movf	___flmul@grs+3,w
 15356     01D6  00D5               	movwf	??___flmul+3
 15357     01D7  3018               	movlw	24
 15358     01D8                     u5575:
 15359     01D8  36D5               	lsrf	??___flmul+3,f
 15360     01D9  0CD4               	rrf	??___flmul+2,f
 15361     01DA  0CD3               	rrf	??___flmul+1,f
 15362     01DB  0CD2               	rrf	??___flmul,f
 15363     01DC                     u5570:
 15364     01DC  0B89               	decfsz	9,f
 15365     01DD  29D8               	goto	u5575
 15366     01DE  0852               	movf	??___flmul,w
 15367     01DF  07DE               	addwf	___flmul@prod,f
 15368     01E0  0853               	movf	??___flmul+1,w
 15369     01E1  3DDF               	addwfc	___flmul@prod+1,f
 15370     01E2  0854               	movf	??___flmul+2,w
 15371     01E3  3DE0               	addwfc	___flmul@prod+2,f
 15372     01E4  0855               	movf	??___flmul+3,w
 15373     01E5  3DE1               	addwfc	___flmul@prod+3,f
 15374     01E6                     l5543:
 15375     01E6  3008               	movlw	8
 15376     01E7                     u5585:
 15377     01E7  35D9               	lslf	___flmul@grs,f
 15378     01E8  0DDA               	rlf	___flmul@grs+1,f
 15379     01E9  0DDB               	rlf	___flmul@grs+2,f
 15380     01EA  0DDC               	rlf	___flmul@grs+3,f
 15381     01EB  0B89               	decfsz	9,f
 15382     01EC  29E7               	goto	u5585
 15383     01ED                     l5545:
 15384     01ED  085D               	movf	___flmul@bexp,w
 15385     01EE  0758               	addwf	___flmul@aexp,w
 15386     01EF  00D2               	movwf	??___flmul
 15387     01F0  01D3               	clrf	??___flmul+1
 15388     01F1  0DD3               	rlf	??___flmul+1,f
 15389     01F2  0852               	movf	??___flmul,w
 15390     01F3  3E82               	addlw	130
 15391     01F4  00E2               	movwf	___flmul@temp
 15392     01F5  30FF               	movlw	255
 15393     01F6  3D53               	addwfc	??___flmul+1,w
 15394     01F7  00E3               	movwf	___flmul@temp+1
 15395     01F8  2A10               	goto	l5557
 15396     01F9                     l5547:
 15397     01F9  3001               	movlw	1
 15398     01FA                     u5595:
 15399     01FA  35DE               	lslf	___flmul@prod,f
 15400     01FB  0DDF               	rlf	___flmul@prod+1,f
 15401     01FC  0DE0               	rlf	___flmul@prod+2,f
 15402     01FD  0DE1               	rlf	___flmul@prod+3,f
 15403     01FE  0B89               	decfsz	9,f
 15404     01FF  29FA               	goto	u5595
 15405     0200                     l5549:
 15406     0200  1FDC               	btfss	___flmul@grs+3,7
 15407     0201  2A03               	goto	u5601
 15408     0202  2A04               	goto	u5600
 15409     0203                     u5601:
 15410     0203  2A05               	goto	l5553
 15411     0204                     u5600:
 15412     0204                     l5551:
 15413     0204  145E               	bsf	___flmul@prod,0
 15414     0205                     l5553:
 15415     0205  3001               	movlw	1
 15416     0206                     u5615:
 15417     0206  35D9               	lslf	___flmul@grs,f
 15418     0207  0DDA               	rlf	___flmul@grs+1,f
 15419     0208  0DDB               	rlf	___flmul@grs+2,f
 15420     0209  0DDC               	rlf	___flmul@grs+3,f
 15421     020A  0B89               	decfsz	9,f
 15422     020B  2A06               	goto	u5615
 15423     020C                     l5555:
 15424     020C  30FF               	movlw	255
 15425     020D  07E2               	addwf	___flmul@temp,f
 15426     020E  30FF               	movlw	255
 15427     020F  3DE3               	addwfc	___flmul@temp+1,f
 15428     0210                     l5557:
 15429     0210  1FE0               	btfss	___flmul@prod+2,7
 15430     0211  2A13               	goto	u5621
 15431     0212  2A14               	goto	u5620
 15432     0213                     u5621:
 15433     0213  29F9               	goto	l5547
 15434     0214                     u5620:
 15435     0214                     l5559:
 15436     0214  01D8               	clrf	___flmul@aexp
 15437     0215                     l5561:
 15438     0215  1FDC               	btfss	___flmul@grs+3,7
 15439     0216  2A18               	goto	u5631
 15440     0217  2A19               	goto	u5630
 15441     0218                     u5631:
 15442     0218  2A35               	goto	l5569
 15443     0219                     u5630:
 15444     0219                     l5563:
 15445     0219  30FF               	movlw	255
 15446     021A  0559               	andwf	___flmul@grs,w
 15447     021B  00D2               	movwf	??___flmul
 15448     021C  30FF               	movlw	255
 15449     021D  055A               	andwf	___flmul@grs+1,w
 15450     021E  00D3               	movwf	??___flmul+1
 15451     021F  30FF               	movlw	255
 15452     0220  055B               	andwf	___flmul@grs+2,w
 15453     0221  00D4               	movwf	??___flmul+2
 15454     0222  307F               	movlw	127
 15455     0223  055C               	andwf	___flmul@grs+3,w
 15456     0224  00D5               	movwf	??___flmul+3
 15457     0225  0855               	movf	??___flmul+3,w
 15458     0226  0454               	iorwf	??___flmul+2,w
 15459     0227  0453               	iorwf	??___flmul+1,w
 15460     0228  0452               	iorwf	??___flmul,w
 15461     0229  1903               	skipnz
 15462     022A  2A2C               	goto	u5641
 15463     022B  2A2D               	goto	u5640
 15464     022C                     u5641:
 15465     022C  2A30               	goto	l1434
 15466     022D                     u5640:
 15467     022D                     l5565:
 15468     022D  01D8               	clrf	___flmul@aexp
 15469     022E  0AD8               	incf	___flmul@aexp,f
 15470     022F  2A35               	goto	l5569
 15471     0230                     l1434:
 15472     0230  1C5E               	btfss	___flmul@prod,0
 15473     0231  2A33               	goto	u5651
 15474     0232  2A34               	goto	u5650
 15475     0233                     u5651:
 15476     0233  2A35               	goto	l5569
 15477     0234                     u5650:
 15478     0234  2A2D               	goto	l5565
 15479     0235                     l5569:
 15480     0235  0858               	movf	___flmul@aexp,w
 15481     0236  1903               	btfsc	3,2
 15482     0237  2A39               	goto	u5661
 15483     0238  2A3A               	goto	u5660
 15484     0239                     u5661:
 15485     0239  2A62               	goto	l5579
 15486     023A                     u5660:
 15487     023A                     l5571:
 15488     023A  3001               	movlw	1
 15489     023B  07DE               	addwf	___flmul@prod,f
 15490     023C  3000               	movlw	0
 15491     023D  3DDF               	addwfc	___flmul@prod+1,f
 15492     023E  3000               	movlw	0
 15493     023F  3DE0               	addwfc	___flmul@prod+2,f
 15494     0240  3000               	movlw	0
 15495     0241  3DE1               	addwfc	___flmul@prod+3,f
 15496     0242                     l5573:
 15497     0242  1C61               	btfss	___flmul@prod+3,0
 15498     0243  2A45               	goto	u5671
 15499     0244  2A46               	goto	u5670
 15500     0245                     u5671:
 15501     0245  2A62               	goto	l5579
 15502     0246                     u5670:
 15503     0246                     l5575:
 15504     0246  085E               	movf	___flmul@prod,w
 15505     0247  00D2               	movwf	??___flmul
 15506     0248  085F               	movf	___flmul@prod+1,w
 15507     0249  00D3               	movwf	??___flmul+1
 15508     024A  0860               	movf	___flmul@prod+2,w
 15509     024B  00D4               	movwf	??___flmul+2
 15510     024C  0861               	movf	___flmul@prod+3,w
 15511     024D  00D5               	movwf	??___flmul+3
 15512     024E  3001               	movlw	1
 15513     024F  00D6               	movwf	??___flmul+4
 15514     0250                     u5685:
 15515     0250  37D5               	asrf	??___flmul+3,f
 15516     0251  0CD4               	rrf	??___flmul+2,f
 15517     0252  0CD3               	rrf	??___flmul+1,f
 15518     0253  0CD2               	rrf	??___flmul,f
 15519     0254                     u5680:
 15520     0254  0BD6               	decfsz	??___flmul+4,f
 15521     0255  2A50               	goto	u5685
 15522     0256  0855               	movf	??___flmul+3,w
 15523     0257  00E1               	movwf	___flmul@prod+3
 15524     0258  0854               	movf	??___flmul+2,w
 15525     0259  00E0               	movwf	___flmul@prod+2
 15526     025A  0853               	movf	??___flmul+1,w
 15527     025B  00DF               	movwf	___flmul@prod+1
 15528     025C  0852               	movf	??___flmul,w
 15529     025D  00DE               	movwf	___flmul@prod
 15530     025E                     l5577:
 15531     025E  3001               	movlw	1
 15532     025F  07E2               	addwf	___flmul@temp,f
 15533     0260  3000               	movlw	0
 15534     0261  3DE3               	addwfc	___flmul@temp+1,f
 15535     0262                     l5579:
 15536     0262  0863               	movf	___flmul@temp+1,w
 15537     0263  3A80               	xorlw	128
 15538     0264  00D2               	movwf	??___flmul
 15539     0265  3080               	movlw	128
 15540     0266  0252               	subwf	??___flmul,w
 15541     0267  1D03               	skipz
 15542     0268  2A6B               	goto	u5695
 15543     0269  30FF               	movlw	255
 15544     026A  0262               	subwf	___flmul@temp,w
 15545     026B                     u5695:
 15546     026B  1C03               	skipc
 15547     026C  2A6E               	goto	u5691
 15548     026D  2A6F               	goto	u5690
 15549     026E                     u5691:
 15550     026E  2A79               	goto	l5583
 15551     026F                     u5690:
 15552     026F                     l5581:
 15553     026F  307F               	movlw	127
 15554     0270  0020               	movlb	0	; select bank0
 15555     0271  00E1               	movwf	___flmul@prod+3
 15556     0272  3080               	movlw	128
 15557     0273  00E0               	movwf	___flmul@prod+2
 15558     0274  3000               	movlw	0
 15559     0275  00DF               	movwf	___flmul@prod+1
 15560     0276  3000               	movlw	0
 15561     0277  00DE               	movwf	___flmul@prod
 15562     0278  2AA4               	goto	l1440
 15563     0279                     l5583:
 15564     0279  0020               	movlb	0	; select bank0
 15565     027A  0863               	movf	___flmul@temp+1,w
 15566     027B  3A80               	xorlw	128
 15567     027C  00D2               	movwf	??___flmul
 15568     027D  3080               	movlw	128
 15569     027E  0252               	subwf	??___flmul,w
 15570     027F  1D03               	skipz
 15571     0280  2A83               	goto	u5705
 15572     0281  3001               	movlw	1
 15573     0282  0262               	subwf	___flmul@temp,w
 15574     0283                     u5705:
 15575     0283  1803               	skipnc
 15576     0284  2A86               	goto	u5701
 15577     0285  2A87               	goto	u5700
 15578     0286                     u5701:
 15579     0286  2A92               	goto	l5589
 15580     0287                     u5700:
 15581     0287                     l5585:
 15582     0287  3000               	movlw	0
 15583     0288  0020               	movlb	0	; select bank0
 15584     0289  00E1               	movwf	___flmul@prod+3
 15585     028A  3000               	movlw	0
 15586     028B  00E0               	movwf	___flmul@prod+2
 15587     028C  3000               	movlw	0
 15588     028D  00DF               	movwf	___flmul@prod+1
 15589     028E  3000               	movlw	0
 15590     028F  00DE               	movwf	___flmul@prod
 15591     0290                     l5587:
 15592     0290  01D7               	clrf	___flmul@sign
 15593     0291  2AA4               	goto	l1440
 15594     0292                     l5589:
 15595     0292  0020               	movlb	0	; select bank0
 15596     0293  0862               	movf	___flmul@temp,w
 15597     0294  00DD               	movwf	___flmul@bexp
 15598     0295  30FF               	movlw	255
 15599     0296  05DE               	andwf	___flmul@prod,f
 15600     0297  30FF               	movlw	255
 15601     0298  05DF               	andwf	___flmul@prod+1,f
 15602     0299  307F               	movlw	127
 15603     029A  05E0               	andwf	___flmul@prod+2,f
 15604     029B  3000               	movlw	0
 15605     029C  05E1               	andwf	___flmul@prod+3,f
 15606     029D                     l5591:
 15607     029D  1C5D               	btfss	___flmul@bexp,0
 15608     029E  2AA0               	goto	u5711
 15609     029F  2AA1               	goto	u5710
 15610     02A0                     u5711:
 15611     02A0  2AA2               	goto	l5595
 15612     02A1                     u5710:
 15613     02A1                     l5593:
 15614     02A1  17E0               	bsf	___flmul@prod+2,7
 15615     02A2                     l5595:
 15616     02A2  365D               	lsrf	___flmul@bexp,w
 15617     02A3  00E1               	movwf	___flmul@prod+3
 15618     02A4                     l1440:
 15619     02A4  0857               	movf	___flmul@sign,w
 15620     02A5  00D2               	movwf	??___flmul
 15621     02A6  0852               	movf	??___flmul,w
 15622     02A7  04E1               	iorwf	___flmul@prod+3,f
 15623     02A8                     l5597:
 15624     02A8  0861               	movf	___flmul@prod+3,w
 15625     02A9  00CD               	movwf	?___flmul+3
 15626     02AA  0860               	movf	___flmul@prod+2,w
 15627     02AB  00CC               	movwf	?___flmul+2
 15628     02AC  085F               	movf	___flmul@prod+1,w
 15629     02AD  00CB               	movwf	?___flmul+1
 15630     02AE  085E               	movf	___flmul@prod,w
 15631     02AF  00CA               	movwf	?___flmul
 15632     02B0                     l1428:
 15633     02B0  0008               	return
 15634     02B1                     __end_of___flmul:
 15635                           
 15636                           	psect	text68
 15637     173D                     __ptext68:	
 15638 ;; *************** function __Umul8_16 *****************
 15639 ;; Defined at:
 15640 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;  multiplier      1    wreg     unsigned char 
 15643 ;;  multiplicand    1    4[COMMON] unsigned char 
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;  multiplier      1    6[BANK0 ] unsigned char 
 15646 ;;  word_mpld       2    4[BANK0 ] unsigned int 
 15647 ;;  product         2    2[BANK0 ] unsigned int 
 15648 ;; Return value:  Size  Location     Type
 15649 ;;                  2    4[COMMON] unsigned int 
 15650 ;; Registers used:
 15651 ;;		wreg, status,2, status,0
 15652 ;; Tracked objects:
 15653 ;;		On entry : 0/0
 15654 ;;		On exit  : 0/0
 15655 ;;		Unchanged: 0/0
 15656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15658 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15660 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15661 ;;Total ram usage:        9 bytes
 15662 ;; Hardware stack levels used: 1
 15663 ;; Hardware stack levels required when called: 4
 15664 ;; This function calls:
 15665 ;;		Nothing
 15666 ;; This function is called by:
 15667 ;;		___flmul
 15668 ;; This function uses a non-reentrant model
 15669 ;;
 15670                           
 15671     173D                     __Umul8_16:	
 15672                           ;psect for function __Umul8_16
 15673                           
 15674                           
 15675                           ;incstack = 0
 15676                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15677                           ;__Umul8_16@multiplier stored from wreg
 15678     173D  0020               	movlb	0	; select bank0
 15679     173E  00A6               	movwf	__Umul8_16@multiplier
 15680     173F                     l5199:
 15681     173F  01A2               	clrf	__Umul8_16@product
 15682     1740  01A3               	clrf	__Umul8_16@product+1
 15683     1741                     l5201:
 15684     1741  0874               	movf	__Umul8_16@multiplicand,w
 15685     1742  00A0               	movwf	??__Umul8_16
 15686     1743  01A1               	clrf	??__Umul8_16+1
 15687     1744  0820               	movf	??__Umul8_16,w
 15688     1745  00A4               	movwf	__Umul8_16@word_mpld
 15689     1746  0821               	movf	??__Umul8_16+1,w
 15690     1747  00A5               	movwf	__Umul8_16@word_mpld+1
 15691     1748                     l5203:
 15692     1748  1C26               	btfss	__Umul8_16@multiplier,0
 15693     1749  2F4B               	goto	u4971
 15694     174A  2F4C               	goto	u4970
 15695     174B                     u4971:
 15696     174B  2F50               	goto	l1447
 15697     174C                     u4970:
 15698     174C                     l5205:
 15699     174C  0824               	movf	__Umul8_16@word_mpld,w
 15700     174D  07A2               	addwf	__Umul8_16@product,f
 15701     174E  0825               	movf	__Umul8_16@word_mpld+1,w
 15702     174F  3DA3               	addwfc	__Umul8_16@product+1,f
 15703     1750                     l1447:
 15704     1750  3001               	movlw	1
 15705     1751                     u4985:
 15706     1751  35A4               	lslf	__Umul8_16@word_mpld,f
 15707     1752  0DA5               	rlf	__Umul8_16@word_mpld+1,f
 15708     1753  0B89               	decfsz	9,f
 15709     1754  2F51               	goto	u4985
 15710     1755  1003               	clrc
 15711     1756  0CA6               	rrf	__Umul8_16@multiplier,f
 15712     1757                     l5207:
 15713     1757  0826               	movf	__Umul8_16@multiplier,w
 15714     1758  1D03               	btfss	3,2
 15715     1759  2F5B               	goto	u4991
 15716     175A  2F5C               	goto	u4990
 15717     175B                     u4991:
 15718     175B  2F48               	goto	l5203
 15719     175C                     u4990:
 15720     175C                     l5209:
 15721     175C  0823               	movf	__Umul8_16@product+1,w
 15722     175D  00F5               	movwf	?__Umul8_16+1
 15723     175E  0822               	movf	__Umul8_16@product,w
 15724     175F  00F4               	movwf	?__Umul8_16
 15725     1760                     l1449:
 15726     1760  0008               	return
 15727     1761                     __end_of__Umul8_16:
 15728                           
 15729                           	psect	text69
 15730     02B1                     __ptext69:	
 15731 ;; *************** function ___fladd *****************
 15732 ;; Defined at:
 15733 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 15734 ;; Parameters:    Size  Location     Type
 15735 ;;  b               4   14[BANK0 ] unsigned int 
 15736 ;;  a               4   18[BANK0 ] unsigned int 
 15737 ;; Auto vars:     Size  Location     Type
 15738 ;;  grs             1   33[BANK0 ] unsigned char 
 15739 ;;  bexp            1   32[BANK0 ] unsigned char 
 15740 ;;  aexp            1   31[BANK0 ] unsigned char 
 15741 ;;  signs           1   30[BANK0 ] unsigned char 
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  4   14[BANK0 ] unsigned char 
 15744 ;; Registers used:
 15745 ;;		wreg, status,2, status,0
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15751 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15752 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15753 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15754 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15755 ;;Total ram usage:       20 bytes
 15756 ;; Hardware stack levels used: 1
 15757 ;; Hardware stack levels required when called: 4
 15758 ;; This function calls:
 15759 ;;		Nothing
 15760 ;; This function is called by:
 15761 ;;		_PI
 15762 ;;		_str2float
 15763 ;;		___flsub
 15764 ;; This function uses a non-reentrant model
 15765 ;;
 15766                           
 15767     02B1                     ___fladd:	
 15768                           ;psect for function ___fladd
 15769                           
 15770     02B1                     l5005:	
 15771                           ;incstack = 0
 15772                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 15773                           
 15774     02B1  0020               	movlb	0	; select bank0
 15775     02B2  0831               	movf	___fladd@b+3,w
 15776     02B3  3980               	andlw	128
 15777     02B4  00BE               	movwf	___fladd@signs
 15778     02B5                     l5007:
 15779     02B5  3531               	lslf	___fladd@b+3,w
 15780     02B6  00C0               	movwf	___fladd@bexp
 15781     02B7                     l5009:
 15782     02B7  1FB0               	btfss	___fladd@b+2,7
 15783     02B8  2ABA               	goto	u4541
 15784     02B9  2ABB               	goto	u4540
 15785     02BA                     u4541:
 15786     02BA  2ABC               	goto	l5013
 15787     02BB                     u4540:
 15788     02BB                     l5011:
 15789     02BB  1440               	bsf	___fladd@bexp,0
 15790     02BC                     l5013:
 15791     02BC  0840               	movf	___fladd@bexp,w
 15792     02BD  1903               	btfsc	3,2
 15793     02BE  2AC0               	goto	u4551
 15794     02BF  2AC1               	goto	u4550
 15795     02C0                     u4551:
 15796     02C0  2AD1               	goto	l5023
 15797     02C1                     u4550:
 15798     02C1                     l5015:
 15799     02C1  0A40               	incf	___fladd@bexp,w
 15800     02C2  1D03               	btfss	3,2
 15801     02C3  2AC5               	goto	u4561
 15802     02C4  2AC6               	goto	u4560
 15803     02C5                     u4561:
 15804     02C5  2ACE               	goto	l5019
 15805     02C6                     u4560:
 15806     02C6                     l5017:
 15807     02C6  3000               	movlw	0
 15808     02C7  00B1               	movwf	___fladd@b+3
 15809     02C8  3000               	movlw	0
 15810     02C9  00B0               	movwf	___fladd@b+2
 15811     02CA  3000               	movlw	0
 15812     02CB  00AF               	movwf	___fladd@b+1
 15813     02CC  3000               	movlw	0
 15814     02CD  00AE               	movwf	___fladd@b
 15815     02CE                     l5019:
 15816     02CE  17B0               	bsf	___fladd@b+2,7
 15817     02CF                     l5021:
 15818     02CF  01B1               	clrf	___fladd@b+3
 15819     02D0  2AD9               	goto	l5025
 15820     02D1                     l5023:
 15821     02D1  3000               	movlw	0
 15822     02D2  00B1               	movwf	___fladd@b+3
 15823     02D3  3000               	movlw	0
 15824     02D4  00B0               	movwf	___fladd@b+2
 15825     02D5  3000               	movlw	0
 15826     02D6  00AF               	movwf	___fladd@b+1
 15827     02D7  3000               	movlw	0
 15828     02D8  00AE               	movwf	___fladd@b
 15829     02D9                     l5025:
 15830     02D9  0835               	movf	___fladd@a+3,w
 15831     02DA  3980               	andlw	128
 15832     02DB  00BF               	movwf	___fladd@aexp
 15833     02DC                     l5027:
 15834     02DC  083F               	movf	___fladd@aexp,w
 15835     02DD  063E               	xorwf	___fladd@signs,w
 15836     02DE  1903               	skipnz
 15837     02DF  2AE1               	goto	u4571
 15838     02E0  2AE2               	goto	u4570
 15839     02E1                     u4571:
 15840     02E1  2AE3               	goto	l5031
 15841     02E2                     u4570:
 15842     02E2                     l5029:
 15843     02E2  173E               	bsf	___fladd@signs,6
 15844     02E3                     l5031:
 15845     02E3  3535               	lslf	___fladd@a+3,w
 15846     02E4  00BF               	movwf	___fladd@aexp
 15847     02E5                     l5033:
 15848     02E5  1FB4               	btfss	___fladd@a+2,7
 15849     02E6  2AE8               	goto	u4581
 15850     02E7  2AE9               	goto	u4580
 15851     02E8                     u4581:
 15852     02E8  2AEA               	goto	l5037
 15853     02E9                     u4580:
 15854     02E9                     l5035:
 15855     02E9  143F               	bsf	___fladd@aexp,0
 15856     02EA                     l5037:
 15857     02EA  083F               	movf	___fladd@aexp,w
 15858     02EB  1903               	btfsc	3,2
 15859     02EC  2AEE               	goto	u4591
 15860     02ED  2AEF               	goto	u4590
 15861     02EE                     u4591:
 15862     02EE  2AFF               	goto	l5047
 15863     02EF                     u4590:
 15864     02EF                     l5039:
 15865     02EF  0A3F               	incf	___fladd@aexp,w
 15866     02F0  1D03               	btfss	3,2
 15867     02F1  2AF3               	goto	u4601
 15868     02F2  2AF4               	goto	u4600
 15869     02F3                     u4601:
 15870     02F3  2AFC               	goto	l5043
 15871     02F4                     u4600:
 15872     02F4                     l5041:
 15873     02F4  3000               	movlw	0
 15874     02F5  00B5               	movwf	___fladd@a+3
 15875     02F6  3000               	movlw	0
 15876     02F7  00B4               	movwf	___fladd@a+2
 15877     02F8  3000               	movlw	0
 15878     02F9  00B3               	movwf	___fladd@a+1
 15879     02FA  3000               	movlw	0
 15880     02FB  00B2               	movwf	___fladd@a
 15881     02FC                     l5043:
 15882     02FC  17B4               	bsf	___fladd@a+2,7
 15883     02FD                     l5045:
 15884     02FD  01B5               	clrf	___fladd@a+3
 15885     02FE  2B07               	goto	l1332
 15886     02FF                     l5047:
 15887     02FF  3000               	movlw	0
 15888     0300  00B5               	movwf	___fladd@a+3
 15889     0301  3000               	movlw	0
 15890     0302  00B4               	movwf	___fladd@a+2
 15891     0303  3000               	movlw	0
 15892     0304  00B3               	movwf	___fladd@a+1
 15893     0305  3000               	movlw	0
 15894     0306  00B2               	movwf	___fladd@a
 15895     0307                     l1332:
 15896     0307  0840               	movf	___fladd@bexp,w
 15897     0308  023F               	subwf	___fladd@aexp,w
 15898     0309  1803               	skipnc
 15899     030A  2B0C               	goto	u4611
 15900     030B  2B0D               	goto	u4610
 15901     030C                     u4611:
 15902     030C  2B33               	goto	l5083
 15903     030D                     u4610:
 15904     030D                     l5049:
 15905     030D  1F3E               	btfss	___fladd@signs,6
 15906     030E  2B10               	goto	u4621
 15907     030F  2B11               	goto	u4620
 15908     0310                     u4621:
 15909     0310  2B15               	goto	l5053
 15910     0311                     u4620:
 15911     0311                     l5051:
 15912     0311  3080               	movlw	128
 15913     0312  00B6               	movwf	??___fladd
 15914     0313  0836               	movf	??___fladd,w
 15915     0314  06BE               	xorwf	___fladd@signs,f
 15916     0315                     l5053:
 15917     0315  0840               	movf	___fladd@bexp,w
 15918     0316  00C1               	movwf	___fladd@grs
 15919     0317                     l5055:
 15920     0317  083F               	movf	___fladd@aexp,w
 15921     0318  00C0               	movwf	___fladd@bexp
 15922     0319                     l5057:
 15923     0319  0841               	movf	___fladd@grs,w
 15924     031A  00BF               	movwf	___fladd@aexp
 15925     031B                     l5059:
 15926     031B  082E               	movf	___fladd@b,w
 15927     031C  00C1               	movwf	___fladd@grs
 15928     031D                     l5061:
 15929     031D  0832               	movf	___fladd@a,w
 15930     031E  00AE               	movwf	___fladd@b
 15931     031F                     l5063:
 15932     031F  0841               	movf	___fladd@grs,w
 15933     0320  00B2               	movwf	___fladd@a
 15934     0321                     l5065:
 15935     0321  082F               	movf	___fladd@b+1,w
 15936     0322  00C1               	movwf	___fladd@grs
 15937     0323                     l5067:
 15938     0323  0833               	movf	___fladd@a+1,w
 15939     0324  00AF               	movwf	___fladd@b+1
 15940     0325                     l5069:
 15941     0325  0841               	movf	___fladd@grs,w
 15942     0326  00B3               	movwf	___fladd@a+1
 15943     0327                     l5071:
 15944     0327  0830               	movf	___fladd@b+2,w
 15945     0328  00C1               	movwf	___fladd@grs
 15946     0329                     l5073:
 15947     0329  0834               	movf	___fladd@a+2,w
 15948     032A  00B0               	movwf	___fladd@b+2
 15949     032B                     l5075:
 15950     032B  0841               	movf	___fladd@grs,w
 15951     032C  00B4               	movwf	___fladd@a+2
 15952     032D                     l5077:
 15953     032D  0831               	movf	___fladd@b+3,w
 15954     032E  00C1               	movwf	___fladd@grs
 15955     032F                     l5079:
 15956     032F  0835               	movf	___fladd@a+3,w
 15957     0330  00B1               	movwf	___fladd@b+3
 15958     0331                     l5081:
 15959     0331  0841               	movf	___fladd@grs,w
 15960     0332  00B5               	movwf	___fladd@a+3
 15961     0333                     l5083:
 15962     0333  01C1               	clrf	___fladd@grs
 15963     0334                     l5085:
 15964     0334  083F               	movf	___fladd@aexp,w
 15965     0335  00B6               	movwf	??___fladd
 15966     0336  01B7               	clrf	??___fladd+1
 15967     0337  0837               	movf	??___fladd+1,w
 15968     0338  00B9               	movwf	??___fladd+3
 15969     0339  0840               	movf	___fladd@bexp,w
 15970     033A  0236               	subwf	??___fladd,w
 15971     033B  00B8               	movwf	??___fladd+2
 15972     033C  1C03               	skipc
 15973     033D  03B9               	decf	??___fladd+3,f
 15974     033E  0839               	movf	??___fladd+3,w
 15975     033F  3A80               	xorlw	128
 15976     0340  00BA               	movwf	??___fladd+4
 15977     0341  3080               	movlw	128
 15978     0342  023A               	subwf	??___fladd+4,w
 15979     0343  1D03               	skipz
 15980     0344  2B47               	goto	u4635
 15981     0345  301A               	movlw	26
 15982     0346  0238               	subwf	??___fladd+2,w
 15983     0347                     u4635:
 15984     0347  1C03               	skipc
 15985     0348  2B4A               	goto	u4631
 15986     0349  2B4B               	goto	u4630
 15987     034A                     u4631:
 15988     034A  2B7D               	goto	l5101
 15989     034B                     u4630:
 15990     034B                     l5087:
 15991     034B  0020               	movlb	0	; select bank0
 15992     034C  0831               	movf	___fladd@b+3,w
 15993     034D  0430               	iorwf	___fladd@b+2,w
 15994     034E  042F               	iorwf	___fladd@b+1,w
 15995     034F  042E               	iorwf	___fladd@b,w
 15996     0350  1D03               	skipz
 15997     0351  2B53               	goto	u4641
 15998     0352  2B55               	goto	u4640
 15999     0353                     u4641:
 16000     0353  3001               	movlw	1
 16001     0354  2B56               	goto	u4650
 16002     0355                     u4640:
 16003     0355  3000               	movlw	0
 16004     0356                     u4650:
 16005     0356  00C1               	movwf	___fladd@grs
 16006     0357  3000               	movlw	0
 16007     0358  00B1               	movwf	___fladd@b+3
 16008     0359  3000               	movlw	0
 16009     035A  00B0               	movwf	___fladd@b+2
 16010     035B  3000               	movlw	0
 16011     035C  00AF               	movwf	___fladd@b+1
 16012     035D  3000               	movlw	0
 16013     035E  00AE               	movwf	___fladd@b
 16014     035F  083F               	movf	___fladd@aexp,w
 16015     0360  00C0               	movwf	___fladd@bexp
 16016     0361  2B84               	goto	l1336
 16017     0362                     l1338:
 16018     0362  1C41               	btfss	___fladd@grs,0
 16019     0363  2B65               	goto	u4661
 16020     0364  2B66               	goto	u4660
 16021     0365                     u4661:
 16022     0365  2B6A               	goto	l5091
 16023     0366                     u4660:
 16024     0366                     l5089:
 16025     0366  3641               	lsrf	___fladd@grs,w
 16026     0367  3801               	iorlw	1
 16027     0368  00C1               	movwf	___fladd@grs
 16028     0369  2B6C               	goto	l5093
 16029     036A                     l5091:
 16030     036A  1003               	clrc
 16031     036B  0CC1               	rrf	___fladd@grs,f
 16032     036C                     l5093:
 16033     036C  1C2E               	btfss	___fladd@b,0
 16034     036D  2B6F               	goto	u4671
 16035     036E  2B70               	goto	u4670
 16036     036F                     u4671:
 16037     036F  2B71               	goto	l5097
 16038     0370                     u4670:
 16039     0370                     l5095:
 16040     0370  17C1               	bsf	___fladd@grs,7
 16041     0371                     l5097:
 16042     0371  3001               	movlw	1
 16043     0372  00B6               	movwf	??___fladd
 16044     0373                     u4685:
 16045     0373  37B1               	asrf	___fladd@b+3,f
 16046     0374  0CB0               	rrf	___fladd@b+2,f
 16047     0375  0CAF               	rrf	___fladd@b+1,f
 16048     0376  0CAE               	rrf	___fladd@b,f
 16049     0377  0BB6               	decfsz	??___fladd& (0+127),f
 16050     0378  2B73               	goto	u4685
 16051     0379                     l5099:
 16052     0379  3001               	movlw	1
 16053     037A  00B6               	movwf	??___fladd
 16054     037B  0836               	movf	??___fladd,w
 16055     037C  07C0               	addwf	___fladd@bexp,f
 16056     037D                     l5101:
 16057     037D  0020               	movlb	0	; select bank0
 16058     037E  083F               	movf	___fladd@aexp,w
 16059     037F  0240               	subwf	___fladd@bexp,w
 16060     0380  1C03               	skipc
 16061     0381  2B83               	goto	u4691
 16062     0382  2B84               	goto	u4690
 16063     0383                     u4691:
 16064     0383  2B62               	goto	l1338
 16065     0384                     u4690:
 16066     0384                     l1336:
 16067     0384  1B3E               	btfsc	___fladd@signs,6
 16068     0385  2B87               	goto	u4701
 16069     0386  2B88               	goto	u4700
 16070     0387                     u4701:
 16071     0387  2BBE               	goto	l5127
 16072     0388                     u4700:
 16073     0388                     l5103:
 16074     0388  0840               	movf	___fladd@bexp,w
 16075     0389  1D03               	btfss	3,2
 16076     038A  2B8C               	goto	u4711
 16077     038B  2B8D               	goto	u4710
 16078     038C                     u4711:
 16079     038C  2B96               	goto	l5109
 16080     038D                     u4710:
 16081     038D                     l5105:
 16082     038D  3000               	movlw	0
 16083     038E  00B1               	movwf	?___fladd+3
 16084     038F  3000               	movlw	0
 16085     0390  00B0               	movwf	?___fladd+2
 16086     0391  3000               	movlw	0
 16087     0392  00AF               	movwf	?___fladd+1
 16088     0393  3000               	movlw	0
 16089     0394  00AE               	movwf	?___fladd
 16090     0395  2CB8               	goto	l1345
 16091     0396                     l5109:
 16092     0396  0832               	movf	___fladd@a,w
 16093     0397  07AE               	addwf	___fladd@b,f
 16094     0398  0833               	movf	___fladd@a+1,w
 16095     0399  3DAF               	addwfc	___fladd@b+1,f
 16096     039A  0834               	movf	___fladd@a+2,w
 16097     039B  3DB0               	addwfc	___fladd@b+2,f
 16098     039C  0835               	movf	___fladd@a+3,w
 16099     039D  3DB1               	addwfc	___fladd@b+3,f
 16100     039E                     l5111:
 16101     039E  1C31               	btfss	___fladd@b+3,0
 16102     039F  2BA1               	goto	u4721
 16103     03A0  2BA2               	goto	u4720
 16104     03A1                     u4721:
 16105     03A1  2C4A               	goto	l5161
 16106     03A2                     u4720:
 16107     03A2                     l5113:
 16108     03A2  1C41               	btfss	___fladd@grs,0
 16109     03A3  2BA5               	goto	u4731
 16110     03A4  2BA6               	goto	u4730
 16111     03A5                     u4731:
 16112     03A5  2BAA               	goto	l5117
 16113     03A6                     u4730:
 16114     03A6                     l5115:
 16115     03A6  3641               	lsrf	___fladd@grs,w
 16116     03A7  3801               	iorlw	1
 16117     03A8  00C1               	movwf	___fladd@grs
 16118     03A9  2BAC               	goto	l5119
 16119     03AA                     l5117:
 16120     03AA  1003               	clrc
 16121     03AB  0CC1               	rrf	___fladd@grs,f
 16122     03AC                     l5119:
 16123     03AC  1C2E               	btfss	___fladd@b,0
 16124     03AD  2BAF               	goto	u4741
 16125     03AE  2BB0               	goto	u4740
 16126     03AF                     u4741:
 16127     03AF  2BB1               	goto	l5123
 16128     03B0                     u4740:
 16129     03B0                     l5121:
 16130     03B0  17C1               	bsf	___fladd@grs,7
 16131     03B1                     l5123:
 16132     03B1  3001               	movlw	1
 16133     03B2  00B6               	movwf	??___fladd
 16134     03B3                     u4755:
 16135     03B3  37B1               	asrf	___fladd@b+3,f
 16136     03B4  0CB0               	rrf	___fladd@b+2,f
 16137     03B5  0CAF               	rrf	___fladd@b+1,f
 16138     03B6  0CAE               	rrf	___fladd@b,f
 16139     03B7  0BB6               	decfsz	??___fladd& (0+127),f
 16140     03B8  2BB3               	goto	u4755
 16141     03B9                     l5125:
 16142     03B9  3001               	movlw	1
 16143     03BA  00B6               	movwf	??___fladd
 16144     03BB  0836               	movf	??___fladd,w
 16145     03BC  07C0               	addwf	___fladd@bexp,f
 16146     03BD  2C4A               	goto	l5161
 16147     03BE                     l5127:
 16148     03BE  0831               	movf	___fladd@b+3,w
 16149     03BF  3A80               	xorlw	128
 16150     03C0  00B6               	movwf	??___fladd
 16151     03C1  0835               	movf	___fladd@a+3,w
 16152     03C2  3A80               	xorlw	128
 16153     03C3  0236               	subwf	??___fladd,w
 16154     03C4  1D03               	skipz
 16155     03C5  2BD0               	goto	u4763
 16156     03C6  0834               	movf	___fladd@a+2,w
 16157     03C7  0230               	subwf	___fladd@b+2,w
 16158     03C8  1D03               	skipz
 16159     03C9  2BD0               	goto	u4763
 16160     03CA  0833               	movf	___fladd@a+1,w
 16161     03CB  022F               	subwf	___fladd@b+1,w
 16162     03CC  1D03               	skipz
 16163     03CD  2BD0               	goto	u4763
 16164     03CE  0832               	movf	___fladd@a,w
 16165     03CF  022E               	subwf	___fladd@b,w
 16166     03D0                     u4763:
 16167     03D0  1803               	skipnc
 16168     03D1  2BD3               	goto	u4761
 16169     03D2  2BD4               	goto	u4760
 16170     03D3                     u4761:
 16171     03D3  2C0C               	goto	l5137
 16172     03D4                     u4760:
 16173     03D4                     l5129:
 16174     03D4  30FF               	movlw	255
 16175     03D5  00B6               	movwf	??___fladd
 16176     03D6  30FF               	movlw	255
 16177     03D7  00B7               	movwf	??___fladd+1
 16178     03D8  30FF               	movlw	255
 16179     03D9  00B8               	movwf	??___fladd+2
 16180     03DA  30FF               	movlw	255
 16181     03DB  00B9               	movwf	??___fladd+3
 16182     03DC  082E               	movf	___fladd@b,w
 16183     03DD  0232               	subwf	___fladd@a,w
 16184     03DE  00BA               	movwf	??___fladd+4
 16185     03DF  082F               	movf	___fladd@b+1,w
 16186     03E0  3B33               	subwfb	___fladd@a+1,w
 16187     03E1  00BB               	movwf	??___fladd+5
 16188     03E2  0830               	movf	___fladd@b+2,w
 16189     03E3  3B34               	subwfb	___fladd@a+2,w
 16190     03E4  00BC               	movwf	??___fladd+6
 16191     03E5  0831               	movf	___fladd@b+3,w
 16192     03E6  3B35               	subwfb	___fladd@a+3,w
 16193     03E7  00BD               	movwf	??___fladd+7
 16194     03E8  083A               	movf	??___fladd+4,w
 16195     03E9  07B6               	addwf	??___fladd,f
 16196     03EA  083B               	movf	??___fladd+5,w
 16197     03EB  3DB7               	addwfc	??___fladd+1,f
 16198     03EC  083C               	movf	??___fladd+6,w
 16199     03ED  3DB8               	addwfc	??___fladd+2,f
 16200     03EE  083D               	movf	??___fladd+7,w
 16201     03EF  3DB9               	addwfc	??___fladd+3,f
 16202     03F0  0839               	movf	??___fladd+3,w
 16203     03F1  00B1               	movwf	___fladd@b+3
 16204     03F2  0838               	movf	??___fladd+2,w
 16205     03F3  00B0               	movwf	___fladd@b+2
 16206     03F4  0837               	movf	??___fladd+1,w
 16207     03F5  00AF               	movwf	___fladd@b+1
 16208     03F6  0836               	movf	??___fladd,w
 16209     03F7  00AE               	movwf	___fladd@b
 16210     03F8                     l5131:
 16211     03F8  3080               	movlw	128
 16212     03F9  00B6               	movwf	??___fladd
 16213     03FA  0836               	movf	??___fladd,w
 16214     03FB  06BE               	xorwf	___fladd@signs,f
 16215     03FC  09C1               	comf	___fladd@grs,f
 16216     03FD  0AC1               	incf	___fladd@grs,f
 16217     03FE                     l5133:
 16218     03FE  0841               	movf	___fladd@grs,w
 16219     03FF  1D03               	btfss	3,2
 16220     0400  2C02               	goto	u4771
 16221     0401  2C03               	goto	u4770
 16222     0402                     u4771:
 16223     0402  2C14               	goto	l1353
 16224     0403                     u4770:
 16225     0403                     l5135:
 16226     0403  3001               	movlw	1
 16227     0404  07AE               	addwf	___fladd@b,f
 16228     0405  3000               	movlw	0
 16229     0406  3DAF               	addwfc	___fladd@b+1,f
 16230     0407  3000               	movlw	0
 16231     0408  3DB0               	addwfc	___fladd@b+2,f
 16232     0409  3000               	movlw	0
 16233     040A  3DB1               	addwfc	___fladd@b+3,f
 16234     040B  2C14               	goto	l1353
 16235     040C                     l5137:
 16236     040C  0832               	movf	___fladd@a,w
 16237     040D  02AE               	subwf	___fladd@b,f
 16238     040E  0833               	movf	___fladd@a+1,w
 16239     040F  3BAF               	subwfb	___fladd@b+1,f
 16240     0410  0834               	movf	___fladd@a+2,w
 16241     0411  3BB0               	subwfb	___fladd@b+2,f
 16242     0412  0835               	movf	___fladd@a+3,w
 16243     0413  3BB1               	subwfb	___fladd@b+3,f
 16244     0414                     l1353:
 16245     0414  0831               	movf	___fladd@b+3,w
 16246     0415  0430               	iorwf	___fladd@b+2,w
 16247     0416  042F               	iorwf	___fladd@b+1,w
 16248     0417  042E               	iorwf	___fladd@b,w
 16249     0418  1D03               	skipz
 16250     0419  2C1B               	goto	u4781
 16251     041A  2C1C               	goto	u4780
 16252     041B                     u4781:
 16253     041B  2C46               	goto	l5159
 16254     041C                     u4780:
 16255     041C                     l5139:
 16256     041C  0841               	movf	___fladd@grs,w
 16257     041D  1D03               	btfss	3,2
 16258     041E  2C20               	goto	u4791
 16259     041F  2C21               	goto	u4790
 16260     0420                     u4791:
 16261     0420  2C46               	goto	l5159
 16262     0421                     u4790:
 16263     0421                     l5141:
 16264     0421  3000               	movlw	0
 16265     0422  00B1               	movwf	?___fladd+3
 16266     0423  3000               	movlw	0
 16267     0424  00B0               	movwf	?___fladd+2
 16268     0425  3000               	movlw	0
 16269     0426  00AF               	movwf	?___fladd+1
 16270     0427  3000               	movlw	0
 16271     0428  00AE               	movwf	?___fladd
 16272     0429  2CB8               	goto	l1345
 16273     042A                     l5145:
 16274     042A  3001               	movlw	1
 16275     042B                     u4805:
 16276     042B  35AE               	lslf	___fladd@b,f
 16277     042C  0DAF               	rlf	___fladd@b+1,f
 16278     042D  0DB0               	rlf	___fladd@b+2,f
 16279     042E  0DB1               	rlf	___fladd@b+3,f
 16280     042F  0B89               	decfsz	9,f
 16281     0430  2C2B               	goto	u4805
 16282     0431                     l5147:
 16283     0431  1FC1               	btfss	___fladd@grs,7
 16284     0432  2C34               	goto	u4811
 16285     0433  2C35               	goto	u4810
 16286     0434                     u4811:
 16287     0434  2C36               	goto	l1357
 16288     0435                     u4810:
 16289     0435                     l5149:
 16290     0435  142E               	bsf	___fladd@b,0
 16291     0436                     l1357:
 16292     0436  1C41               	btfss	___fladd@grs,0
 16293     0437  2C39               	goto	u4821
 16294     0438  2C3A               	goto	u4820
 16295     0439                     u4821:
 16296     0439  2C3D               	goto	l5153
 16297     043A                     u4820:
 16298     043A                     l5151:
 16299     043A  1403               	setc
 16300     043B  0DC1               	rlf	___fladd@grs,f
 16301     043C  2C3F               	goto	l5155
 16302     043D                     l5153:
 16303     043D  1003               	clrc
 16304     043E  0DC1               	rlf	___fladd@grs,f
 16305     043F                     l5155:
 16306     043F  0840               	movf	___fladd@bexp,w
 16307     0440  1903               	btfsc	3,2
 16308     0441  2C43               	goto	u4831
 16309     0442  2C44               	goto	u4830
 16310     0443                     u4831:
 16311     0443  2C46               	goto	l5159
 16312     0444                     u4830:
 16313     0444                     l5157:
 16314     0444  3001               	movlw	1
 16315     0445  02C0               	subwf	___fladd@bexp,f
 16316     0446                     l5159:
 16317     0446  1FB0               	btfss	___fladd@b+2,7
 16318     0447  2C49               	goto	u4841
 16319     0448  2C4A               	goto	u4840
 16320     0449                     u4841:
 16321     0449  2C2A               	goto	l5145
 16322     044A                     u4840:
 16323     044A                     l5161:
 16324     044A  01BF               	clrf	___fladd@aexp
 16325     044B                     l5163:
 16326     044B  1FC1               	btfss	___fladd@grs,7
 16327     044C  2C4E               	goto	u4851
 16328     044D  2C4F               	goto	u4850
 16329     044E                     u4851:
 16330     044E  2C5D               	goto	l5171
 16331     044F                     u4850:
 16332     044F                     l5165:
 16333     044F  0841               	movf	___fladd@grs,w
 16334     0450  397F               	andlw	127
 16335     0451  1903               	btfsc	3,2
 16336     0452  2C54               	goto	u4861
 16337     0453  2C55               	goto	u4860
 16338     0454                     u4861:
 16339     0454  2C58               	goto	l1363
 16340     0455                     u4860:
 16341     0455                     l5167:
 16342     0455  01BF               	clrf	___fladd@aexp
 16343     0456  0ABF               	incf	___fladd@aexp,f
 16344     0457  2C5D               	goto	l5171
 16345     0458                     l1363:
 16346     0458  1C2E               	btfss	___fladd@b,0
 16347     0459  2C5B               	goto	u4871
 16348     045A  2C5C               	goto	u4870
 16349     045B                     u4871:
 16350     045B  2C5D               	goto	l5171
 16351     045C                     u4870:
 16352     045C  2C55               	goto	l5167
 16353     045D                     l5171:
 16354     045D  083F               	movf	___fladd@aexp,w
 16355     045E  1903               	btfsc	3,2
 16356     045F  2C61               	goto	u4881
 16357     0460  2C62               	goto	u4880
 16358     0461                     u4881:
 16359     0461  2C8F               	goto	l1366
 16360     0462                     u4880:
 16361     0462                     l5173:
 16362     0462  3001               	movlw	1
 16363     0463  07AE               	addwf	___fladd@b,f
 16364     0464  3000               	movlw	0
 16365     0465  3DAF               	addwfc	___fladd@b+1,f
 16366     0466  3000               	movlw	0
 16367     0467  3DB0               	addwfc	___fladd@b+2,f
 16368     0468  3000               	movlw	0
 16369     0469  3DB1               	addwfc	___fladd@b+3,f
 16370     046A                     l5175:
 16371     046A  1C31               	btfss	___fladd@b+3,0
 16372     046B  2C6D               	goto	u4891
 16373     046C  2C6E               	goto	u4890
 16374     046D                     u4891:
 16375     046D  2C8F               	goto	l1366
 16376     046E                     u4890:
 16377     046E                     l5177:
 16378     046E  082E               	movf	___fladd@b,w
 16379     046F  00B6               	movwf	??___fladd
 16380     0470  082F               	movf	___fladd@b+1,w
 16381     0471  00B7               	movwf	??___fladd+1
 16382     0472  0830               	movf	___fladd@b+2,w
 16383     0473  00B8               	movwf	??___fladd+2
 16384     0474  0831               	movf	___fladd@b+3,w
 16385     0475  00B9               	movwf	??___fladd+3
 16386     0476  3001               	movlw	1
 16387     0477  00BA               	movwf	??___fladd+4
 16388     0478                     u4905:
 16389     0478  37B9               	asrf	??___fladd+3,f
 16390     0479  0CB8               	rrf	??___fladd+2,f
 16391     047A  0CB7               	rrf	??___fladd+1,f
 16392     047B  0CB6               	rrf	??___fladd,f
 16393     047C                     u4900:
 16394     047C  0BBA               	decfsz	??___fladd+4,f
 16395     047D  2C78               	goto	u4905
 16396     047E  0839               	movf	??___fladd+3,w
 16397     047F  00B1               	movwf	___fladd@b+3
 16398     0480  0838               	movf	??___fladd+2,w
 16399     0481  00B0               	movwf	___fladd@b+2
 16400     0482  0837               	movf	??___fladd+1,w
 16401     0483  00AF               	movwf	___fladd@b+1
 16402     0484  0836               	movf	??___fladd,w
 16403     0485  00AE               	movwf	___fladd@b
 16404     0486  0A40               	incf	___fladd@bexp,w
 16405     0487  1903               	btfsc	3,2
 16406     0488  2C8A               	goto	u4911
 16407     0489  2C8B               	goto	u4910
 16408     048A                     u4911:
 16409     048A  2C8F               	goto	l1366
 16410     048B                     u4910:
 16411     048B                     l5179:
 16412     048B  3001               	movlw	1
 16413     048C  00B6               	movwf	??___fladd
 16414     048D  0836               	movf	??___fladd,w
 16415     048E  07C0               	addwf	___fladd@bexp,f
 16416     048F                     l1366:
 16417     048F  0A40               	incf	___fladd@bexp,w
 16418     0490  1903               	btfsc	3,2
 16419     0491  2C93               	goto	u4921
 16420     0492  2C94               	goto	u4920
 16421     0493                     u4921:
 16422     0493  2C99               	goto	l5183
 16423     0494                     u4920:
 16424     0494                     l5181:
 16425     0494  0840               	movf	___fladd@bexp,w
 16426     0495  1D03               	btfss	3,2
 16427     0496  2C98               	goto	u4931
 16428     0497  2C99               	goto	u4930
 16429     0498                     u4931:
 16430     0498  2CA7               	goto	l5189
 16431     0499                     u4930:
 16432     0499                     l5183:
 16433     0499  3000               	movlw	0
 16434     049A  00B1               	movwf	___fladd@b+3
 16435     049B  3000               	movlw	0
 16436     049C  00B0               	movwf	___fladd@b+2
 16437     049D  3000               	movlw	0
 16438     049E  00AF               	movwf	___fladd@b+1
 16439     049F  3000               	movlw	0
 16440     04A0  00AE               	movwf	___fladd@b
 16441     04A1                     l5185:
 16442     04A1  0840               	movf	___fladd@bexp,w
 16443     04A2  1D03               	btfss	3,2
 16444     04A3  2CA5               	goto	u4941
 16445     04A4  2CA6               	goto	u4940
 16446     04A5                     u4941:
 16447     04A5  2CA7               	goto	l5189
 16448     04A6                     u4940:
 16449     04A6                     l5187:
 16450     04A6  01BE               	clrf	___fladd@signs
 16451     04A7                     l5189:
 16452     04A7  1C40               	btfss	___fladd@bexp,0
 16453     04A8  2CAA               	goto	u4951
 16454     04A9  2CAB               	goto	u4950
 16455     04AA                     u4951:
 16456     04AA  2CAD               	goto	l5193
 16457     04AB                     u4950:
 16458     04AB                     l5191:
 16459     04AB  17B0               	bsf	___fladd@b+2,7
 16460     04AC  2CB1               	goto	l1374
 16461     04AD                     l5193:
 16462     04AD  307F               	movlw	127
 16463     04AE  00B6               	movwf	??___fladd
 16464     04AF  0836               	movf	??___fladd,w
 16465     04B0  05B0               	andwf	___fladd@b+2,f
 16466     04B1                     l1374:
 16467     04B1  3640               	lsrf	___fladd@bexp,w
 16468     04B2  00B1               	movwf	___fladd@b+3
 16469     04B3                     l5195:
 16470     04B3  1FBE               	btfss	___fladd@signs,7
 16471     04B4  2CB6               	goto	u4961
 16472     04B5  2CB7               	goto	u4960
 16473     04B6                     u4961:
 16474     04B6  2CB8               	goto	l1375
 16475     04B7                     u4960:
 16476     04B7                     l5197:
 16477     04B7  17B1               	bsf	___fladd@b+3,7
 16478     04B8                     l1375:
 16479     04B8                     l1345:
 16480     04B8  0008               	return
 16481     04B9                     __end_of___fladd:
 16482                           
 16483                           	psect	text70
 16484     1639                     __ptext70:	
 16485 ;; *************** function _PWM5_LoadDutyValue *****************
 16486 ;; Defined at:
 16487 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 16488 ;; Parameters:    Size  Location     Type
 16489 ;;  dutyValue       2    4[COMMON] unsigned short 
 16490 ;; Auto vars:     Size  Location     Type
 16491 ;;		None
 16492 ;; Return value:  Size  Location     Type
 16493 ;;                  1    wreg      void 
 16494 ;; Registers used:
 16495 ;;		wreg, status,2, status,0
 16496 ;; Tracked objects:
 16497 ;;		On entry : 0/0
 16498 ;;		On exit  : 0/0
 16499 ;;		Unchanged: 0/0
 16500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16504 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16505 ;;Total ram usage:        4 bytes
 16506 ;; Hardware stack levels used: 1
 16507 ;; Hardware stack levels required when called: 4
 16508 ;; This function calls:
 16509 ;;		Nothing
 16510 ;; This function is called by:
 16511 ;;		_PI
 16512 ;; This function uses a non-reentrant model
 16513 ;;
 16514                           
 16515     1639                     _PWM5_LoadDutyValue:	
 16516                           ;psect for function _PWM5_LoadDutyValue
 16517                           
 16518     1639                     l5665:	
 16519                           ;incstack = 0
 16520                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 16521                           
 16522                           
 16523                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 16524     1639  0875               	movf	PWM5_LoadDutyValue@dutyValue+1,w
 16525     163A  0020               	movlb	0	; select bank0
 16526     163B  00A1               	movwf	??_PWM5_LoadDutyValue+1
 16527     163C  0874               	movf	PWM5_LoadDutyValue@dutyValue,w
 16528     163D  00A0               	movwf	??_PWM5_LoadDutyValue
 16529     163E  36A1               	lsrf	??_PWM5_LoadDutyValue+1,f
 16530     163F  0CA0               	rrf	??_PWM5_LoadDutyValue,f
 16531     1640  36A1               	lsrf	??_PWM5_LoadDutyValue+1,f
 16532     1641  0CA0               	rrf	??_PWM5_LoadDutyValue,f
 16533     1642  0820               	movf	??_PWM5_LoadDutyValue,w
 16534     1643  002C               	movlb	12	; select bank12
 16535     1644  0098               	movwf	24	;volatile
 16536                           
 16537                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 16538     1645  0874               	movf	PWM5_LoadDutyValue@dutyValue,w
 16539     1646  3903               	andlw	3
 16540     1647  0020               	movlb	0	; select bank0
 16541     1648  00A0               	movwf	??_PWM5_LoadDutyValue
 16542     1649  3005               	movlw	5
 16543     164A                     u5865:
 16544     164A  35A0               	lslf	??_PWM5_LoadDutyValue,f
 16545     164B  3EFF               	addlw	-1
 16546     164C  1D03               	skipz
 16547     164D  2E4A               	goto	u5865
 16548     164E  3520               	lslf	??_PWM5_LoadDutyValue,w
 16549     164F  002C               	movlb	12	; select bank12
 16550     1650  0097               	movwf	23	;volatile
 16551     1651                     l100:
 16552     1651  0008               	return
 16553     1652                     __end_of_PWM5_LoadDutyValue:
 16554                           
 16555                           	psect	intentry
 16556     0004                     __pintentry:	
 16557 ;; *************** function _INTERRUPT_InterruptManager *****************
 16558 ;; Defined at:
 16559 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;		None
 16562 ;; Auto vars:     Size  Location     Type
 16563 ;;		None
 16564 ;; Return value:  Size  Location     Type
 16565 ;;                  1    wreg      void 
 16566 ;; Registers used:
 16567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16568 ;; Tracked objects:
 16569 ;;		On entry : 0/0
 16570 ;;		On exit  : 0/0
 16571 ;;		Unchanged: 0/0
 16572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16577 ;;Total ram usage:        0 bytes
 16578 ;; Hardware stack levels used: 1
 16579 ;; Hardware stack levels required when called: 3
 16580 ;; This function calls:
 16581 ;;		NULL
 16582 ;;		_ADC_ISR
 16583 ;;		_EUSART_Receive_ISR
 16584 ;;		_EUSART_Transmit_ISR
 16585 ;; This function is called by:
 16586 ;;		Interrupt level 1
 16587 ;; This function uses a non-reentrant model
 16588 ;;
 16589                           
 16590     0004                     _INTERRUPT_InterruptManager:
 16591                           
 16592                           ;incstack = 0
 16593     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 16594                           
 16595                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16596     0005  3180               	pagesel	$
 16597     0006                     i1l4719:
 16598                           
 16599                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 16600     0006  1F0B               	btfss	11,6	;volatile
 16601     0007  2809               	goto	u425_21
 16602     0008  280A               	goto	u425_20
 16603     0009                     u425_21:
 16604     0009  283A               	goto	i1l429
 16605     000A                     u425_20:
 16606     000A                     i1l4721:
 16607                           
 16608                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 16609     000A  0021               	movlb	1	; select bank1
 16610     000B  1E91               	btfss	17,5	;volatile
 16611     000C  280E               	goto	u426_21
 16612     000D  280F               	goto	u426_20
 16613     000E                     u426_21:
 16614     000E  281B               	goto	i1l422
 16615     000F                     u426_20:
 16616     000F                     i1l4723:
 16617     000F  0020               	movlb	0	; select bank0
 16618     0010  1E91               	btfss	17,5	;volatile
 16619     0011  2813               	goto	u427_21
 16620     0012  2814               	goto	u427_20
 16621     0013                     u427_21:
 16622     0013  281B               	goto	i1l422
 16623     0014                     u427_20:
 16624     0014                     i1l4725:
 16625                           
 16626                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_RxDefaultInterruptHandler();
 16627     0014  0021               	movlb	1	; select bank1
 16628     0015  0843               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 16629     0016  008A               	movwf	10
 16630     0017  0842               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 16631     0018  000A               	callw
 16632     0019  3180               	pagesel	$
 16633                           
 16634                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 16635     001A  283A               	goto	i1l429
 16636     001B                     i1l422:	
 16637                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.ADIE == 1 && PIR1
      +                          bits.ADIF == 1)
 16638                           
 16639     001B  0021               	movlb	1	; select bank1
 16640     001C  1F11               	btfss	17,6	;volatile
 16641     001D  281F               	goto	u428_21
 16642     001E  2820               	goto	u428_20
 16643     001F                     u428_21:
 16644     001F  2829               	goto	i1l424
 16645     0020                     u428_20:
 16646     0020                     i1l4727:
 16647     0020  0020               	movlb	0	; select bank0
 16648     0021  1F11               	btfss	17,6	;volatile
 16649     0022  2824               	goto	u429_21
 16650     0023  2825               	goto	u429_20
 16651     0024                     u429_21:
 16652     0024  2829               	goto	i1l424
 16653     0025                     u429_20:
 16654     0025                     i1l4729:
 16655                           
 16656                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             ADC_ISR();
 16657     0025  3195  257C  3180   	fcall	_ADC_ISR
 16658                           
 16659                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 16660     0028  283A               	goto	i1l429
 16661     0029                     i1l424:	
 16662                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
 16663                           
 16664     0029  0021               	movlb	1	; select bank1
 16665     002A  1E11               	btfss	17,4	;volatile
 16666     002B  282D               	goto	u430_21
 16667     002C  282E               	goto	u430_20
 16668     002D                     u430_21:
 16669     002D  283A               	goto	i1l423
 16670     002E                     u430_20:
 16671     002E                     i1l4731:
 16672     002E  0020               	movlb	0	; select bank0
 16673     002F  1E11               	btfss	17,4	;volatile
 16674     0030  2832               	goto	u431_21
 16675     0031  2833               	goto	u431_20
 16676     0032                     u431_21:
 16677     0032  283A               	goto	i1l423
 16678     0033                     u431_20:
 16679     0033                     i1l4733:
 16680                           
 16681                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_TxDefaultInterruptHandler();
 16682     0033  0021               	movlb	1	; select bank1
 16683     0034  0845               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 16684     0035  008A               	movwf	10
 16685     0036  0844               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 16686     0037  000A               	callw
 16687     0038  3180               	pagesel	$
 16688                           
 16689                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 16690     0039  283A               	goto	i1l429
 16691     003A                     i1l423:
 16692     003A                     i1l429:	
 16693                           ;mcc_generated_files/interrupt_manager.c: 73:     }
 16694                           
 16695     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 16696     003B  0009               	retfie
 16697     003C                     __end_of_INTERRUPT_InterruptManager:
 16698                           
 16699                           	psect	text72
 16700     16F9                     __ptext72:	
 16701 ;; *************** function _EUSART_Transmit_ISR *****************
 16702 ;; Defined at:
 16703 ;;		line 202 in file "mcc_generated_files/eusart.c"
 16704 ;; Parameters:    Size  Location     Type
 16705 ;;		None
 16706 ;; Auto vars:     Size  Location     Type
 16707 ;;		None
 16708 ;; Return value:  Size  Location     Type
 16709 ;;                  1    wreg      void 
 16710 ;; Registers used:
 16711 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16712 ;; Tracked objects:
 16713 ;;		On entry : 0/0
 16714 ;;		On exit  : 0/0
 16715 ;;		Unchanged: 0/0
 16716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;Total ram usage:        1 bytes
 16722 ;; Hardware stack levels used: 1
 16723 ;; This function calls:
 16724 ;;		Nothing
 16725 ;; This function is called by:
 16726 ;;		_EUSART_Initialize
 16727 ;;		_INTERRUPT_InterruptManager
 16728 ;; This function uses a non-reentrant model
 16729 ;;
 16730                           
 16731     16F9                     _EUSART_Transmit_ISR:	
 16732                           ;psect for function _EUSART_Transmit_ISR
 16733                           
 16734     16F9                     i1l4449:	
 16735                           ;incstack = 0
 16736                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16737                           
 16738                           
 16739                           ;mcc_generated_files/eusart.c: 206:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 16740     16F9  3008               	movlw	8
 16741     16FA  0021               	movlb	1	; select bank1
 16742     16FB  0250               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 16743     16FC  1803               	skipnc
 16744     16FD  2EFF               	goto	u394_21
 16745     16FE  2F00               	goto	u394_20
 16746     16FF                     u394_21:
 16747     16FF  2F19               	goto	i1l366
 16748     1700                     u394_20:
 16749     1700                     i1l4451:
 16750                           
 16751                           ;mcc_generated_files/eusart.c: 207:     {;mcc_generated_files/eusart.c: 208:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 16752     1700  0851               	movf	_eusartTxTail^(0+128),w
 16753     1701  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 16754     1702  0086               	movwf	6
 16755     1703  3001               	movlw	1	; select bank2/3
 16756     1704  0087               	movwf	7
 16757     1705  0801               	movf	1,w
 16758     1706  0023               	movlb	3	; select bank3
 16759     1707  009A               	movwf	26	;volatile
 16760     1708                     i1l4453:
 16761     1708  3001               	movlw	1
 16762     1709  00F0               	movwf	??_EUSART_Transmit_ISR
 16763     170A  0870               	movf	??_EUSART_Transmit_ISR,w
 16764     170B  0021               	movlb	1	; select bank1
 16765     170C  07D1               	addwf	_eusartTxTail^(0+128),f	;volatile
 16766     170D                     i1l4455:
 16767                           
 16768                           ;mcc_generated_files/eusart.c: 209:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 16769     170D  3008               	movlw	8
 16770     170E  0251               	subwf	_eusartTxTail^(0+128),w	;volatile
 16771     170F  1C03               	skipc
 16772     1710  2F12               	goto	u395_21
 16773     1711  2F13               	goto	u395_20
 16774     1712                     u395_21:
 16775     1712  2F14               	goto	i1l4459
 16776     1713                     u395_20:
 16777     1713                     i1l4457:
 16778                           
 16779                           ;mcc_generated_files/eusart.c: 210:         {;mcc_generated_files/eusart.c: 211:        
      +                               eusartTxTail = 0;
 16780     1713  01D1               	clrf	_eusartTxTail^(0+128)	;volatile
 16781     1714                     i1l4459:
 16782                           
 16783                           ;mcc_generated_files/eusart.c: 213:         eusartTxBufferRemaining++;
 16784     1714  3001               	movlw	1
 16785     1715  00F0               	movwf	??_EUSART_Transmit_ISR
 16786     1716  0870               	movf	??_EUSART_Transmit_ISR,w
 16787     1717  07D0               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 16788                           
 16789                           ;mcc_generated_files/eusart.c: 214:     }
 16790     1718  2F1A               	goto	i1l369
 16791     1719                     i1l366:	
 16792                           ;mcc_generated_files/eusart.c: 215:     else
 16793                           
 16794                           
 16795                           ;mcc_generated_files/eusart.c: 216:     {;mcc_generated_files/eusart.c: 217:         PIE
      +                          1bits.TXIE = 0;
 16796     1719  1211               	bcf	17,4	;volatile
 16797     171A                     i1l369:
 16798     171A  0008               	return
 16799     171B                     __end_of_EUSART_Transmit_ISR:
 16800                           
 16801                           	psect	text73
 16802     178E                     __ptext73:	
 16803 ;; *************** function _EUSART_Receive_ISR *****************
 16804 ;; Defined at:
 16805 ;;		line 221 in file "mcc_generated_files/eusart.c"
 16806 ;; Parameters:    Size  Location     Type
 16807 ;;		None
 16808 ;; Auto vars:     Size  Location     Type
 16809 ;;		None
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      void 
 16812 ;; Registers used:
 16813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16814 ;; Tracked objects:
 16815 ;;		On entry : 0/0
 16816 ;;		On exit  : 0/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16823 ;;Total ram usage:        0 bytes
 16824 ;; Hardware stack levels used: 1
 16825 ;; Hardware stack levels required when called: 2
 16826 ;; This function calls:
 16827 ;;		NULL
 16828 ;;		_EUSART_DefaultErrorHandler
 16829 ;;		_EUSART_DefaultFramingErrorHandler
 16830 ;;		_EUSART_DefaultOverrunErrorHandler
 16831 ;;		_EUSART_RxDataHandler
 16832 ;; This function is called by:
 16833 ;;		_EUSART_Initialize
 16834 ;;		_INTERRUPT_InterruptManager
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838     178E                     _EUSART_Receive_ISR:	
 16839                           ;psect for function _EUSART_Receive_ISR
 16840                           
 16841     178E                     i1l4461:	
 16842                           ;incstack = 0
 16843                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16844                           
 16845                           
 16846                           ;mcc_generated_files/eusart.c: 224:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 16847     178E  0878               	movf	_eusartRxHead,w	;volatile
 16848     178F  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 16849     1790  0086               	movwf	6
 16850     1791  0187               	clrf	7
 16851     1792  0181               	clrf	1
 16852     1793                     i1l4463:
 16853                           
 16854                           ;mcc_generated_files/eusart.c: 226:     if(RC1STAbits.FERR){
 16855     1793  0023               	movlb	3	; select bank3
 16856     1794  1D1D               	btfss	29,2	;volatile
 16857     1795  2F97               	goto	u396_21
 16858     1796  2F98               	goto	u396_20
 16859     1797                     u396_21:
 16860     1797  2FA3               	goto	i1l4469
 16861     1798                     u396_20:
 16862     1798                     i1l4465:
 16863                           
 16864                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 16865     1798  0878               	movf	_eusartRxHead,w	;volatile
 16866     1799  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 16867     179A  0086               	movwf	6
 16868     179B  0187               	clrf	7
 16869     179C  1481               	bsf	1,1
 16870     179D                     i1l4467:
 16871                           
 16872                           ;mcc_generated_files/eusart.c: 228:         EUSART_FramingErrorHandler();
 16873     179D  0021               	movlb	1	; select bank1
 16874     179E  0841               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 16875     179F  008A               	movwf	10
 16876     17A0  0840               	movf	_EUSART_FramingErrorHandler^(0+128),w
 16877     17A1  000A               	callw
 16878     17A2  3197               	pagesel	$
 16879     17A3                     i1l4469:
 16880                           
 16881                           ;mcc_generated_files/eusart.c: 231:     if(RC1STAbits.OERR){
 16882     17A3  0023               	movlb	3	; select bank3
 16883     17A4  1C9D               	btfss	29,1	;volatile
 16884     17A5  2FA7               	goto	u397_21
 16885     17A6  2FA8               	goto	u397_20
 16886     17A7                     u397_21:
 16887     17A7  2FB3               	goto	i1l4475
 16888     17A8                     u397_20:
 16889     17A8                     i1l4471:
 16890                           
 16891                           ;mcc_generated_files/eusart.c: 232:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 16892     17A8  0878               	movf	_eusartRxHead,w	;volatile
 16893     17A9  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 16894     17AA  0086               	movwf	6
 16895     17AB  0187               	clrf	7
 16896     17AC  1501               	bsf	1,2
 16897     17AD                     i1l4473:
 16898                           
 16899                           ;mcc_generated_files/eusart.c: 233:         EUSART_OverrunErrorHandler();
 16900     17AD  0021               	movlb	1	; select bank1
 16901     17AE  083F               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 16902     17AF  008A               	movwf	10
 16903     17B0  083E               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 16904     17B1  000A               	callw
 16905     17B2  3197               	pagesel	$
 16906     17B3                     i1l4475:
 16907                           
 16908                           ;mcc_generated_files/eusart.c: 236:     if(eusartRxStatusBuffer[eusartRxHead].status){
 16909     17B3  0878               	movf	_eusartRxHead,w	;volatile
 16910     17B4  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 16911     17B5  0086               	movwf	6
 16912     17B6  0187               	clrf	7
 16913     17B7  0801               	movf	1,w
 16914     17B8  1903               	btfsc	3,2
 16915     17B9  2FBB               	goto	u398_21
 16916     17BA  2FBC               	goto	u398_20
 16917     17BB                     u398_21:
 16918     17BB  2FC3               	goto	i1l4479
 16919     17BC                     u398_20:
 16920     17BC                     i1l4477:
 16921                           
 16922                           ;mcc_generated_files/eusart.c: 237:         EUSART_ErrorHandler();
 16923     17BC  0021               	movlb	1	; select bank1
 16924     17BD  083D               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 16925     17BE  008A               	movwf	10
 16926     17BF  083C               	movf	_EUSART_ErrorHandler^(0+128),w
 16927     17C0  000A               	callw
 16928     17C1  3197               	pagesel	$
 16929                           
 16930                           ;mcc_generated_files/eusart.c: 238:     } else {
 16931     17C2  2FC6               	goto	i1l376
 16932     17C3                     i1l4479:
 16933                           
 16934                           ;mcc_generated_files/eusart.c: 239:         EUSART_RxDataHandler();
 16935     17C3  3196  2620  3197   	fcall	_EUSART_RxDataHandler
 16936     17C6                     i1l376:
 16937     17C6  0008               	return
 16938     17C7                     __end_of_EUSART_Receive_ISR:
 16939                           
 16940                           	psect	text74
 16941     145E                     __ptext74:	
 16942 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 16943 ;; Defined at:
 16944 ;;		line 257 in file "mcc_generated_files/eusart.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;		None
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      void 
 16951 ;; Registers used:
 16952 ;;		None
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16962 ;;Total ram usage:        0 bytes
 16963 ;; Hardware stack levels used: 1
 16964 ;; This function calls:
 16965 ;;		Nothing
 16966 ;; This function is called by:
 16967 ;;		_EUSART_Initialize
 16968 ;;		_EUSART_Receive_ISR
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972     145E                     _EUSART_DefaultOverrunErrorHandler:	
 16973                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 16974                           
 16975     145E                     i1l4221:	
 16976                           ;incstack = 0
 16977                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 16978                           
 16979                           
 16980                           ;mcc_generated_files/eusart.c: 260:     RC1STAbits.CREN = 0;
 16981     145E  0023               	movlb	3	; select bank3
 16982     145F  121D               	bcf	29,4	;volatile
 16983                           
 16984                           ;mcc_generated_files/eusart.c: 261:     RC1STAbits.CREN = 1;
 16985     1460  161D               	bsf	29,4	;volatile
 16986     1461                     i1l386:
 16987     1461  0008               	return
 16988     1462                     __end_of_EUSART_DefaultOverrunErrorHandler:
 16989                           
 16990                           	psect	text75
 16991     0003                     __ptext75:	
 16992 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 16993 ;; Defined at:
 16994 ;;		line 255 in file "mcc_generated_files/eusart.c"
 16995 ;; Parameters:    Size  Location     Type
 16996 ;;		None
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;		None
 16999 ;; Return value:  Size  Location     Type
 17000 ;;                  1    wreg      void 
 17001 ;; Registers used:
 17002 ;;		None
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17012 ;;Total ram usage:        0 bytes
 17013 ;; Hardware stack levels used: 1
 17014 ;; This function calls:
 17015 ;;		Nothing
 17016 ;; This function is called by:
 17017 ;;		_EUSART_Initialize
 17018 ;;		_EUSART_Receive_ISR
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022     0003                     _EUSART_DefaultFramingErrorHandler:	
 17023                           ;psect for function _EUSART_DefaultFramingErrorHandler
 17024                           
 17025     0003                     i1l383:	
 17026                           ;incstack = 0
 17027                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 17028                           
 17029     0003  0008               	return
 17030     0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 17031                           
 17032                           	psect	text76
 17033     145A                     __ptext76:	
 17034 ;; *************** function _EUSART_DefaultErrorHandler *****************
 17035 ;; Defined at:
 17036 ;;		line 265 in file "mcc_generated_files/eusart.c"
 17037 ;; Parameters:    Size  Location     Type
 17038 ;;		None
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;		None
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1    wreg      void 
 17043 ;; Registers used:
 17044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17054 ;;Total ram usage:        0 bytes
 17055 ;; Hardware stack levels used: 1
 17056 ;; Hardware stack levels required when called: 1
 17057 ;; This function calls:
 17058 ;;		_EUSART_RxDataHandler
 17059 ;; This function is called by:
 17060 ;;		_EUSART_Initialize
 17061 ;;		_EUSART_Receive_ISR
 17062 ;; This function uses a non-reentrant model
 17063 ;;
 17064                           
 17065     145A                     _EUSART_DefaultErrorHandler:	
 17066                           ;psect for function _EUSART_DefaultErrorHandler
 17067                           
 17068     145A                     i1l4223:	
 17069                           ;incstack = 0
 17070                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17071                           
 17072                           
 17073                           ;mcc_generated_files/eusart.c: 266:     EUSART_RxDataHandler();
 17074     145A  3196  2620  3194   	fcall	_EUSART_RxDataHandler
 17075     145D                     i1l389:
 17076     145D  0008               	return
 17077     145E                     __end_of_EUSART_DefaultErrorHandler:
 17078                           
 17079                           	psect	text77
 17080     1620                     __ptext77:	
 17081 ;; *************** function _EUSART_RxDataHandler *****************
 17082 ;; Defined at:
 17083 ;;		line 245 in file "mcc_generated_files/eusart.c"
 17084 ;; Parameters:    Size  Location     Type
 17085 ;;		None
 17086 ;; Auto vars:     Size  Location     Type
 17087 ;;		None
 17088 ;; Return value:  Size  Location     Type
 17089 ;;                  1    wreg      void 
 17090 ;; Registers used:
 17091 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17092 ;; Tracked objects:
 17093 ;;		On entry : 0/0
 17094 ;;		On exit  : 0/0
 17095 ;;		Unchanged: 0/0
 17096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17101 ;;Total ram usage:        1 bytes
 17102 ;; Hardware stack levels used: 1
 17103 ;; This function calls:
 17104 ;;		Nothing
 17105 ;; This function is called by:
 17106 ;;		_EUSART_Receive_ISR
 17107 ;;		_EUSART_DefaultErrorHandler
 17108 ;; This function uses a non-reentrant model
 17109 ;;
 17110                           
 17111     1620                     _EUSART_RxDataHandler:	
 17112                           ;psect for function _EUSART_RxDataHandler
 17113                           
 17114     1620                     i1l3627:	
 17115                           ;incstack = 0
 17116                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17117                           
 17118                           
 17119                           ;mcc_generated_files/eusart.c: 247:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 17120     1620  0878               	movf	_eusartRxHead,w
 17121     1621  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 17122     1622  0086               	movwf	6
 17123     1623  3001               	movlw	1	; select bank2/3
 17124     1624  0087               	movwf	7
 17125     1625  0023               	movlb	3	; select bank3
 17126     1626  0819               	movf	25,w	;volatile
 17127     1627  0081               	movwf	1
 17128     1628                     i1l3629:
 17129     1628  3001               	movlw	1
 17130     1629  00F0               	movwf	??_EUSART_RxDataHandler
 17131     162A  0870               	movf	??_EUSART_RxDataHandler,w
 17132     162B  07F8               	addwf	_eusartRxHead,f	;volatile
 17133     162C                     i1l3631:
 17134                           
 17135                           ;mcc_generated_files/eusart.c: 248:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 17136     162C  3008               	movlw	8
 17137     162D  0278               	subwf	_eusartRxHead,w	;volatile
 17138     162E  1C03               	skipc
 17139     162F  2E31               	goto	u291_21
 17140     1630  2E32               	goto	u291_20
 17141     1631                     u291_21:
 17142     1631  2E33               	goto	i1l3635
 17143     1632                     u291_20:
 17144     1632                     i1l3633:
 17145                           
 17146                           ;mcc_generated_files/eusart.c: 249:     {;mcc_generated_files/eusart.c: 250:         eus
      +                          artRxHead = 0;
 17147     1632  01F8               	clrf	_eusartRxHead	;volatile
 17148     1633                     i1l3635:
 17149                           
 17150                           ;mcc_generated_files/eusart.c: 252:     eusartRxCount++;
 17151     1633  3001               	movlw	1
 17152     1634  00F0               	movwf	??_EUSART_RxDataHandler
 17153     1635  0870               	movf	??_EUSART_RxDataHandler,w
 17154     1636  0021               	movlb	1	; select bank1
 17155     1637  07CF               	addwf	_eusartRxCount^(0+128),f	;volatile
 17156     1638                     i1l380:
 17157     1638  0008               	return
 17158     1639                     __end_of_EUSART_RxDataHandler:
 17159                           
 17160                           	psect	text78
 17161     157C                     __ptext78:	
 17162 ;; *************** function _ADC_ISR *****************
 17163 ;; Defined at:
 17164 ;;		line 148 in file "mcc_generated_files/adc.c"
 17165 ;; Parameters:    Size  Location     Type
 17166 ;;		None
 17167 ;; Auto vars:     Size  Location     Type
 17168 ;;		None
 17169 ;; Return value:  Size  Location     Type
 17170 ;;                  1    wreg      void 
 17171 ;; Registers used:
 17172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17173 ;; Tracked objects:
 17174 ;;		On entry : 0/0
 17175 ;;		On exit  : 0/0
 17176 ;;		Unchanged: 0/0
 17177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17182 ;;Total ram usage:        0 bytes
 17183 ;; Hardware stack levels used: 1
 17184 ;; Hardware stack levels required when called: 2
 17185 ;; This function calls:
 17186 ;;		NULL
 17187 ;;		_ADC_DefaultInterruptHandler
 17188 ;;		_adcConversionDoneHandler
 17189 ;; This function is called by:
 17190 ;;		_INTERRUPT_InterruptManager
 17191 ;; This function uses a non-reentrant model
 17192 ;;
 17193                           
 17194     157C                     _ADC_ISR:	
 17195                           ;psect for function _ADC_ISR
 17196                           
 17197     157C                     i1l4481:	
 17198                           ;incstack = 0
 17199                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17200                           
 17201                           
 17202                           ;mcc_generated_files/adc.c: 151:     PIR1bits.ADIF = 0;
 17203     157C  0020               	movlb	0	; select bank0
 17204     157D  1311               	bcf	17,6	;volatile
 17205     157E                     i1l4483:
 17206                           
 17207                           ;mcc_generated_files/adc.c: 153:  if(ADC_InterruptHandler)
 17208     157E  0021               	movlb	1	; select bank1
 17209     157F  083A               	movf	_ADC_InterruptHandler^(0+128),w
 17210     1580  043B               	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
 17211     1581  1903               	btfsc	3,2
 17212     1582  2D84               	goto	u399_21
 17213     1583  2D85               	goto	u399_20
 17214     1584                     u399_21:
 17215     1584  2D8A               	goto	i1l481
 17216     1585                     u399_20:
 17217     1585                     i1l4485:
 17218                           
 17219                           ;mcc_generated_files/adc.c: 154:     {;mcc_generated_files/adc.c: 155:         ADC_Inter
      +                          ruptHandler();
 17220     1585  083B               	movf	(_ADC_InterruptHandler+1)^(0+128),w
 17221     1586  008A               	movwf	10
 17222     1587  083A               	movf	_ADC_InterruptHandler^(0+128),w
 17223     1588  000A               	callw
 17224     1589  3195               	pagesel	$
 17225     158A                     i1l481:
 17226     158A  0008               	return
 17227     158B                     __end_of_ADC_ISR:
 17228                           
 17229                           	psect	text79
 17230     1453                     __ptext79:	
 17231 ;; *************** function _ADC_DefaultInterruptHandler *****************
 17232 ;; Defined at:
 17233 ;;		line 163 in file "mcc_generated_files/adc.c"
 17234 ;; Parameters:    Size  Location     Type
 17235 ;;		None
 17236 ;; Auto vars:     Size  Location     Type
 17237 ;;		None
 17238 ;; Return value:  Size  Location     Type
 17239 ;;                  1    wreg      void 
 17240 ;; Registers used:
 17241 ;;		None
 17242 ;; Tracked objects:
 17243 ;;		On entry : 0/0
 17244 ;;		On exit  : 0/0
 17245 ;;		Unchanged: 0/0
 17246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17251 ;;Total ram usage:        0 bytes
 17252 ;; Hardware stack levels used: 1
 17253 ;; This function calls:
 17254 ;;		Nothing
 17255 ;; This function is called by:
 17256 ;;		_ADC_Initialize
 17257 ;;		_ADC_ISR
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261     1453                     _ADC_DefaultInterruptHandler:	
 17262                           ;psect for function _ADC_DefaultInterruptHandler
 17263                           
 17264     1453                     i1l487:	
 17265                           ;incstack = 0
 17266                           ; Regs used in _ADC_DefaultInterruptHandler: []
 17267                           
 17268     1453  0008               	return
 17269     1454                     __end_of_ADC_DefaultInterruptHandler:
 17270                           
 17271                           	psect	text80
 17272     1761                     __ptext80:	
 17273 ;; *************** function _adcConversionDoneHandler *****************
 17274 ;; Defined at:
 17275 ;;		line 18 in file "adcMultiplexer.c"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;		None
 17278 ;; Auto vars:     Size  Location     Type
 17279 ;;		None
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  1    wreg      void 
 17282 ;; Registers used:
 17283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17293 ;;Total ram usage:        2 bytes
 17294 ;; Hardware stack levels used: 1
 17295 ;; Hardware stack levels required when called: 1
 17296 ;; This function calls:
 17297 ;;		_ADC_GetConversionResult
 17298 ;;		i1_ADC_SelectChannel
 17299 ;; This function is called by:
 17300 ;;		_initAdcMultiplexer
 17301 ;;		_ADC_ISR
 17302 ;; This function uses a non-reentrant model
 17303 ;;
 17304                           
 17305     1761                     _adcConversionDoneHandler:	
 17306                           ;psect for function _adcConversionDoneHandler
 17307                           
 17308     1761                     i1l4403:	
 17309                           ;incstack = 0
 17310                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17311                           
 17312                           
 17313                           ;adcMultiplexer.c: 19:     static adc_channel_t channel = Potentiometer;;adcMultiplexer.
      +                          c: 20:     switch (channel) {
 17314     1761  2F78               	goto	i1l4415
 17315     1762                     i1l4405:
 17316                           
 17317                           ;adcMultiplexer.c: 22:             potentiometer = ADC_GetConversionResult();
 17318     1762  3194  2476  3197   	fcall	_ADC_GetConversionResult
 17319     1765  0871               	movf	?_ADC_GetConversionResult+1,w
 17320     1766  0021               	movlb	1	; select bank1
 17321     1767  00B1               	movwf	(_potentiometer+1)^(0+128)	;volatile
 17322     1768  0870               	movf	?_ADC_GetConversionResult,w
 17323     1769  00B0               	movwf	_potentiometer^(0+128)	;volatile
 17324     176A                     i1l4407:
 17325                           
 17326                           ;adcMultiplexer.c: 23:             channel = Hoogtesensor;
 17327     176A  3012               	movlw	18
 17328     176B  00EC               	movwf	adcConversionDoneHandler@channel^(0+128)
 17329                           
 17330                           ;adcMultiplexer.c: 25:             break;
 17331     176C  2F89               	goto	i1l4417
 17332     176D                     i1l4409:
 17333                           
 17334                           ;adcMultiplexer.c: 27:             hoogteSensor = ADC_GetConversionResult();
 17335     176D  3194  2476  3197   	fcall	_ADC_GetConversionResult
 17336     1770  0871               	movf	?_ADC_GetConversionResult+1,w
 17337     1771  0021               	movlb	1	; select bank1
 17338     1772  00B3               	movwf	(_hoogteSensor+1)^(0+128)	;volatile
 17339     1773  0870               	movf	?_ADC_GetConversionResult,w
 17340     1774  00B2               	movwf	_hoogteSensor^(0+128)	;volatile
 17341     1775                     i1l4411:
 17342                           
 17343                           ;adcMultiplexer.c: 28:             channel=Potentiometer;
 17344     1775  3010               	movlw	16
 17345     1776  00EC               	movwf	adcConversionDoneHandler@channel^(0+128)
 17346                           
 17347                           ;adcMultiplexer.c: 30:             break;
 17348     1777  2F89               	goto	i1l4417
 17349     1778                     i1l4415:
 17350     1778  0021               	movlb	1	; select bank1
 17351     1779  086C               	movf	adcConversionDoneHandler@channel^(0+128),w
 17352     177A  00F2               	movwf	??_adcConversionDoneHandler
 17353     177B  01F3               	clrf	??_adcConversionDoneHandler+1
 17354                           
 17355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17356                           ; Switch size 1, requested type "simple"
 17357                           ; Number of cases is 1, Range of values is 0 to 0
 17358                           ; switch strategies available:
 17359                           ; Name         Instructions Cycles
 17360                           ; simple_byte            4     3 (average)
 17361                           ; direct_byte            8     6 (fixed)
 17362                           ; jumptable            260     6 (fixed)
 17363                           ;	Chosen strategy is simple_byte
 17364     177C  0873               	movf	??_adcConversionDoneHandler+1,w
 17365     177D  3A00               	xorlw	0	; case 0
 17366     177E  1903               	skipnz
 17367     177F  2F81               	goto	i1l6159
 17368     1780  2F89               	goto	i1l4417
 17369     1781                     i1l6159:
 17370                           
 17371                           ; Switch size 1, requested type "simple"
 17372                           ; Number of cases is 2, Range of values is 16 to 18
 17373                           ; switch strategies available:
 17374                           ; Name         Instructions Cycles
 17375                           ; simple_byte            7     4 (average)
 17376                           ; direct_byte           15     9 (fixed)
 17377                           ; jumptable            263     9 (fixed)
 17378                           ;	Chosen strategy is simple_byte
 17379     1781  0872               	movf	??_adcConversionDoneHandler,w
 17380     1782  3A10               	xorlw	16	; case 16
 17381     1783  1903               	skipnz
 17382     1784  2F62               	goto	i1l4405
 17383     1785  3A02               	xorlw	2	; case 18
 17384     1786  1903               	skipnz
 17385     1787  2F6D               	goto	i1l4409
 17386     1788  2F89               	goto	i1l4417
 17387     1789                     i1l4417:
 17388                           
 17389                           ;adcMultiplexer.c: 32:     ADC_SelectChannel(channel);
 17390     1789  086C               	movf	adcConversionDoneHandler@channel^(0+128),w
 17391     178A  3195  2555  3197   	fcall	i1_ADC_SelectChannel
 17392     178D                     i1l870:
 17393     178D  0008               	return
 17394     178E                     __end_of_adcConversionDoneHandler:
 17395                           
 17396                           	psect	text81
 17397     1555                     __ptext81:	
 17398 ;; *************** function i1_ADC_SelectChannel *****************
 17399 ;; Defined at:
 17400 ;;		line 93 in file "mcc_generated_files/adc.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;  channel         1    wreg     enum E6659
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;  channel         1    1[COMMON] enum E6659
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  1    wreg      void 
 17407 ;; Registers used:
 17408 ;;		wreg, status,2, status,0
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17418 ;;Total ram usage:        2 bytes
 17419 ;; Hardware stack levels used: 1
 17420 ;; This function calls:
 17421 ;;		Nothing
 17422 ;; This function is called by:
 17423 ;;		_adcConversionDoneHandler
 17424 ;; This function uses a non-reentrant model
 17425 ;;
 17426                           
 17427     1555                     i1_ADC_SelectChannel:	
 17428                           ;psect for function i1_ADC_SelectChannel
 17429                           
 17430                           
 17431                           ;incstack = 0
 17432                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 17433                           ;i1ADC_SelectChannel@channel stored from wreg
 17434     1555  00F1               	movwf	i1ADC_SelectChannel@channel
 17435     1556                     i1l4061:
 17436                           
 17437                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
 17438     1556  0871               	movf	i1ADC_SelectChannel@channel,w
 17439     1557  00F0               	movwf	??i1_ADC_SelectChannel
 17440     1558  0DF0               	rlf	??i1_ADC_SelectChannel,f
 17441     1559  0DF0               	rlf	??i1_ADC_SelectChannel,f
 17442     155A  0021               	movlb	1	; select bank1
 17443     155B  081D               	movf	29,w	;volatile
 17444     155C  0670               	xorwf	??i1_ADC_SelectChannel,w
 17445     155D  3903               	andlw	-253
 17446     155E  0670               	xorwf	??i1_ADC_SelectChannel,w
 17447     155F  009D               	movwf	29	;volatile
 17448     1560                     i1l4063:
 17449                           
 17450                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
 17451     1560  141D               	bsf	29,0	;volatile
 17452     1561                     i1l459:
 17453     1561  0008               	return
 17454     1562                     __end_ofi1_ADC_SelectChannel:
 17455                           
 17456                           	psect	text82
 17457     1476                     __ptext82:	
 17458 ;; *************** function _ADC_GetConversionResult *****************
 17459 ;; Defined at:
 17460 ;;		line 114 in file "mcc_generated_files/adc.c"
 17461 ;; Parameters:    Size  Location     Type
 17462 ;;		None
 17463 ;; Auto vars:     Size  Location     Type
 17464 ;;		None
 17465 ;; Return value:  Size  Location     Type
 17466 ;;                  2    0[COMMON] unsigned short 
 17467 ;; Registers used:
 17468 ;;		wreg
 17469 ;; Tracked objects:
 17470 ;;		On entry : 0/0
 17471 ;;		On exit  : 0/0
 17472 ;;		Unchanged: 0/0
 17473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17478 ;;Total ram usage:        2 bytes
 17479 ;; Hardware stack levels used: 1
 17480 ;; This function calls:
 17481 ;;		Nothing
 17482 ;; This function is called by:
 17483 ;;		_adcConversionDoneHandler
 17484 ;; This function uses a non-reentrant model
 17485 ;;
 17486                           
 17487     1476                     _ADC_GetConversionResult:	
 17488                           ;psect for function _ADC_GetConversionResult
 17489                           
 17490     1476                     i1l3639:	
 17491                           ;incstack = 0
 17492                           ; Regs used in _ADC_GetConversionResult: [wreg]
 17493                           
 17494                           
 17495                           ;mcc_generated_files/adc.c: 117:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17496     1476  0021               	movlb	1	; select bank1
 17497     1477  081C               	movf	28,w	;volatile
 17498     1478  00F1               	movwf	?_ADC_GetConversionResult+1
 17499     1479  081B               	movf	27,w	;volatile
 17500     147A  00F0               	movwf	?_ADC_GetConversionResult
 17501     147B                     i1l468:
 17502     147B  0008               	return
 17503     147C                     __end_of_ADC_GetConversionResult:
 17504     007E                     btemp	set	126	;btemp
 17505     007E                     int$flags	set	126
 17506     007E                     wtemp0	set	126
 17507                           
 17508                           	psect	config
 17509                           
 17510                           ;Config register CONFIG1 @ 0x8007
 17511                           ;	FEXTOSC External Oscillator mode Selection bits
 17512                           ;	FEXTOSC = OFF, Oscillator not enabled
 17513                           ;	Power-up default value for COSC bits
 17514                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 17515                           ;	Clock Out Enable bit
 17516                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 17517                           ;	Clock Switch Enable bit
 17518                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17519                           ;	Fail-Safe Clock Monitor Enable
 17520                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 17521     8007                     	org	32775
 17522     8007  3F8C               	dw	16268
 17523                           
 17524                           ;Config register CONFIG2 @ 0x8008
 17525                           ;	Master Clear Enable bit
 17526                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 17527                           ;	Power-up Timer Enable bit
 17528                           ;	PWRTE = OFF, PWRT disabled
 17529                           ;	Watchdog Timer Enable bits
 17530                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 17531                           ;	Low-power BOR enable bit
 17532                           ;	LPBOREN = OFF, ULPBOR disabled
 17533                           ;	Brown-out Reset Enable bits
 17534                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 17535                           ;	Brown-out Reset Voltage selection bit
 17536                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 17537                           ;	PPSLOCK bit One-Way Set Enable bit
 17538                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 17539                           ;	Stack Overflow/Underflow Reset Enable bit
 17540                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 17541                           ;	Debugger enable bit
 17542                           ;	DEBUG = OFF, Background debugger disabled
 17543     8008                     	org	32776
 17544     8008  3FF3               	dw	16371
 17545                           
 17546                           ;Config register CONFIG3 @ 0x8009
 17547                           ;	User NVM self-write protection bits
 17548                           ;	WRT = OFF, Write protection off
 17549                           ;	Low Voltage Programming Enable bit
 17550                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 17551     8009                     	org	32777
 17552     8009  3FFF               	dw	16383
 17553                           
 17554                           ;Config register CONFIG4 @ 0x800A
 17555                           ;	User NVM Program Memory Code Protection bit
 17556                           ;	CP = OFF, User NVM code protection disabled
 17557                           ;	Data NVM Memory Code Protection bit
 17558                           ;	CPD = OFF, Data NVM code protection disabled
 17559     800A                     	org	32778
 17560     800A  3FFF               	dw	16383

Data Sizes:
    Strings     147
    Constant    28
    Data        28
    BSS         133
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     18      80
    BANK2            80      0      63
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 16
		 -> buffer(BANK2[16]), 

    S33$4$0	PTR void  size(2) Largest target is 0

    S33$5$0	PTR void  size(2) Largest target is 0

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S1651$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1651$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[12]), STR_17(CODE[24]), STR_16(CODE[13]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[24]), STR_12(CODE[10]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[13]), STR_7(CODE[9]), 
		 -> STR_6(CODE[2]), STR_5(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[12]), STR_17(CODE[24]), STR_16(CODE[13]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[24]), STR_12(CODE[10]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[13]), STR_7(CODE[9]), 
		 -> STR_6(CODE[2]), STR_5(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1685$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[12]), STR_17(CODE[24]), STR_16(CODE[13]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[24]), STR_12(CODE[10]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[15]), STR_8(CODE[13]), STR_7(CODE[9]), 
		 -> STR_6(CODE[2]), STR_5(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    printStr@str	PTR unsigned char  size(1) Largest target is 20
		 -> printBuffer(BANK2[11]), line(BANK2[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    str2uint8@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK2[20]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcConversionDoneHandler(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcConversionDoneHandler(), ADC_DefaultInterruptHandler(), NULL(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S33$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 


Critical Paths under _main in COMMON

    _updateLedstripAnimation->_Send_LED_EndFrame
    _updateLedstripAnimation->_Send_LED_Frame
    _updateLedstripAnimation->_Send_LED_StartFrame
    _Send_LED_StartFrame->_SPI1_ExchangeByte
    _Send_LED_Frame->_SPI1_ExchangeByte
    _Send_LED_EndFrame->_SPI1_ExchangeByte
    _str2uint8->___bmul
    _readLine->_EUSART_Read
    _printLogs->_PI_GetDutycycle
    _printNewLine->_EUSART_Write
    _putch->_EUSART_Write
    _printUint32->_PI_GetDutycycle
    _printUint32->___llmod
    _printStr->_EUSART_Write
    _initLedStrip->_spi_master_open
    _MASTER0_open->_SPI1_Open
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _PI->_PWM5_LoadDutyValue
    _PI->_getHoogteSensor
    _PI->_getPotentiometer
    ___flmul->__Umul8_16
    ___fladd->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    _main->_PI
    _main->_uartHandler
    _updateLedstripAnimation->_Send_LED_Frame
    _str2uint8->___bmul
    _str2float->___flmul
    _readLine->_printf
    _PI_SetKp->_str2float
    _PI_SetKi->_str2float
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _printUint32->___lldiv
    ___flsub->___fladd
    _initLedStrip->_spi_master_open
    _MASTER0_open->_SPI1_Open
    _PI->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uartHandler
    _uartHandler->_PI_SetKi
    _uartHandler->_PI_SetKp
    _PI_SetKp->_str2float
    _PI_SetKi->_str2float
    _printLogs->_printFloat

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   72876
                                             79 BANK0      1     1      0
                                 _PI
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
            _TMR4_HasOverflowOccured
                    _TMR4_Initialize
                 _initAdcMultiplexer
                       _initLedStrip
                          _printLogs
                             _printf
                        _uartHandler
            _updateLedstripAnimation
 ---------------------------------------------------------------------------------
 (1) _updateLedstripAnimation                              3     3      0    3152
                                              3 BANK0      3     3      0
                  _Send_LED_EndFrame
                     _Send_LED_Frame
                _Send_LED_StartFrame
 ---------------------------------------------------------------------------------
 (2) _Send_LED_StartFrame                                  3     3      0     819
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _Send_LED_Frame                                       4     1      3    1415
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _Send_LED_EndFrame                                    3     3      0     819
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     0      1     751
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          5     5      0   35751
                                             78 BANK0      1     1      0
                                             14 BANK1      4     4      0
                           _PI_GetKi
                           _PI_GetKp
                     _PI_GetSetPoint
                           _PI_SetKi
                           _PI_SetKp
                     _PI_SetSetpoint
                         _printFloat
                       _printNewLine
                           _printStr
                        _printUint32
                             _printf
                           _readLine
                          _str2float
                          _str2uint8
 ---------------------------------------------------------------------------------
 (2) _str2uint8                                            6     6      0     562
                                              2 BANK0      6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _str2float                                           15    11      4   10765
                                             68 BANK0      5     1      4
                                              0 BANK1     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1863
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    3199
                                             29 BANK0      3     1      2
                        _EUSART_Read
                 _EUSART_is_rx_ready
                       _printNewLine
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PI_SetSetpoint                                       1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PI_SetKp                                             4     0      4      98
                                             10 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_SetKi                                             4     0      4      98
                                             10 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            4     4      0   20650
                                             10 BANK1      4     4      0
                    _PI_GetDutycycle
                           _PI_GetKi
                           _PI_GetKp
                 _PI_GetSensorHeight
                     _PI_GetSetPoint
                         _printFloat
                       _printNewLine
                        _printUint32
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printNewLine                                         0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _printFloat                                          10     6      4   15176
                                              0 BANK1     10     6      4
                           _PI_GetKi (ARG)
                           _PI_GetKp (ARG)
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _printUint32
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               5     3      2    3113
                                             26 BANK0      3     1      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    1778
                                             18 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           19    15      4    1326
                                             10 BANK0      8     4      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     870
                                              1 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              0 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _printUint32                                          7     2      5    2299
                                             13 BANK0      7     2      5
                    _PI_GetDutycycle (ARG)
                 _PI_GetSensorHeight (ARG)
                     _PI_GetSetPoint (ARG)
                            ___lldiv
                            ___llmod
                           _printStr
 ---------------------------------------------------------------------------------
 (3) _printStr                                             2     2      0     199
                                              0 BANK0      2     2      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3907
                                             34 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _PI_GetSetPoint                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PI_GetSensorHeight                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PI_GetKp                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _PI_GetKi                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _PI_GetDutycycle                                      2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedStrip                                         0     0      0     155
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (2) _spi_master_open                                      3     3      0     155
                                              5 COMMON     1     1      0
                                              3 BANK0      2     2      0
                       _MASTER0_open
 ---------------------------------------------------------------------------------
 (3) _MASTER0_open                                         0     0      0     124
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (4) _SPI1_Open                                            4     4      0     124
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0     196
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_HasOverflowOccured                              1     1      0      45
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2     174
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PI                                                   1     1      0    9150
                                             78 BANK0      1     1      0
                 _PWM5_LoadDutyValue
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogteSensor
                   _getPotentiometer
 ---------------------------------------------------------------------------------
 (2) _getPotentiometer                                     2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getHoogteSensor                                      2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             68 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3893
                                             42 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3662
                                             14 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     152
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                            _ADC_ISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (10) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             0     0      0      22
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (11) _adcConversionDoneHandler                            2     2      0      22
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (12) i1_ADC_SelectChannel                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PI
     _PWM5_LoadDutyValue
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _getHoogteSensor
     _getPotentiometer
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _WDT_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
   _TMR4_HasOverflowOccured
   _TMR4_Initialize
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedStrip
     _spi_master_open
       _MASTER0_open
         _SPI1_Open
   _printLogs
     _PI_GetDutycycle
     _PI_GetKi
     _PI_GetKp
     _PI_GetSensorHeight
     _PI_GetSetPoint
     _printFloat
       _PI_GetKi (ARG)
       _PI_GetKp (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
       _printUint32 (ARG)
         _PI_GetDutycycle (ARG)
         _PI_GetSensorHeight (ARG)
         _PI_GetSetPoint (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
         _printStr (ARG)
           _EUSART_Write
       _printf (ARG)
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _EUSART_Write
     _printNewLine
       _EUSART_Write
     _printUint32
     _printf
   _printf
   _uartHandler
     _PI_GetKi
     _PI_GetKp
     _PI_GetSetPoint
     _PI_SetKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _PI_SetKp
       _str2float (ARG)
     _PI_SetSetpoint
     _printFloat
     _printNewLine
     _printStr
     _printUint32
     _printf
     _readLine
       _EUSART_Read
       _EUSART_is_rx_ready
       _printNewLine
       _printf
     _str2float
     _str2uint8
       ___bmul
   _updateLedstripAnimation
     _Send_LED_EndFrame
       _SPI1_ExchangeByte
     _Send_LED_Frame
       _SPI1_ExchangeByte
     _Send_LED_StartFrame
       _SPI1_ExchangeByte

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     12      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3F       9       78.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     109      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     109      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Feb 21 11:25:10 2024

                              ?_PI_SetSetpoint 0070                  ?_EUSART_SetRxInterruptHandler 0074  
                            _SPI1_ExchangeByte 153D                                   ___fldiv@aexp 0039  
                                 ___fldiv@bexp 0038                             _SPI1_ExchangeBlock 0000  
                                 ___fldiv@sign 0031                                 ___bmul@product 0020  
              __end_of_TMR0_HasOverflowOccured 1467                                             l23 146B  
                                           l28 161F                                             l68 14E4  
                                           l86 1466                                             l97 1530  
                                           _PI 0E20                             ?_SPI1_ExchangeByte 0074  
                                           _ki 00E8                                             _kp 00E4  
                          __Umul8_16@word_mpld 0024                                            ?_PI 0070  
                                          l100 1651                                            l113 14C8  
                                          l401 149F                                            l251 1524  
                                          l404 1499                                            l332 0860  
                                          l245 173C                                            l254 07FF  
                                          l191 17FF                                            l351 0823  
                                          l248 1520                                            l520 0A8D  
                                          l360 07FB                                            l257 14C0  
                                          l338 14DA                                            l363 14B8  
                                          l516 15F2                                            l356 07DC  
                                          l613 1456                                            l357 07E4  
                                          l622 14A5                                            l702 0FA4  
                                          l526 1540                                            l631 14F8  
                                          l711 0FFF                                            l640 0F07  
                                          l456 15DE                                            l392 148D  
                                          l616 1475                                            l528 1545  
                                          l625 1502                                            l529 1548  
                                          l801 16BA                                            l634 15BB  
                                          l730 0D4C                                            l395 1493  
                                          l459 157B                                            l619 1459  
                                          l723 0B4E                                            l484 1481  
                                          l804 1470                                            l628 15CC  
                                          l637 0EF9                                            l717 166B  
                                          l821 0D5C                                            l398 1487  
                                          l726 0BED                                            l680 09D3  
                                          l569 14EE                                            l673 14D1  
                                          l745 0763                                            l851 0E1F  
                                          l588 156E                                            l829 0D89  
                                          l678 097C                                            l694 08A0  
                                          l791 1685                                            l873 153C  
                                          l876 150D                                            l796 169F  
                                          l879 1518                                            _PR2 001E  
                                          _PR4 0416                         ??_EUSART_RxDataHandler 0070  
                              __end_of_ADC_ISR 158B                 ?_EUSART_SetFramingErrorHandler 0074  
              __end_of_ADC_SetInterruptHandler 1482                            ??_SPI1_ExchangeByte 0075  
                              _TMR2_Initialize 14C1                                            wreg 0009  
                              _getHoogteSensor 1503                                   ___flmul@aexp 0058  
                                 ___flmul@bexp 005D                   ?_ADC_DefaultInterruptHandler 0070  
                                 ___flmul@sign 0057                                   ___flmul@temp 0062  
                                 ___flmul@prod 005E                                           ??_PI 006E  
                          i1_ADC_SelectChannel 1555                                   printUint32@i 0033  
                                 ?_EUSART_Read 0070                                  ?_MASTER0_open 0070  
                                 ___fltol@exp1 006D                               ??_PI_GetSetPoint 0074  
                                         l1232 07BF                                           l1225 07D4  
                                         l1057 1608                                           l1410 064E  
                                         l1235 07D4                                           l1067 0A2E  
                                         l1332 0307                                           l1412 065B  
                                         l1404 05E8                                           l1261 0930  
                                         l1336 0384                                           l1440 02A4  
                                         l1520 097B                                           l1353 0414  
                                         l1345 04B8                                           l1409 0634  
                                         l1338 0362                                           l1434 0230  
                                         l1363 0458                                           l1428 02B0  
                                         l1357 0436                                           l4101 14C4  
                                         l1374 04B1                                           l1366 048F  
                                         l1526 16D8                                           l1390 0662  
                                         l1375 04B8                                           l1447 1750  
                                         l4111 17CE                                           l4103 14C5  
                                         l1472 0C11                                           l1449 1760  
                                         l4201 083D                                           l4121 17E1  
                                         l4113 17D0                                           l4105 14C6  
                                         l5001 0A26                                           l1474 0C98  
                                         l1378 16F8                                           l1538 0AEC  
                                         l5011 02BB                                           l4211 0856  
                                         l4203 083F                                           l4131 17ED  
                                         l4123 17E4                                           l4115 17D2  
                                         l4107 17C7                                           l1388 050A  
                                         l5101 037D                                           l5021 02CF  
                                         l5013 02BC                                           l5005 02B1  
                                         l1485 0C64                                           l4213 0858  
                                         l4205 0841                                           l4141 17F9  
                                         l4133 17EF                                           l4125 17E6  
                                         l4117 17D5                                           l4109 17CB  
                                         l1486 0C70                                           l1478 0C4A  
                                         l1494 159A                                           l5111 039E  
                                         l5103 0388                                           l5031 02E3  
                                         l5015 02C1                                           l5023 02D1  
                                         l5007 02B5                                           l4215 0859  
                                         l4207 0848                                           l4143 17FB  
                                         l4135 17F2                                           l4127 17E8  
                                         l4119 17D7                                           l4151 15E3  
                                         l3351 08EF                                           l5121 03B0  
                                         l5113 03A2                                           l5105 038D  
                                         l5041 02F4                                           l5033 02E5  
                                         l5025 02D9                                           l5017 02C6  
                                         l5009 02B7                                           l5201 1741  
                                         l4217 085A                                           l4209 084F  
                                         l4137 17F4                                           l4129 17EB  
                                         l4145 14B9                                           l4161 15F0  
                                         l4153 15E6                                           l4225 1570  
                                         l3361 091B                                           l3353 08F2  
                                         l4233 1472                                           l3601 14D2  
                                         l5131 03F8                                           l5123 03B1  
                                         l5115 03A6                                           l5051 0311  
                                         l5043 02FC                                           l5035 02E9  
                                         l5027 02DC                                           l5019 02CE  
                                         l5203 1748                                           l4171 15CD  
                                         l4219 085F                                           l4163 1519  
                                         l4139 17F7                                           l4155 15E8  
                                         l4147 15DF                                           l4091 14E2  
                                         l4227 157A                                           l4235 1457  
                                         l3363 0922                                           l3355 08FD  
                                         l4243 14F9                                           l3611 0813  
                                         l6011 08AC                                           l6003 08A1  
                                         l5141 0421                                           l5133 03FE  
                                         l5125 03B9                                           l5117 03AA  
                                         l5109 0396                                           l5061 031D  
                                         l5053 0315                                           l5045 02FD  
                                         l5037 02EA                                           l5029 02E2  
                                         l5205 174C                                           l5301 079F  
                                         l4173 15D2                                           l4165 151D  
                                         l4093 1525                                           l4157 15EC  
                                         l4149 15E2                                           l4085 14DB  
                                         l4181 14E5                                           l4229 1454  
                                         l3357 0901                                           l3365 0928  
                                         l3349 08E6                                           l5213 16BB  
                                         l3621 0821                                           l3613 0817  
                                         l3605 0800                                           l6021 08D0  
                                         l6013 08B4                                           l6005 08A4  
                                         l5151 043A                                           l5135 0403  
                                         l5119 03AC                                           l5127 03BE  
                                         l5071 0327                                           l5063 031F  
                                         l5055 0317                                           l5039 02EF  
                                         l5047 02FF                                           l5207 1757  
                                         l5311 07C4                                           l5303 07AF  
                                         l4255 1503                                           l4175 15D3  
                                         l4191 0826                                           l4167 151F  
                                         l4095 152C                                           l4159 15EE  
                                         l4087 14E0                                           l4183 14E8  
                                         l4431 1721                                           l4423 1462  
                                         l5223 1467                                           l4239 14A0  
                                         l3359 0913                                           l5215 16C1  
                                         l3623 0822                                           l3615 081D  
                                         l3607 0800                                           l6023 08D3  
                                         l6015 08B7                                           l6007 08A5  
                                         l5153 043D                                           l5145 042A  
                                         l5129 03D4                                           l5137 040C  
                                         l5161 044A                                           l5081 0331  
                                         l5073 0329                                           l5065 0321  
                                         l5057 0319                                           l5049 030D  
                                         l5209 175C                                           l5313 07C9  
                                         l4177 15D6                                           l4193 082D  
                                         l4089 14E1                                           l4185 14E9  
                                         l4169 07FC                                           l4441 1730  
                                         l4433 1724                                           l5241 0AED  
                                         l5217 16CC                                           l5233 14C9  
                                         l4249 14EF                                           l3617 081E  
                                         l3609 0806                                           l5401 059D  
                                         l5321 04B9                                           l6017 08BF  
                                         l6025 08D5                                           l6009 08A9  
                                         l5171 045D                                           l5163 044B  
                                         l5155 043F                                           l5147 0431  
                                         l5139 041C                                           l5091 036A  
                                         l5075 032B                                           l5067 0323  
                                         l5059 031B                                           l5083 0333  
                                         l4259 150E                                           l4179 15D7  
                                         l4195 0836                                           l4099 14C1  
                                         l4187 14EB                                           l4443 1733  
                                         l4435 1727                                           l4427 171B  
                                         l5315 16D9                                           l5251 0B2B  
                                         l5219 16D6                                           l5235 158B  
                                         l3619 081F                                           l5411 05B8  
                                         l5403 05A1                                           l5331 04C9  
                                         l5323 04BD                                           l5227 153D  
                                         l6027 08DD                                           l6019 08C5  
                                         l5181 0494                                           l5173 0462  
                                         l5165 044F                                           l5157 0444  
                                         l5149 0435                                           l5093 036C  
                                         l5085 0334                                           l5077 032D  
                                         l5069 0325                                           l5501 00CF  
                                         l5309 07B6                                           l3637 147C  
                                         l4197 0839                                           l4189 0824  
                                         l4445 1736                                           l4437 172A  
                                         l4429 171E                                           l5317 16DC  
                                         l5261 0B44                                           l5253 0B33  
                                         l5237 158E                                           l5421 05CC  
                                         l5413 05BC                                           l5405 05A7  
                                         l5341 04E1                                           l5333 04CE  
                                         l5325 04BF                                           l5229 1546  
                                         l6029 08E0                                           l5191 04AB  
                                         l5183 0499                                           l5175 046A  
                                         l5167 0455                                           l5159 0446  
                                         l5095 0370                                           l5087 034B  
                                         l5079 032F                                           l5511 0108  
                                         l3591 1494                                           l4199 083B  
                                         l4447 1739                                           l4439 172D  
                                         l5263 0B46                                           l5247 0AF0  
                                         l5431 05ED                                           l5423 05CD  
                                         l5415 05BD                                           l5407 05AF  
                                         l5351 04F2                                           l5343 04E6  
                                         l5335 04D6                                           l5327 04C3  
                                         l5271 15FE                                           l6151 0D74  
                                         l5193 04AD                                           l5185 04A1  
                                         l5177 046E                                           l5097 0371  
                                         l5089 0366                                           l5521 014E  
                                         l5513 0115                                           l5505 00D8  
                                         l5281 076E                                           l5601 0BF0  
                                         l3593 149A                                           l5257 0B3A  
                                         l5249 0B0F                                           l5433 05F2  
                                         l5441 061A                                           l5425 05D1  
                                         l5417 05C4                                           l5409 05B1  
                                         l5361 0512                                           l5353 04F7  
                                         l5345 04E8                                           l5337 04D7  
                                         l5329 04C4                                           l5273 1600  
                                         l5265 15F5                                           l6153 0DD9  
                                         l5195 04B3                                           l5187 04A6  
                                         l5179 048B                                           l5099 0379  
                                         l5531 0184                                           l5523 0159  
                                         l5515 012D                                           l5507 00E3  
                                         l5291 0791                                           l5603 0BF5  
                                         l3595 1488                                           l4491 156C  
                                         l5259 0B3E                                           l5451 0651  
                                         l5443 0627                                           l5435 05FA  
                                         l5427 05E5                                           l5419 05C8  
                                         l5371 0530                                           l5363 051E  
                                         l5355 04FF                                           l5347 04EC  
                                         l5339 04D9                                           l5275 1607  
                                         l5267 15F6                                           l6155 0746  
                                         l5197 04B7                                           l5189 04A7  
                                         l5541 01CF                                           l5533 018B  
                                         l5525 0160                                           l5517 013A  
                                         l5509 00F0                                           l5461 0076  
                                         l5293 0793                                           l5285 0777  
                                         l5621 0C3B                                           l5613 0C22  
                                         l5605 0BF9                                           l3597 148E  
                                         l4493 156D                                           l6157 161A  
                                         l4901 07D6                                           l5453 0655  
                                         l5445 0642                                           l5437 05FE  
                                         l5381 0559                                           l5365 0522  
                                         l5357 0500                                           l5349 04ED  
                                         l5269 15FA                                           l5199 173F  
                                         l5551 0204                                           l5543 01E6  
                                         l5535 019D                                           l5527 016B  
                                         l5519 0147                                           l5471 0086  
                                         l5463 007A                                           l5295 0797  
                                         l5287 0788                                           l5279 0764  
                                         l5631 0C68                                           l5623 0C43  
                                         l5615 0C25                                           l5607 0C09  
                                         l3599 1482                                           l4487 1562  
                                         l4911 07F6                                           l4903 07E0  
                                         l5703 09AF                                           l5455 0657  
                                         l5447 0645                                           l5439 0616  
                                         l5391 057A                                           l5383 0561  
                                         l5375 0539                                           l5359 0502  
                                         l5561 0215                                           l5553 0205  
                                         l5545 01ED                                           l5537 01A8  
                                         l5529 0172                                           l5481 00A2  
                                         l5473 008B                                           l5465 007C  
                                         l5289 0789                                           l5641 0C90  
                                         l5633 0C72                                           l5625 0C51  
                                         l5617 0C30                                           l5609 0C19  
                                         l4489 1567                                           l4569 1531  
                                         l4913 07F7                                           l4905 07E5  
                                         l4921 0A95                                           l5705 09BB  
                                         l5449 064D                                           l5393 057B  
                                         l5385 0563                                           l5377 0549  
                                         l5369 052B                                           l5801 1692  
                                         l5571 023A                                           l5563 0219  
                                         l5555 020C                                           l5547 01F9  
                                         l5539 01BA                                           l5491 00B3  
                                         l5483 00A4                                           l5475 0093  
                                         l5467 0080                                           l5635 0C86  
                                         l5627 0C5A                                           l5619 0C37  
                                         l5651 160F                                           l4907 07EC  
                                         l4915 07F9                                           l4931 0AE2  
                                         l4923 0A9B                                           l5707 09C6  
                                         l5715 09CE                                           l5387 0568  
                                         l5395 0582                                           l5379 0551  
                                         l5731 087D                                           l5723 0866  
                                         l5811 16A8                                           l5803 16A0  
                                         l5581 026F                                           l5573 0242  
                                         l5565 022D                                           l5549 0200  
                                         l5557 0210                                           l5493 00BB  
                                         l5485 00A8                                           l5477 0095  
                                         l5469 0081                                           l5637 0C8B  
                                         l5629 0C5E                                           l5821 0E6C  
                                         l5645 160A                                           l4909 07F0  
                                         l4917 14B4                                           l4925 0AA0  
                                         l4941 0953                                           l5709 09CC  
                                         l5397 0594                                           l5389 0576  
                                         l5733 0885                                           l5725 086D  
                                         l5717 0863                                           l5813 16AD  
                                         l5591 029D                                           l5583 0279  
                                         l5575 0246                                           l5559 0214  
                                         l5495 00BD                                           l5487 00A9  
                                         l5479 009D                                           l5639 0C8F  
                                         l5823 0EE4                                           l5815 0E20  
                                         l5647 160B                                           l5671 15AB  
                                         l4927 0AAB                                           l4919 0A8E  
                                         l4943 0957                                           l4935 0931  
                                         l5831 0C99                                           l5399 0595  
                                         l5751 0F19                                           l5735 088B  
                                         l5727 0871                                           l5911 0D92  
                                         l5903 0D6A                                           l5665 1639  
                                         l5593 02A1                                           l5585 0287  
                                         l5577 025E                                           l5569 0235  
                                         l5497 00C5                                           l5489 00AE  
                                         l5825 0EF3                                           l5817 0E2A  
                                         l4961 0A6C                                           l4953 0A30  
                                         l5657 1611                                           l4929 0ACB  
                                         l4937 0943                                           l5841 0CEF  
                                         l5833 0C9F                                           l5761 0F98  
                                         l5753 0F1F                                           l5745 0F0A  
                                         l5729 0877                                           l5809 16A3  
                                         l5921 0DA8                                           l5913 0D95  
                                         l5905 0D7C                                           l5595 02A2  
                                         l5587 0290                                           l5579 0262  
                                         l5499 00CA                                           l5827 0EFE  
                                         l5819 0E30                                           l4963 0A88  
                                         l4955 0A35                                           l5667 15BC  
                                         l4939 094B                                           l4947 0961  
                                         l5843 0D49                                           l5835 0CA7  
                                         l5691 099F                                           l5683 098D  
                                         l5675 097C                                           l5771 0FD7  
                                         l5763 0F9E                                           l5755 0F25  
                                         l5747 0F12                                           l5739 088E  
                                         l5851 067A                                           l5931 0DC1  
                                         l5923 0DAE                                           l5915 0D98  
                                         l5907 0D82                                           l5597 02A8  
                                         l5589 0292                                           l5829 0F00  
                                         l4965 0A8A                                           l4957 0A59  
                                         l4981 09D4                                           l4973 1654  
                                         l5781 0B4F                                           l5837 0CC3  
                                         l5693 09A7                                           l5677 0984  
                                         l5773 0FDB                                           l5765 0FA6  
                                         l5757 0F2B                                           l5749 0F13  
                                         l5861 06C2                                           l5853 0695  
                                         l5845 0663                                           l5933 0DC4  
                                         l5925 0DB1                                           l5917 0D9E  
                                         l5909 0D8C                                           l5941 0DCF  
                                         l4959 0A5A                                           l4991 09FE  
                                         l4983 09E5                                           l4975 1655  
                                         l5783 0BC3                                           l5839 0CE7  
                                         l5695 09AA                                           l5687 0994  
                                         l5679 098A                                           l5775 0FE0  
                                         l5767 0FA8                                           l5759 0F91  
                                         l5871 071F                                           l5863 06DC  
                                         l5855 0698                                           l5847 0669  
                                         l5791 1686                                           l5951 0DF2  
                                         l5935 0DCA                                           l5927 0DB4  
                                         l5919 0DA5                                           l5943 0DED  
                                         l4969 0A8C                                           l4993 0A10  
                                         l4985 09E8                                           l4977 165D  
                                         l5785 0BD0                                           l5697 09AB  
                                         l5689 0997                                           l5777 0FEF  
                                         l5769 0FAB                                           l5873 0727  
                                         l5865 06F5                                           l5857 06A1  
                                         l5849 0672                                           l5961 0E1C  
                                         l5953 0DF9                                           l5945 0DF0  
                                         l5937 0DCD                                           l5929 0DBA  
                                         l4995 0A18                                           l4987 09F3  
                                         l4899 07D6                                           l4979 1662  
                                         l5787 0BD8                                           l5699 09AD  
                                         l5875 072B                                           l5867 06FD  
                                         l5859 06BA                                           l5955 0E09  
                                         l5891 0D4E                                           l4997 0A19  
                                         l4989 09F7                                           l5877 0733  
                                         l5869 0717                                           l5789 166D  
                                         l5797 1689                                           l5957 0E11  
                                         l5893 0D55                                           l5887 146C  
                                         l4999 0A20                                           l5879 0739  
                                         l5799 168D                                           l5959 0E16  
                                         l5895 0D5F                                           l5897 0D65  
                                         l5889 0D4D                                           l5899 0D68  
                                         STR_1 18A0                                           STR_5 1820  
                                         STR_6 18AD                                           STR_7 1889  
                             ??_Send_LED_Frame 0075                                           STR_8 1859  
                                         STR_9 184A                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u4000 156C                                           u4001 156B  
                                         u2340 08EF                                           u2341 08EE  
                                         u2360 0901                                           u5000 16D6  
                                         u2361 0900                                           u5001 16D5  
                                         u2370 0913                                           u5010 1545  
                                         u2371 0912                                           u2355 08F3  
                                         u5011 1544                                           u5100 079E  
                                         u5020 0B33                                           u5101 079D  
                                         u5021 0B32                                           u2390 0928  
                                         u5030 0B39                                           u2391 0927  
                                         u2375 090F                                           u5031 0B38  
                                         u5120 07AE                                           u5040 0B44  
                                         u4400 0A95                                           u5200 04EC  
                                         u6000 169F                                           u5121 07AD  
                                         u2385 091C                                           u5041 0B43  
                                         u4401 0A94                                           u5201 04EB  
                                         u6001 169E                                           u5130 07B5  
                                         u4410 0A9B                                           u5210 04F2  
                                         u5050 15FA                                           u6010 16BA  
                                         u5131 07B4                                           u5115 07A0  
                                         u4411 0A9A                                           u5211 04F1  
                                         u5051 15F9                                           u6011 16B9  
                                         u6020 0EF3                                           u4420 0AAB  
                                         u2900 081D                                           u5300 0594  
                                         u5220 04F7                                           u5060 1607  
                                         u6100 0D92                                           u6021 0EF2  
                                         u4421 0AAA                                           u2901 081C  
                                         u5301 0593                                           u5221 04F6  
                                         u5061 1606                                           u6005 169B  
                                         u6101 0D91                                           u5150 07C4  
                                         u5070 076E                                           u6030 0EFE  
                                         u4510 0A10                                           u4430 0ACB  
                                         u5310 05A7                                           u5230 0512  
                                         u6110 0D9E                                           u5151 07C3  
                                         u5071 076D                                           u6031 0EFD  
                                         u4511 0A0F                                           u4431 0ACA  
                                         u5311 05A6                                           u5231 0511  
                                         u6015 16B6                                           u6111 0D9D  
                                         u4600 02F4                                           u5160 07C9  
                                         u5080 0784                                           u4440 0943  
                                         u6040 0C9F                                           u5400 05F2  
                                         u5320 05AF                                           u5240 0530  
                                         u6120 0DAE                                           u6200 08BF  
                                         u4601 02F3                                           u5161 07C8  
                                         u5145 07B7                                           u6025 0EEF  
                                         u4505 09F8                                           u4441 0942  
                                         u6041 0C9E                                           u5401 05F1  
                                         u5321 05AE                                           u5305 0590  
                                         u5241 052F                                           u6121 0DAD  
                                         u6201 08BE                                           u4610 030D  
                                         u5090 0797                                           u4450 0A35  
                                         u4530 0A26                                           u4370 07DC  
                                         u5410 05FE                                           u5250 0568  
                                         u5170 04C3                                           u6050 071D  
                                         u6130 0DBA                                           u6210 08D0  
                                         u4611 030C                                           u5091 0796  
                                         u4451 0A34                                           u4531 0A25  
                                         u4515 0A0C                                           u4371 07DB  
                                         u4435 0AC7                                           u5411 05FD  
                                         u5251 0567                                           u5171 04C2  
                                         u6051 071B                                           u6131 0DB9  
                                         u6211 08CF                                           u4700 0388  
                                         u4620 0311                                           u4540 02BB  
                                         u5500 00AE                                           u4380 07E0  
                                         u4460 166B                                           u5420 060C  
                                         u5340 05BC                                           u5180 04C9  
                                         u6060 071E                                           u6140 0DCA  
                                         u6220 08DD                                           _PMD0 0911  
                                         u4701 0387                                           u4621 0310  
                                         u4541 02BA                                           u5501 00AD  
                                         u5085 0780                                           u4525 0A1A  
                                         u4381 07DF                                           u4461 166A  
                                         u5341 05BB                                           u5181 04C8  
                                         u6141 0DC9                                           u6221 08DC  
                                         _PMD1 0912                                           u4710 038D  
                                         u4630 034B                                           u4550 02C1  
                                         u5510 00B3                                           u4470 09E5  
                                         u4390 07F6                                           u2870 14D9  
                                         u5430 0627                                           u5190 04CE  
                                         u6150 0DF9                                           u6070 0D55  
                                         _PMD2 0913                                           u4711 038C  
                                         u4631 034A                                           u4551 02C0  
                                         u5511 00B2                                           u4471 09E4  
                                         u4391 07F5                                           u2871 14D7  
                                         u5431 0626                                           u5335 05B2  
                                         u5191 04CD                                           u6151 0DF8  
                                         u6071 0D54                                           _PMD3 0914  
                                         u4720 03A2                                           u4640 0355  
                                         u4560 02C6                                           u5600 0204  
                                         u5520 00CA                                           u2880 14DA  
                                         u5440 0642                                           u5360 05CC  
                                         u5280 057A                                           u6160 0E1C  
                                         u6080 0D65                                           _PMD4 0915  
                                         u4721 03A1                                           u4641 0353  
                                         u4561 02C5                                           u5601 0203  
                                         u5521 00C9                                           u5441 0641  
                                         u5425 0608                                           u5361 05CB  
                                         u5281 0579                                           u5265 0569  
                                         u6161 0E1B                                           u6081 0D64  
                                         _PMD5 0916                                           u4810 0435  
                                         u4730 03A6                                           u4650 0356  
                                         u4570 02E2                                           u5530 00CF  
                                         u4490 09F7                                           u2890 0806  
                                         u5450 0655                                           u5370 05D1  
                                         u6090 0D82                                           u4811 0434  
                                         u4731 03A5                                           u4635 0347  
                                         u4571 02E1                                           u5531 00CE  
                                         u4491 09F6                                           u2891 0805  
                                         u5451 0654                                           u5435 0623  
                                         u5371 05D0                                           u5355 05BE  
                                         u5275 0570                                           u6091 0D81  
                                         u4900 047C                                           u4820 043A  
                                         u4740 03B0                                           u4660 0366  
                                         u4580 02E9                                           u5700 0287  
                                         u5620 0214                                           u5460 0080  
                                         u3780 1524                                           u5380 05E5  
                                         u4821 0439                                           u4805 042B  
                                         u4741 03AF                                           u4661 0365  
                                         u4581 02E8                                           u5701 0286  
                                         u5621 0213                                           u5461 007F  
                                         u3781 1523                                           u4485 09E9  
                                         u5445 063E                                           u5381 05E4  
                                         u4910 048B                                           u4830 0444  
                                         u4670 0370                                           u4590 02EF  
                                         u5710 02A1                                           u5630 0219  
                                         u5470 0086                                           u5390 05EC  
                                         u4911 048A                                           u4831 0443  
                                         u4671 036F                                           u4591 02EE  
                                         u5711 02A0                                           u5631 0218  
                                         u5615 0206                                           u5471 0085  
                                         u5391 05EB                                           u5295 057C  
                                         u4920 0494                                           u4840 044A  
                                         u4760 03D4                                           u5640 022D  
                                         u5560 01C5                                           u5480 008B  
                                         u5800 0C5E                                           u5720 0BF5  
                                         u4921 0493                                           u4905 0478  
                                         u4841 0449                                           u4761 03D3  
                                         u5705 0283                                           u5641 022C  
                                         u5545 0148                                           u5481 008A  
                                         u5801 0C5D                                           u5721 0BF4  
                                         u4930 0499                                           u4850 044F  
                                         u4770 0403                                           u4690 0384  
                                         u5650 0234                                           u5570 01DC  
                                         u5490 00A8                                           u5810 0C64  
                                         u5730 0BF9                                           u4931 0498  
                                         u4851 044E                                           u4771 0402  
                                         u4763 03D0                                           u4755 03B3  
                                         u4691 0383                                           u5651 0233  
                                         u5555 0173                                           u5491 00A7  
                                         u5811 0C63                                           u5731 0BF8  
                                         u4940 04A6                                           u4860 0455  
                                         u4780 041C                                           u5660 023A  
                                         u5820 0C68                                           u5740 0C19  
                                         u5900 09C6                                           u4941 04A5  
                                         u4861 0454                                           u4781 041B  
                                         u4685 0373                                           u5661 0239  
                                         u5565 01C1                                           u5821 0C67  
                                         u5741 0C18                                           u5901 09C5  
                                         u4950 04AB                                           u4870 045C  
                                         u4790 0421                                           u5670 0246  
                                         u5830 0C7C                                           u5910 0877  
                                         u4951 04AA                                           u4871 045B  
                                         u4791 0420                                           u5671 0245  
                                         u5575 01D8                                           u5911 0876  
                                         u4960 04B7                                           u4880 0462  
                                         u5680 0254                                           u5840 0C8B  
                                         u5760 0C36                                           u5920 087D  
                                         u4961 04B6                                           u4881 0461  
                                         u5585 01E7                                           u5841 0C8A  
                                         u5761 0C35                                           u5921 087C  
                                         u4890 046E                                           u4970 174C  
                                         u5690 026F                                           u5850 0C8F  
                                         u5930 089F                                           u4891 046D  
                                         u4971 174B                                           u5691 026E  
                                         u5595 01FA                                           u5851 0C8E  
                                         u5835 0C78                                           u5755 0C2A  
                                         u5931 089E                                           u5780 0C50  
                                         u5940 0F25                                           u5685 0250  
                                         u5781 0C4F                                           u5941 0F24  
                                         u4990 175C                                           u5870 0984  
                                         u5950 0F2B                                           u4991 175B  
                                         u5695 026B                                           u5775 0C44  
                                         u5871 0983                                           u5951 0F2A  
                                         u5935 089B                                           u5880 0993  
                                         u5960 0F9E                                           u5865 164A  
                                         u4985 1751                                           u5881 0992  
                                         u5961 0F9D                                           u5890 099F  
                                         u5970 0FA4                                           u5795 0C54  
                                         u5891 099E                                           u5971 0FA3  
                                         u5980 0FE0                                           u5981 0FDF  
                                         u5990 0FEF                                           u5991 0FEE  
                                         u5995 0FEB                                           _PLLR 48E0  
                                         _TMR2 001D                                           _TMR4 0415  
                      _TMR4_HasOverflowOccured 1562                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 01A0                                           _main 08A1  
                                         _line 0130                                           _prec 00AE  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E               __end_of_adcConversionDoneHandler 178E  
                                         start 003C                                ___fldiv@new_exp 0032  
                              _PWM5_Initialize 1525                      __end_of_SPI1_ExchangeByte 1549  
                            ___bmul@multiplier 0021                           ?i1_ADC_SelectChannel 0070  
                          printFloat@voorComma 00DA                     __end_of_PWM5_LoadDutyValue 1652  
                            ??_PI_GetDutycycle 0076                        __end_of_TMR0_Initialize 14E5  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 1525  
                                ___fltol@sign1 006C                                          _ADACT 009F  
                              __end_of___fladd 04B9                                          ?_main 0070  
                              __end_of___fldiv 0663                                          STR_10 1892  
                                        STR_11 1899                                          STR_12 187F  
                                        STR_13 1808                                          STR_14 18A9  
                                        STR_15 18A5                                          STR_16 1866  
                                        STR_17 1808                                          STR_18 1873  
                              __end_of___flmul 02B1                                __end_of___flsub 16F9  
             SPI1_Open@spi1UniqueConfiguration 0074                                __end_of___fltol 07D5  
                              __end_of___lldiv 0A2F                                __end_of___llmod 0931  
                                        _T2CON 001F                                          _T4CON 0417  
                                        i1l422 001B                                          i1l423 003A  
                                        i1l424 0029                                          i1l380 1638  
                                        i1l429 003A                                          i1l366 1719  
                                        i1l383 0003                                          i1l376 17C6  
                                        i1l481 158A                                          i1l369 171A  
                                        i1l386 1461                                          i1l459 1561  
                                        i1l468 147B                                          i1l389 145D  
                                        i1l487 1453                                          i1l870 178D  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 002C  
                                        _TMR0H 0016                                          _TMR0L 0015  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                              _TMR4_Initialize 14E5                                 ??_MASTER0_open 0075  
                             __end_of_PI_GetKi 15BC                               __end_of_PI_GetKp 15CD  
                                        _flags 00C6                                  PI_SetKi@value 00DC  
                               _WDT_Initialize 07FC                                          _error 00B8  
                                        _fputc 0A8E                               __end_of_PI_SetKi 14F9  
                             __end_of_PI_SetKp 1503                                          _width 00AC  
                                        _putch 14B2                                  PI_SetKp@value 00DC  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                          spi_master_open@config 0075  
                              printFloat@value 00D2                          ??i1_ADC_SelectChannel 0070  
                                ?_initLedStrip 0070                                __initialization 003E  
                                 __end_of_main 08E6                                 ??_EUSART_Write 0074  
                  updateLedstripAnimation@blue 00C8                        __end_of_TMR2_Initialize 14C9  
                                    ??_ADC_ISR 0074                    ?_INTERRUPT_InterruptManager 0070  
                      __end_of_getHoogteSensor 150E                 ??_EUSART_SetRxInterruptHandler 0076  
                                       ??_main 006F                         __end_of_WDT_Initialize 0800  
                    ??_TMR4_HasOverflowOccured 0074      __end_of_EUSART_DefaultFramingErrorHandler 0004  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0003                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00BE  
                                       ?_fputc 0021                               ___llmod@dividend 0024  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _T0CON0 0017                                         _T0CON1 0018  
                   __end_of_EUSART_is_rx_ready 14DB                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB4PPS 0E9C  
                                       _RB6PPS 0E9E                                         _RB7PPS 0E9F  
                                       _RC5PPS 0EA5                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l4061 1556                                         i1l4221 145E  
                                       i1l4063 1560                                         i1l4223 145A  
                                       i1l4411 1775                                         i1l4403 1761  
                      __end_of_PWM5_Initialize 1531                                         i1l4405 1762  
                                       i1l4407 176A                                         i1l4415 1778  
                                       i1l3631 162C                                         i1l4409 176D  
                                       i1l4417 1789                                         i1l3633 1632  
                                       i1l3635 1633                                         i1l3627 1620  
                                       i1l4451 1700                                         i1l3629 1628  
                                       i1l4461 178E                                         i1l4453 1708  
                                       i1l3639 1476                                         i1l4471 17A8  
                                       i1l4463 1793                                         i1l4455 170D  
                                       i1l4481 157C                                         i1l4473 17AD  
                                       i1l4465 1798                                         i1l4457 1713  
                                       i1l4449 16F9                                         i1l4721 000A  
                                       i1l4483 157E                                         i1l4475 17B3  
                                       i1l4467 179D                                         i1l4459 1714  
                                       i1l4731 002E                                         i1l4723 000F  
                                       i1l4485 1585                                         i1l4477 17BC  
                                       i1l4469 17A3                                         i1l4733 0033  
                                       i1l4725 0014                                         i1l6159 1781  
                                       i1l4479 17C3                                         i1l4727 0020  
                                       i1l4719 0006                                         i1l4729 0025  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u430_20 002E  
                                       u430_21 002D                                         u431_20 0033  
                                       u431_21 0032                                         u425_20 000A  
                                       u425_21 0009                                         u426_20 000F  
                                       u426_21 000E                                         u291_20 1632  
                                       u427_20 0014                                         u291_21 1631  
                                       u427_21 0013                                         u428_20 0020  
                                       u428_21 001F                                         u429_20 0025  
                                       u429_21 0024                                         u394_20 1700  
                                       u394_21 16FF                                         u395_20 1713  
                                       u395_21 1712                                         u396_20 1798  
                                       u396_21 1797                                         _OSCFRQ 091F  
                                       u397_20 17A8                                         u397_21 17A7  
                                       u398_20 17BC                                         u398_21 17BB  
                                       u399_20 1585                                         u399_21 1584  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                               __end_of___xxtofl 0C99  
                                 ?_uartHandler 0070                                 ??_initLedStrip 0076  
                            __end_of_SPI1_Open 0A8E                                   vfprintf@cfmt 0038  
                                       ___bmul 15F3                                      ??___fladd 0036  
                      _updateLedstripAnimation 0D4D                                      ??___fldiv 0028  
                                    ??___flmul 0052                                      ??___flsub 0076  
                                    ??___fltol 0068                                      ??___lldiv 0074  
                                    ??___llmod 0074                                         _buffer 014F  
                            ?_getPotentiometer 0070                            _EUSART_Transmit_ISR 16F9  
                             __end_of_readLine 09D4                               ?_TMR0_Initialize 0070  
                      __end_of_TMR4_Initialize 14EF                                         _printf 158B  
                           ??_getPotentiometer 0074                                         fputc@c 0021  
                               _PMD_Initialize 14B9                      ?_adcConversionDoneHandler 0070  
                              ?_WDT_Initialize 0070                               __end_of_printStr 166C  
                             __end_of_vfprintf 16D9        ADC_SetInterruptHandler@InterruptHandler 0074  
                                 ?_printUint32 002D                           ?_EUSART_Transmit_ISR 0070  
                                 ___xxtofl@arg 002A                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 171B                                   ___xxtofl@val 0020  
                      __end_of__initialization 0072                                 _SPI1_ReadBlock 0000  
                             ??_PI_SetSetpoint 0074                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0064           __end_of_EUSART_SetTxInterruptHandler 14A0  
                 _EUSART_SetTxInterruptHandler 149A                            ___bmul@multiplicand 0074  
                               __pcstackCOMMON 0070                                   __pidataBANK1 1549  
                                 __pidataBANK2 159B                            ??_SYSTEM_Initialize 0076  
                         __end_of_MASTER0_open 146C                                  __end_of_fputc 0AED  
                            ??_SPI1_Initialize 0074                                      ?_PI_GetKi 0020  
                                    ?_PI_GetKp 0020                                  __end_of_putch 14B9  
                                    ?_PI_SetKi 00DC                                      ?_PI_SetKp 00DC  
                             ?_TMR2_Initialize 0070                                     __end_of_PI 0F08  
                       __end_of_PMD_Initialize 14C1                               ?_getHoogteSensor 0070  
                        SPI1_ExchangeByte@data 0074                        _ADC_GetConversionResult 1476  
                           _spi1_configuration 1800                           _eusartRxStatusBuffer 00A0  
               updateLedstripAnimation@led_run 00CA                ??_EUSART_SetOverrunErrorHandler 0076  
                                      ??_fputc 0025                      __end_of_SYSTEM_Initialize 173D  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0076  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                           __end_of_EUSART_Write 07FC  
                             ?_PWM5_Initialize 0070                            PI_SetSetpoint@value 0074  
                            _Send_LED_EndFrame 16A0                                _PI_GetDutycycle 14A0  
                               _SPI1_WriteByte 0000                             ?_Send_LED_EndFrame 0070  
                    ??_updateLedstripAnimation 0023                              __end_of__Umul8_16 1761  
                                   __pmaintext 08A1                                        ?___bmul 0074  
                ?_EUSART_SetTxInterruptHandler 0074               _EUSART_TxDefaultInterruptHandler 00C4  
                          ??_Send_LED_EndFrame 0075                                     __pintentry 0004  
                                   ??_PI_GetKi 0074                                     ??_PI_GetKp 0074  
                                      _ADC_ISR 157C                           Send_LED_StartFrame@i 0020  
                                   ??_PI_SetKi 0076                                     ??_PI_SetKp 0076  
                             ?_TMR4_Initialize 0070                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 003A                                ?_PMD_Initialize 0070  
                                _eusartRxCount 00CF                                      ?___xxtofl 0020  
                           _PWM5_LoadDutyValue 1639                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                           __end_of_initLedStrip 1471  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                        printUint32@leadingZeros 0031  
                     ??_EUSART_SetErrorHandler 0076                      __end_of_Send_LED_EndFrame 16BB  
                      _TMR0_HasOverflowOccured 1462                            ?_PWM5_LoadDutyValue 0074  
                                    ?_readLine 003D                           _ADC_InterruptHandler 00BA  
                      _ADC_SetInterruptHandler 147C                                      ?_printStr 0070  
                                      ___fladd 02B1                                        ___fldiv 04B9  
                                      ___flmul 0076                                        ___flsub 16D9  
                                      ___fltol 0764                                        ___lldiv 09D4  
                               uartHandler@str 006E                                        ___llmod 08E6  
                                    ?_vfprintf 0032                           ??_PWM5_LoadDutyValue 0020  
                    ??_ADC_GetConversionResult 0072                     __end_of_PI_GetSensorHeight 1457  
                                      __ptext1 0D4D                                        __ptext2 1686  
                                      __ptext3 166C                                        __ptext4 16A0  
                                      __ptext5 153D                                        __ptext6 0663  
                                      __ptext7 0861                                        __ptext8 15F3  
                                      __ptext9 0F08                          _OSCILLATOR_Initialize 1519  
                                    _T2CONbits 001F                __end_of_updateLedstripAnimation 0E20  
                                   ??___xxtofl 0024                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 0074                        __end_of_PI_GetDutycycle 14A6  
                                      clrloop0 14A7                           end_of_initialization 0072  
                          _Send_LED_StartFrame 1686          __end_of_EUSART_SetOverrunErrorHandler 1494  
                _EUSART_SetOverrunErrorHandler 148E                                        fputc@fp 0023  
                  __end_ofi1_ADC_SelectChannel 1562                                     ??_readLine 003F  
                                      init_ram 14AC                                 main@printCycle 00CC  
                                      initloop 14AD                              __end_of_spiMaster 184A  
                            _EUSART_Initialize 0824                              __end_of_str2float 1000  
                              ___lldiv@divisor 0020                              __end_of_str2uint8 08A1  
                              ___lldiv@counter 002C                              __end_of_printLogs 0D4D  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 097C  
                           _EUSART_is_rx_ready 14D2                                     ??_printStr 0020  
                            ??_spi_master_open 0023                           ?_Send_LED_StartFrame 0070  
                                ?_printNewLine 0070                                     ??_vfprintf 0037  
                                    _SPI1_Open 0A2F                            ??_EUSART_Initialize 0076  
                             ??_WDT_Initialize 0074                                     _prev_error 00B6  
               ??_EUSART_SetTxInterruptHandler 0076                                     _printFloat 0B4F  
                          ?_EUSART_is_rx_ready 0070                              printFloat@naComma 00D6  
                                  ___fladd@grs 0041            __end_of_ADC_DefaultInterruptHandler 1454  
                  _ADC_DefaultInterruptHandler 1453                                  ___xxtofl@sign 0028  
                                    _TRISBbits 008D                      ??_TMR0_HasOverflowOccured 0074  
                                  ___fldiv@grs 0034                                    ___fldiv@rem 002D  
                   __end_of_initAdcMultiplexer 153D                                   _MASTER0_open 1467  
                                  ___flmul@grs 0059                      __end_of_EUSART_Initialize 0861  
                ??_ADC_DefaultInterruptHandler 0070                           ??_EUSART_is_rx_ready 0074  
                    ??_ADC_SetInterruptHandler 0076                                _SPI1_Initialize 15DF  
                      Send_LED_Frame@intensity 0075                                    printStr@str 0021  
                               ??_printNewLine 0076                          ??_Send_LED_StartFrame 0075  
                               __end_of___bmul 1609                                     ?_SPI1_Open 0070  
           __end_of_EUSART_DefaultErrorHandler 145E                     _EUSART_DefaultErrorHandler 145A  
                                  vfpfcnvrt@ap 002D                                    vfpfcnvrt@fp 002A  
                                 _EUSART_Write 07D5                                 _ADC_Initialize 15CD  
                       ?_OSCILLATOR_Initialize 0070                       ?_TMR4_HasOverflowOccured 0070  
                               __end_of_printf 159B                            start_initialization 003E  
                                ??_EUSART_Read 0074                               ?_PI_GetDutycycle 0074  
                   updateLedstripAnimation@led 0025   EUSART_SetRxInterruptHandler@interruptHandler 0074  
 EUSART_SetTxInterruptHandler@interruptHandler 0074                     updateLedstripAnimation@red 00ED  
                                  putch@txData 0020                                str2float@cijfer 00DB  
                              ___llmod@divisor 0020                                ___llmod@counter 0075  
               ?_EUSART_SetOverrunErrorHandler 0074                                    vfprintf@fmt 0034  
                                 _initLedStrip 146C                     _EUSART_FramingErrorHandler 00C0  
                                     ??___bmul 0075                               ??_PMD_Initialize 0074  
                             printUint32@getal 002D                         _EUSART_SetErrorHandler 1482  
                       __end_of_ADC_Initialize 15DF                                      __Umul8_16 173D  
                                  __pdataBANK1 00E4                                    __pdataBANK2 014F  
                                     ?_ADC_ISR 0070                       _adcConversionDoneHandler 1761  
                                     ??_printf 0076                                    ?_printFloat 00D2  
                                    ___fladd@a 0032                                      ___fladd@b 002E  
                                    ___fldiv@a 0020                                      ___fldiv@b 0024  
                  __end_of_EUSART_Transmit_ISR 171B                    PWM5_LoadDutyValue@dutyValue 0074  
                                _SPI1_ReadByte 0000                                      ___flmul@a 004E  
                                    ___flmul@b 004A                                    __pbssCOMMON 0076  
                                    ___flsub@a 0042                                      ___flsub@b 0046  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00D2                        __end_of_SPI1_Initialize 15F3  
                              _SPI1_WriteBlock 0000                     __end_of_EUSART_Receive_ISR 17C7  
             _EUSART_RxDefaultInterruptHandler 00C2                            __end_of_EUSART_Read 0824  
                                 _hoogteSensor 00B2                   __end_of_EUSART_RxDataHandler 1639  
                               _PI_GetSetPoint 1457                         _PIN_MANAGER_Initialize 17C7  
                               _Send_LED_Frame 166C                           EUSART_Read@readValue 0075  
                            _ADC_SelectChannel 156F                                       ?___fladd 002E  
                                     ?___fldiv 0020                                       ?___flmul 004A  
                                     ?___flsub 0042                                       ?___fltol 0064  
                                     ?___lldiv 0020                                       ?___llmod 0020  
                                   ?__Umul8_16 0074                                    ??_SPI1_Open 0020  
                              ?_ADC_Initialize 0070                __end_of_TMR4_HasOverflowOccured 156F  
                                 _eusartRxHead 0078                             ?_ADC_SelectChannel 0070  
                                 _eusartTxHead 0079                                   _eusartRxTail 0077  
                                 _eusartTxTail 00D1                   ??_INTERRUPT_InterruptManager 0074  
          updateLedstripAnimation@change_color 00C9                        _eusartTxBufferRemaining 00D0  
                                     _BAUD1CON 019F                            ??_ADC_SelectChannel 0074  
              adcConversionDoneHandler@channel 00EC                               _getPotentiometer 150E  
                           _PI_GetSensorHeight 1454                           __end_of_printNewLine 14D2  
                               _eusartRxBuffer 0120                                      _dutycycle 00B4  
                            ??_TMR0_Initialize 0074                       ?_updateLedstripAnimation 0070  
                               _eusartTxBuffer 0128                                _spi_master_open 1609  
       EUSART_SetErrorHandler@interruptHandler 0074                         __end_of_PI_GetSetPoint 145A  
                                    clear_ram0 14A6                         __end_of_Send_LED_Frame 1686  
                                     _PIE1bits 0091                            ?_PI_GetSensorHeight 0070  
                            _eusartRxLastError 00CE                                  ??_uartHandler 00E0  
                    __end_of_ADC_SelectChannel 157C                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0076  
                                     _PIR2bits 0012                                      _spiMaster 1836  
                                   str2float@i 00D2                                      _str2float 0F08  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
    __end_of_EUSART_DefaultOverrunErrorHandler 1462            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 145E  
                                    _str2uint8 0861                                       _SSP1STAT 0214  
                                    _printLogs 0C99                                       _PI_GetKi 15AB  
                                     _PI_GetKp 15BC                                      _vfpfcnvrt 0931  
                                     _PI_SetKi 14EF                                       _PI_SetKp 14F9  
                                   str2uint8@i 0024                                     _ADCON0bits 009D  
                     ADC_SelectChannel@channel 0075                           ??_PI_GetSensorHeight 0074  
                TMR4_HasOverflowOccured@status 0074                                  readLine@index 0076  
                                  _EUSART_Read 0800                                  ??_printUint32 0032  
                             ?_SPI1_Initialize 0070                              ??_TMR2_Initialize 0074  
                            ??_getHoogteSensor 0074                                ?_PI_GetSetPoint 0070  
                              ?_Send_LED_Frame 0020                                 str2float@getal 00D7  
                           _initAdcMultiplexer 1531                                     vfprintf@ap 0036  
                                   vfprintf@fp 0032                       ?_ADC_GetConversionResult 0070  
                                   ?_str2float 0064                     i1ADC_SelectChannel@channel 0071  
                                   ?_str2uint8 0070                        ??_OSCILLATOR_Initialize 0074  
                                  ??__Umul8_16 0020                            _EUSART_ErrorHandler 00BC  
                                   ?_printLogs 0070                            __end_of_uartHandler 0764  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 002A  
                          ?_initAdcMultiplexer 0070                              ??_PWM5_Initialize 0074  
                                     ___xxtofl 0BEE                                     _T0CON0bits 0017  
                         _EUSART_RxDataHandler 1620                        __end_of_spi_master_open 1620  
                                     __ptext10 04B9                                       __ptext11 097C  
                                     __ptext20 158B                                       __ptext12 14D2  
                                     __ptext21 16BB                                       __ptext13 0800  
                                     __ptext30 16D9                                       __ptext22 0931  
                                     __ptext14 1471                                       __ptext31 1457  
                                     __ptext23 0A8E                                       __ptext15 14F9  
                                     __ptext40 1531                                       __ptext32 1454  
                                     __ptext24 14B2                                       __ptext16 14EF  
                                     __ptext41 156F                                       __ptext33 15BC  
                                     __ptext25 0AED                                       __ptext17 0C99  
                                     __ptext50 1525                                       __ptext42 1562  
                                     __ptext34 15AB                                       __ptext26 1652  
                                     __ptext18 14C9                                       __ptext51 14B9  
                                     __ptext43 1462                                       __ptext35 14A0  
                                     __ptext27 07D5                                       __ptext19 0B4F  
                                     __ptext60 15CD                                       __ptext52 17C7  
                                     __ptext44 171B                                       __ptext36 146C  
                                     __ptext28 08E6                                       __ptext61 147C  
                                     __ptext53 1519                                       __ptext45 07FC  
                                     __ptext37 1609                                       __ptext29 09D4  
                                     __ptext70 1639                                       __ptext62 0E20  
                                     __ptext54 0824                                       __ptext46 14E5  
                                     __ptext38 1467                                       __ptext63 150E  
                                     __ptext55 149A                                       __ptext47 14C1  
                                     __ptext39 0A2F                                       __ptext80 1761  
                                     __ptext72 16F9                                       __ptext64 1503  
                                     __ptext56 1494                                       __ptext48 14DB  
                                     __ptext81 1555                                       __ptext73 178E  
                                     __ptext65 0BEE                                       __ptext57 148E  
                                     __ptext49 15DF                                       __ptext82 1476  
                                     __ptext74 145E                                       __ptext66 0764  
                                     __ptext58 1488                                       __ptext75 0003  
                                     __ptext67 0076                                       __ptext59 1482  
                                     __ptext76 145A                                       __ptext68 173D  
                                     __ptext77 1620                                       __ptext69 02B1  
                                     __ptext78 157C                                       __ptext79 1453  
                                 _SSP1CON1bits 0215                           ??_initAdcMultiplexer 0076  
                                     _readLine 097C                              ??_TMR4_Initialize 0074  
                                     _integral 00A8                            __end_of_printUint32 0B4F  
                  __end_of_Send_LED_StartFrame 16A0                     ??_adcConversionDoneHandler 0072  
                      ?_EUSART_SetErrorHandler 0074                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0074                                       _setpoint 00EF  
                                     _printStr 1652                                       int$flags 007E  
                               _PI_SetSetpoint 1471                                       _vfprintf 16BB  
           __end_of_INTERRUPT_InterruptManager 003C                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 003A          __end_of_EUSART_SetFramingErrorHandler 148E  
                _EUSART_SetFramingErrorHandler 1488                   updateLedstripAnimation@green 00C7  
                                 ??_printFloat 0076                       ?_TMR0_HasOverflowOccured 0070  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                                 _sensorHeight 00CD                                 __pstringtext10 1892  
                               __pstringtext11 1899                                 __pstringtext12 18A0  
                               __pstringtext13 18A5                                 __pstringtext14 18A9  
                               __pstringtext15 18AD                                 __pstringtext16 0000  
                          Send_LED_Frame@green 0021                             Send_LED_EndFrame@i 0020  
                     ?_ADC_SetInterruptHandler 0074                                       intlevel1 0000  
                             ___lldiv@dividend 0024                        ?_PIN_MANAGER_Initialize 0070  
              __end_of_ADC_GetConversionResult 147C                 __end_of_EUSART_SetErrorHandler 1488  
                           __end_of_printFloat 0BEE                               ??_ADC_Initialize 0076  
         __end_of_EUSART_SetRxInterruptHandler 149A                   _EUSART_SetRxInterruptHandler 1494  
                                  _uartHandler 0663                         __end_of_PI_SetSetpoint 1476  
                                  ??_str2float 0068                                  _mustPrintLogs 00EE  
                                     printf@ap 003C                             _EUSART_Receive_ISR 178E  
                                  ??_str2uint8 0022                          str2float@kommaCounter 00D5  
                     __end_of_getPotentiometer 1519  EUSART_SetFramingErrorHandler@interruptHandler 0074  
                                  ??_printLogs 00DC                                   _printNewLine 14C9  
                                  ??_vfpfcnvrt 002E                                   str2float@str 00D6  
                                __pstringtext1 1836                                  __pstringtext2 1800  
                                __pstringtext3 1820                                  __pstringtext4 184A  
                                __pstringtext5 1859                                  __pstringtext6 1866  
                                __pstringtext7 1873                                  __pstringtext8 187F  
                                __pstringtext9 1889                                     _SPI1_Close 0000  
                        str2float@kommaPresent 00D4                             Send_LED_Frame@blue 0020  
                       __Umul8_16@multiplicand 0074                            ?_EUSART_Receive_ISR 0070  
                                   _SSP1DATPPS 0E21                                     _SSP1CLKPPS 0E20  
             updateLedstripAnimation@direction 00CB                               ___lldiv@quotient 0028  
                              _TMR0_Initialize 14DB                                  _potentiometer 00B0  
                                  _printBuffer 0144                               ?_spi_master_open 0070  
                                   _TX1STAbits 019E                                  ___fladd@signs 003E  
                                  _printUint32 0AED                              Send_LED_Frame@red 0022  
                           EUSART_Write@txData 0075                 __end_of_PIN_MANAGER_Initialize 1800  
                                  _PWMTMRSbits 061F                                   ___fladd@aexp 003F  
                                 ___fladd@bexp 0040                           ??_EUSART_Receive_ISR 0071  
                              str2uint8@cijfer 0026                           __Umul8_16@multiplier 0026  
                               str2uint8@getal 0027                     __end_of_spi1_configuration 1808  
                            __Umul8_16@product 0022                                   str2uint8@str 0023  
